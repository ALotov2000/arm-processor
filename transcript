do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying modelsim.ini
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/forwarding-unit.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Compiling module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 13:21:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 13:21:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 13:21:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 13:21:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 13:21:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 13:21:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Compiling module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 13:21:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 13:21:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 13:21:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Compiling module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 13:21:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Compiling module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Compiling module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Compiling module Memory
# 
# Top level modules:
# 	Memory
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Compiling module Register
# 
# Top level modules:
# 	Register
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/forwarding-unit.component.v 
# -- Compiling module ForwardingUnit
# 
# Top level modules:
# 	ForwardingUnit
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:21:40 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 13:21:40 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 13:21:40 on Jan 01,2025
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'SRC1'. The port definition is at: src/hdl/stages/instruction-decode.stage.v(21).
#    Time: 0 ps  Iteration: 0  Instance: /ARMModuleTest/u_ARMModule/u_InstructionDecodeStage File: src/hdl/arm.module.v Line: 75
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'SRC2'. The port definition is at: src/hdl/stages/instruction-decode.stage.v(22).
#    Time: 0 ps  Iteration: 0  Instance: /ARMModuleTest/u_ARMModule/u_InstructionDecodeStage File: src/hdl/arm.module.v Line: 75
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=        20, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=         4
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        40
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=         9
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in= 805306373
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 10025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying modelsim.ini
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/forwarding-unit.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Compiling module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Compiling module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Compiling module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Compiling module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Compiling module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Compiling module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:15:59 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:15:59 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Compiling module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:16:00 on Jan 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:16:00 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:16:00 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:16:00 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:16:00 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:16:00 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Compiling module Register
# 
# Top level modules:
# 	Register
# End time: 14:16:00 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:16:00 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/forwarding-unit.component.v 
# -- Compiling module ForwardingUnit
# 
# Top level modules:
# 	ForwardingUnit
# End time: 14:16:00 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:16:00 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:16:00 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:16:00 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:16:00 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:16:00 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:16:00 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:16:00 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:16:00 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:16:00 on Jan 01,2025, Elapsed time: 0:54:20
# Errors: 0, Warnings: 2
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:16:00 on Jan 01,2025
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# Loading work.ForwardingUnit
# ** Warning: (vsim-2685) [TFMPC] - Too few port connections for 'u_ARMModule'.  Expected 3, found 2.
#    Time: 0 ps  Iteration: 0  Instance: /ARMModuleTest/u_ARMModule File: src/test/integration.test.v Line: 4
# ** Warning: (vsim-3722) src/test/integration.test.v(4): [TFMPC] - Missing connection for port 'forwardingEnabled'.
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'SRC1'. The port definition is at: src/hdl/stages/instruction-decode.stage.v(21).
#    Time: 0 ps  Iteration: 0  Instance: /ARMModuleTest/u_ARMModule/u_InstructionDecodeStage File: src/hdl/arm.module.v Line: 78
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'SRC2'. The port definition is at: src/hdl/stages/instruction-decode.stage.v(22).
#    Time: 0 ps  Iteration: 0  Instance: /ARMModuleTest/u_ARMModule/u_InstructionDecodeStage File: src/hdl/arm.module.v Line: 78
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = x
# instruction decode stage: control = x
# instruction decode stage: control = x
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = x
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = x
# instruction stage register: writebackEnabled_in = x
# instruction decode stage: control = x
# instruction decode stage: control = x
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = x
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# memory stage register: writebackEnabled_in = x
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = x
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = x
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= x, givenAddress=         x, data_in=      4096
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= x, givenAddress=         x, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= x, givenAddress=         x, data_in=         x
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=         x
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=         x
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=         x
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= x, givenAddress=         x, data_in=         x
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = x
# instruction decode stage: control = x
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = x
# instruction decode stage: control = x
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000XX
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=000000000000000000000000xxx1xx00
# instruction fetch stage: Branch_Taken=x
# pc register: freeze = 0
# pc register: in = xxxxxxxx
# pc register: out = 000000XX
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=000000000000000000000000xxx1xx00
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = xxxxxxxx
# pc register: out = xxxxxxxx
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = x
# instruction decode stage: control = x
# instruction decode stage: control = x
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = x
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = x
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 10025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying modelsim.ini
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/forwarding-unit.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:06 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:19:06 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:06 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:19:06 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:06 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:19:06 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:06 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:19:06 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:06 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:19:06 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:06 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Compiling module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Compiling module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/forwarding-unit.component.v 
# -- Skipping module ForwardingUnit
# 
# Top level modules:
# 	ForwardingUnit
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:19:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:19:08 on Jan 01,2025, Elapsed time: 0:03:08
# Errors: 0, Warnings: 4
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:19:08 on Jan 01,2025
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# Loading work.ForwardingUnit
# ** Warning: (vsim-2685) [TFMPC] - Too few port connections for 'u_ARMModule'.  Expected 3, found 2.
#    Time: 0 ps  Iteration: 0  Instance: /ARMModuleTest/u_ARMModule File: src/test/integration.test.v Line: 4
# ** Warning: (vsim-3722) src/test/integration.test.v(4): [TFMPC] - Missing connection for port 'forwardingEnabled'.
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'SRC1'. The port definition is at: src/hdl/stages/instruction-decode.stage.v(21).
#    Time: 0 ps  Iteration: 0  Instance: /ARMModuleTest/u_ARMModule/u_InstructionDecodeStage File: src/hdl/arm.module.v Line: 78
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'SRC2'. The port definition is at: src/hdl/stages/instruction-decode.stage.v(22).
#    Time: 0 ps  Iteration: 0  Instance: /ARMModuleTest/u_ARMModule/u_InstructionDecodeStage File: src/hdl/arm.module.v Line: 78
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = x
# instruction decode stage: control = x
# instruction decode stage: control = x
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = x
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = x
# instruction stage register: writebackEnabled_in = x
# instruction decode stage: control = x
# instruction decode stage: control = x
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = x
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# memory stage register: writebackEnabled_in = x
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = x
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = x
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= x, givenAddress=         x, data_in=      4096
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= x, givenAddress=         x, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= x, givenAddress=         x, data_in=         x
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=         x
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=         x
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=         x
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= x, givenAddress=         x, data_in=         x
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = x
# instruction decode stage: control = x
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = x
# instruction decode stage: control = x
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000XX
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=000000000000000000000000xxx1xx00
# instruction fetch stage: Branch_Taken=x
# pc register: freeze = 0
# pc register: in = xxxxxxxx
# pc register: out = 000000XX
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=000000000000000000000000xxx1xx00
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = xxxxxxxx
# pc register: out = xxxxxxxx
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = x
# instruction decode stage: control = x
# instruction decode stage: control = x
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = x
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = x
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 10025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying modelsim.ini
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/forwarding-unit.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:21:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:21:08 on Jan 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/forwarding-unit.component.v 
# -- Skipping module ForwardingUnit
# 
# Top level modules:
# 	ForwardingUnit
# End time: 14:21:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:21:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:21:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:21:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:21:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Compiling module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:21:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:21:10 on Jan 01,2025, Elapsed time: 0:02:02
# Errors: 0, Warnings: 4
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:21:10 on Jan 01,2025
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# Loading work.ForwardingUnit
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'SRC1'. The port definition is at: src/hdl/stages/instruction-decode.stage.v(21).
#    Time: 0 ps  Iteration: 0  Instance: /ARMModuleTest/u_ARMModule/u_InstructionDecodeStage File: src/hdl/arm.module.v Line: 78
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'SRC2'. The port definition is at: src/hdl/stages/instruction-decode.stage.v(22).
#    Time: 0 ps  Iteration: 0  Instance: /ARMModuleTest/u_ARMModule/u_InstructionDecodeStage File: src/hdl/arm.module.v Line: 78
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = x
# instruction decode stage: control = x
# instruction decode stage: control = x
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = x
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = x
# instruction stage register: writebackEnabled_in = x
# instruction decode stage: control = x
# instruction decode stage: control = x
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = x
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# memory stage register: writebackEnabled_in = x
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = x
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = x
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= x, givenAddress=         x, data_in=      4096
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= x, givenAddress=         x, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= x, givenAddress=         x, data_in=         x
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=         x
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=         x
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=         x
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= x, givenAddress=         x, data_in=         x
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = x
# instruction decode stage: control = x
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = x
# instruction decode stage: control = x
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000XX
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=000000000000000000000000xxx1xx00
# instruction fetch stage: Branch_Taken=x
# pc register: freeze = 0
# pc register: in = xxxxxxxx
# pc register: out = 000000XX
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=000000000000000000000000xxx1xx00
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = xxxxxxxx
# pc register: out = xxxxxxxx
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = x
# instruction decode stage: control = x
# instruction decode stage: control = x
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = x
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = x
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: PC_next=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# instruction fetch stage: Branch_Taken=0
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(30)
#    Time: 10025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 30
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying modelsim.ini
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/forwarding-unit.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:23:11 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:11 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:23:12 on Jan 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:23:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:23:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:23:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/forwarding-unit.component.v 
# -- Skipping module ForwardingUnit
# 
# Top level modules:
# 	ForwardingUnit
# End time: 14:23:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:23:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:23:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:23:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:23:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Compiling module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:23:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:23:13 on Jan 01,2025, Elapsed time: 0:02:03
# Errors: 0, Warnings: 2
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:23:13 on Jan 01,2025
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# Loading work.ForwardingUnit
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'SRC1'. The port definition is at: src/hdl/stages/instruction-decode.stage.v(21).
#    Time: 0 ps  Iteration: 0  Instance: /ARMModuleTest/u_ARMModule/u_InstructionDecodeStage File: src/hdl/arm.module.v Line: 78
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'SRC2'. The port definition is at: src/hdl/stages/instruction-decode.stage.v(22).
#    Time: 0 ps  Iteration: 0  Instance: /ARMModuleTest/u_ARMModule/u_InstructionDecodeStage File: src/hdl/arm.module.v Line: 78
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=        20, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=         4
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        40
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=         9
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in= 805306373
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=4294967284
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(30)
#    Time: 10025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 30
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying modelsim.ini
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/forwarding-unit.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:35 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:26:35 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:35 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:26:35 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:35 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:26:35 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:35 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:26:35 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:35 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:26:35 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:35 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:26:35 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:35 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:26:35 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:35 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:26:35 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:35 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:26:35 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:35 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Compiling module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:26:35 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:35 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:26:35 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:35 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:26:35 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:35 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:26:35 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:35 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:26:35 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:35 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:26:36 on Jan 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:36 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:26:36 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:36 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:26:36 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:36 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:26:36 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:36 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:26:36 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:36 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:26:36 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:36 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:26:36 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:36 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:26:36 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:36 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:26:36 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:36 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:26:36 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:36 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/forwarding-unit.component.v 
# -- Skipping module ForwardingUnit
# 
# Top level modules:
# 	ForwardingUnit
# End time: 14:26:36 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:36 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:26:36 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:36 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:26:36 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:36 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:26:36 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:26:36 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Compiling module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:26:36 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:26:38 on Jan 01,2025, Elapsed time: 0:03:25
# Errors: 0, Warnings: 2
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:26:38 on Jan 01,2025
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# Loading work.ForwardingUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1036, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(30)
#    Time: 10025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 30
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying modelsim.ini
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/forwarding-unit.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:27:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:09 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:27:09 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:09 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:27:09 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:09 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:27:09 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:09 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:27:09 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:09 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:27:09 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:09 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:27:09 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:09 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/forwarding-unit.component.v 
# -- Skipping module ForwardingUnit
# 
# Top level modules:
# 	ForwardingUnit
# End time: 14:27:09 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:09 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:27:09 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:09 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:27:09 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:09 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:27:09 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:27:09 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Compiling module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:27:09 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:27:10 on Jan 01,2025, Elapsed time: 0:00:32
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:27:10 on Jan 01,2025
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# Loading work.ForwardingUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1036, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(30)
#    Time: 10025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 30
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying modelsim.ini
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/forwarding-unit.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Compiling module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Compiling module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:41:12 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:12 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:41:13 on Jan 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:13 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:41:13 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:13 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:41:13 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:13 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/forwarding-unit.component.v 
# -- Skipping module ForwardingUnit
# 
# Top level modules:
# 	ForwardingUnit
# End time: 14:41:13 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:13 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:41:13 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:13 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:41:13 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:13 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:41:13 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:13 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:41:13 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:41:13 on Jan 01,2025, Elapsed time: 0:14:03
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:41:13 on Jan 01,2025
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# Loading work.ForwardingUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1036, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(30)
#    Time: 10025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 30
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying modelsim.ini
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/forwarding-unit.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:52:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:52:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:52:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:52:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:52:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:52:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:52:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:52:07 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:07 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Compiling module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Compiling module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/forwarding-unit.component.v 
# -- Skipping module ForwardingUnit
# 
# Top level modules:
# 	ForwardingUnit
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:08 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Compiling module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:52:08 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:52:10 on Jan 01,2025, Elapsed time: 0:10:57
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:52:10 on Jan 01,2025
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# Loading work.ForwardingUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = x
# pc register: freeze = 0
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1036, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(30)
#    Time: 10025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 30
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying modelsim.ini
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/forwarding-unit.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/forwarding-unit.component.v 
# -- Skipping module ForwardingUnit
# 
# Top level modules:
# 	ForwardingUnit
# End time: 14:52:47 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:47 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:52:48 on Jan 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:48 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:52:48 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:48 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:52:48 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:48 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Compiling module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:52:48 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:52:49 on Jan 01,2025, Elapsed time: 0:00:39
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:52:49 on Jan 01,2025
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# Loading work.ForwardingUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = x
# pc register: freeze = 0
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1036, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(30)
#    Time: 10025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 30
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying modelsim.ini
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/forwarding-unit.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:38 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:54:38 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:38 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:54:38 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:38 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:54:38 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:38 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:54:38 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:38 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:54:38 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:38 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:54:38 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:38 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:54:38 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:38 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:54:38 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:38 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:54:38 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:38 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:54:38 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:38 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:54:38 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:38 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:54:38 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:38 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:54:38 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:38 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/forwarding-unit.component.v 
# -- Skipping module ForwardingUnit
# 
# Top level modules:
# 	ForwardingUnit
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jan 01,2025
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Compiling module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:54:39 on Jan 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:54:41 on Jan 01,2025, Elapsed time: 0:01:52
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:54:41 on Jan 01,2025
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# Loading work.ForwardingUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = x
# pc register: freeze = 0
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1036, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(30)
#    Time: 10025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 30
