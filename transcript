do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying modelsim.ini
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/sram-controller.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/forwarding-unit.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/mocks/sram.mock.v
# src/hdl/ARM.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:22 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 17:13:22 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:22 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 17:13:22 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:22 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Compiling module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 17:13:22 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:22 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 17:13:22 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:22 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Compiling module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 17:13:22 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:22 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Compiling module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 17:13:22 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:22 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 17:13:22 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:22 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Compiling module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 17:13:22 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:22 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Compiling module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/sram-controller.component.v 
# -- Compiling module SRAMController
# 
# Top level modules:
# 	SRAMController
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Compiling module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/forwarding-unit.component.v 
# -- Skipping module ForwardingUnit
# 
# Top level modules:
# 	ForwardingUnit
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/mocks/sram.mock.v 
# -- Compiling module SRAM
# 
# Top level modules:
# 	SRAM
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Skipping module ARM
# 
# Top level modules:
# 	ARM
# End time: 17:13:23 on Jan 08,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:13:23 on Jan 08,2025
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Compiling module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 17:13:24 on Jan 08,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 17:13:24 on Jan 08,2025
# Loading work.ARMModuleTest
# Loading work.SRAM
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.MemoryStage
# Loading work.SRAMController
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# Loading work.ForwardingUnit
# ** Note: (vsim-8716) Reusing existing debug database vsim.dbg.
# ** UI-Msg: (vish-4014) No objects found matching '/ARMModuleTest/u_ARMModule/u_MemoryStage/u_Memory/memoryRead'.
# ** UI-Msg: (vish-4014) No objects found matching '/ARMModuleTest/u_ARMModule/u_MemoryStage/u_Memory/memoryWrite'.
# Executing ONERROR command at macro ./do_sim.tcl line 35
# invoked "break" outside of a loop
# ** UI-Msg: (vish-4014) No objects found matching '/ARMModuleTest/u_ARMModule/u_MemoryStage/u_Memory/registers'.
# Executing ONERROR command at macro ./do_sim.tcl line 36
# invoked "break" outside of a loop
# ** UI-Msg: (vish-4014) No objects found matching '/ARMModuleTest/u_SRAM/mem[1024]'.
# Executing ONERROR command at macro ./do_sim.tcl line 45
# invoked "break" outside of a loop
# ** UI-Msg: (vish-4014) No objects found matching '/ARMModuleTest/u_SRAM/mem[1028]'.
# Executing ONERROR command at macro ./do_sim.tcl line 46
# invoked "break" outside of a loop
# hazard control: writeBackEnabled_exe = x
# hazard control: writeBackEnabled_mem = x
# hazard control: hazard = 0
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: hazard = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: hazard = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(50)
#    Time: 10025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 50
exit
# End time: 17:16:11 on Jan 08,2025, Elapsed time: 0:02:47
# Errors: 0, Warnings: 0
