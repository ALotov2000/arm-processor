# Loading project arm
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:58:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 13:58:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:58:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 13:58:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:58:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Compiling module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 13:58:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:58:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Compiling module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 13:58:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:58:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 13:58:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:58:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 13:58:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:58:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 13:58:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:58:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 13:58:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:58:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 13:58:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:58:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Compiling module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 13:58:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:58:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 13:58:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:58:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 13:58:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:58:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Compiling module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 13:58:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:58:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 13:58:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:58:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 13:58:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 13:59:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Compiling module ALU
# 
# Top level modules:
# 	ALU
# End time: 13:59:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 13:59:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 13:59:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 13:59:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Compiling module Memory
# 
# Top level modules:
# 	Memory
# End time: 13:59:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 13:59:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 13:59:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 13:59:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Compiling module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 13:59:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 13:59:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 13:59:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# ** Error: can't read "inc_path": no such variable
# Error in macro ./do_sim.tcl line 24
# can't read "inc_path": no such variable
#     while executing
# "vlog    +acc -incr -source  +incdir+$inc_path +define+SIM    $TB_file"
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:06 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 13:59:06 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:06 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 13:59:06 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:06 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 13:59:06 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:06 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 13:59:06 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:06 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 13:59:06 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:06 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 13:59:06 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:06 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 13:59:06 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:06 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 13:59:06 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:06 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 13:59:06 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:06 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 13:59:06 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:06 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:07 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 13:59:07 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# ** Error: can't read "inc_path": no such variable
# Error in macro ./do_sim.tcl line 24
# can't read "inc_path": no such variable
#     while executing
# "vlog    +acc -incr -source  +incdir+$inc_path +define+SIM    $TB_file"
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:37 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 13:59:37 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:37 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 13:59:37 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:37 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 13:59:37 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:37 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 13:59:37 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:37 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 13:59:37 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:37 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 13:59:37 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:37 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 13:59:37 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:37 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 13:59:37 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:37 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 13:59:37 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:37 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 13:59:37 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:37 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 13:59:37 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:37 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 13:59:37 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:37 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 13:59:37 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:37 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 13:59:38 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:38 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 13:59:38 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:38 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 13:59:38 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:38 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 13:59:38 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:38 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 13:59:38 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:38 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 13:59:38 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:38 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 13:59:38 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:38 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 13:59:38 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:38 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 13:59:38 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:38 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 13:59:38 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:38 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 13:59:38 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:38 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 13:59:38 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:38 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 13:59:38 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:38 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 13:59:38 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 13:59:38 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Compiling module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 13:59:38 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 13:59:38 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=         9
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967189
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c4
# pc register: out = 000000c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000228
# pc register: out = 00000224
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100100
# instruction fetch stage: PC=00000000000000000000001000101000
# instruction fetch stage: PC_next=00000000000000000000001000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000022c
# pc register: out = 00000228
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101000
# instruction fetch stage: PC=00000000000000000000001000101100
# instruction fetch stage: PC_next=00000000000000000000001000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000230
# pc register: out = 0000022c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101100
# instruction fetch stage: PC=00000000000000000000001000110000
# instruction fetch stage: PC_next=00000000000000000000001000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000234
# pc register: out = 00000230
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110000
# instruction fetch stage: PC=00000000000000000000001000110100
# instruction fetch stage: PC_next=00000000000000000000001000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000238
# pc register: out = 00000234
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110100
# instruction fetch stage: PC=00000000000000000000001000111000
# instruction fetch stage: PC_next=00000000000000000000001000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000023c
# pc register: out = 00000238
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111000
# instruction fetch stage: PC=00000000000000000000001000111100
# instruction fetch stage: PC_next=00000000000000000000001000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000240
# pc register: out = 0000023c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111100
# instruction fetch stage: PC=00000000000000000000001001000000
# instruction fetch stage: PC_next=00000000000000000000001001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000244
# pc register: out = 00000240
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000000
# instruction fetch stage: PC=00000000000000000000001001000100
# instruction fetch stage: PC_next=00000000000000000000001001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000248
# pc register: out = 00000244
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000100
# instruction fetch stage: PC=00000000000000000000001001001000
# instruction fetch stage: PC_next=00000000000000000000001001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000024c
# pc register: out = 00000248
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001000
# instruction fetch stage: PC=00000000000000000000001001001100
# instruction fetch stage: PC_next=00000000000000000000001001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000250
# pc register: out = 0000024c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001100
# instruction fetch stage: PC=00000000000000000000001001010000
# instruction fetch stage: PC_next=00000000000000000000001001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000254
# pc register: out = 00000250
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010000
# instruction fetch stage: PC=00000000000000000000001001010100
# instruction fetch stage: PC_next=00000000000000000000001001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000258
# pc register: out = 00000254
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010100
# instruction fetch stage: PC=00000000000000000000001001011000
# instruction fetch stage: PC_next=00000000000000000000001001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000025c
# pc register: out = 00000258
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011000
# instruction fetch stage: PC=00000000000000000000001001011100
# instruction fetch stage: PC_next=00000000000000000000001001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000260
# pc register: out = 0000025c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011100
# instruction fetch stage: PC=00000000000000000000001001100000
# instruction fetch stage: PC_next=00000000000000000000001001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000264
# pc register: out = 00000260
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100000
# instruction fetch stage: PC=00000000000000000000001001100100
# instruction fetch stage: PC_next=00000000000000000000001001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000268
# pc register: out = 00000264
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100100
# instruction fetch stage: PC=00000000000000000000001001101000
# instruction fetch stage: PC_next=00000000000000000000001001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000026c
# pc register: out = 00000268
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101000
# instruction fetch stage: PC=00000000000000000000001001101100
# instruction fetch stage: PC_next=00000000000000000000001001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000270
# pc register: out = 0000026c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101100
# instruction fetch stage: PC=00000000000000000000001001110000
# instruction fetch stage: PC_next=00000000000000000000001001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000274
# pc register: out = 00000270
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110000
# instruction fetch stage: PC=00000000000000000000001001110100
# instruction fetch stage: PC_next=00000000000000000000001001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000278
# pc register: out = 00000274
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110100
# instruction fetch stage: PC=00000000000000000000001001111000
# instruction fetch stage: PC_next=00000000000000000000001001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000027c
# pc register: out = 00000278
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111000
# instruction fetch stage: PC=00000000000000000000001001111100
# instruction fetch stage: PC_next=00000000000000000000001001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000280
# pc register: out = 0000027c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111100
# instruction fetch stage: PC=00000000000000000000001010000000
# instruction fetch stage: PC_next=00000000000000000000001010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000284
# pc register: out = 00000280
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000000
# instruction fetch stage: PC=00000000000000000000001010000100
# instruction fetch stage: PC_next=00000000000000000000001010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000288
# pc register: out = 00000284
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000100
# instruction fetch stage: PC=00000000000000000000001010001000
# instruction fetch stage: PC_next=00000000000000000000001010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000028c
# pc register: out = 00000288
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001000
# instruction fetch stage: PC=00000000000000000000001010001100
# instruction fetch stage: PC_next=00000000000000000000001010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000290
# pc register: out = 0000028c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001100
# instruction fetch stage: PC=00000000000000000000001010010000
# instruction fetch stage: PC_next=00000000000000000000001010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000294
# pc register: out = 00000290
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010000
# instruction fetch stage: PC=00000000000000000000001010010100
# instruction fetch stage: PC_next=00000000000000000000001010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000298
# pc register: out = 00000294
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010100
# instruction fetch stage: PC=00000000000000000000001010011000
# instruction fetch stage: PC_next=00000000000000000000001010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000029c
# pc register: out = 00000298
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011000
# instruction fetch stage: PC=00000000000000000000001010011100
# instruction fetch stage: PC_next=00000000000000000000001010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a0
# pc register: out = 0000029c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011100
# instruction fetch stage: PC=00000000000000000000001010100000
# instruction fetch stage: PC_next=00000000000000000000001010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a4
# pc register: out = 000002a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100000
# instruction fetch stage: PC=00000000000000000000001010100100
# instruction fetch stage: PC_next=00000000000000000000001010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a8
# pc register: out = 000002a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100100
# instruction fetch stage: PC=00000000000000000000001010101000
# instruction fetch stage: PC_next=00000000000000000000001010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ac
# pc register: out = 000002a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101000
# instruction fetch stage: PC=00000000000000000000001010101100
# instruction fetch stage: PC_next=00000000000000000000001010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b0
# pc register: out = 000002ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101100
# instruction fetch stage: PC=00000000000000000000001010110000
# instruction fetch stage: PC_next=00000000000000000000001010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b4
# pc register: out = 000002b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110000
# instruction fetch stage: PC=00000000000000000000001010110100
# instruction fetch stage: PC_next=00000000000000000000001010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b8
# pc register: out = 000002b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110100
# instruction fetch stage: PC=00000000000000000000001010111000
# instruction fetch stage: PC_next=00000000000000000000001010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002bc
# pc register: out = 000002b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111000
# instruction fetch stage: PC=00000000000000000000001010111100
# instruction fetch stage: PC_next=00000000000000000000001010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c0
# pc register: out = 000002bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111100
# instruction fetch stage: PC=00000000000000000000001011000000
# instruction fetch stage: PC_next=00000000000000000000001011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c4
# pc register: out = 000002c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000000
# instruction fetch stage: PC=00000000000000000000001011000100
# instruction fetch stage: PC_next=00000000000000000000001011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c8
# pc register: out = 000002c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000100
# instruction fetch stage: PC=00000000000000000000001011001000
# instruction fetch stage: PC_next=00000000000000000000001011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002cc
# pc register: out = 000002c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001000
# instruction fetch stage: PC=00000000000000000000001011001100
# instruction fetch stage: PC_next=00000000000000000000001011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d0
# pc register: out = 000002cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001100
# instruction fetch stage: PC=00000000000000000000001011010000
# instruction fetch stage: PC_next=00000000000000000000001011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d4
# pc register: out = 000002d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010000
# instruction fetch stage: PC=00000000000000000000001011010100
# instruction fetch stage: PC_next=00000000000000000000001011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d8
# pc register: out = 000002d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010100
# instruction fetch stage: PC=00000000000000000000001011011000
# instruction fetch stage: PC_next=00000000000000000000001011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002dc
# pc register: out = 000002d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011000
# instruction fetch stage: PC=00000000000000000000001011011100
# instruction fetch stage: PC_next=00000000000000000000001011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e0
# pc register: out = 000002dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011100
# instruction fetch stage: PC=00000000000000000000001011100000
# instruction fetch stage: PC_next=00000000000000000000001011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e4
# pc register: out = 000002e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100000
# instruction fetch stage: PC=00000000000000000000001011100100
# instruction fetch stage: PC_next=00000000000000000000001011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e8
# pc register: out = 000002e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100100
# instruction fetch stage: PC=00000000000000000000001011101000
# instruction fetch stage: PC_next=00000000000000000000001011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ec
# pc register: out = 000002e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101000
# instruction fetch stage: PC=00000000000000000000001011101100
# instruction fetch stage: PC_next=00000000000000000000001011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f0
# pc register: out = 000002ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101100
# instruction fetch stage: PC=00000000000000000000001011110000
# instruction fetch stage: PC_next=00000000000000000000001011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f4
# pc register: out = 000002f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110000
# instruction fetch stage: PC=00000000000000000000001011110100
# instruction fetch stage: PC_next=00000000000000000000001011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f8
# pc register: out = 000002f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110100
# instruction fetch stage: PC=00000000000000000000001011111000
# instruction fetch stage: PC_next=00000000000000000000001011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002fc
# pc register: out = 000002f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111000
# instruction fetch stage: PC=00000000000000000000001011111100
# instruction fetch stage: PC_next=00000000000000000000001011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000300
# pc register: out = 000002fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111100
# instruction fetch stage: PC=00000000000000000000001100000000
# instruction fetch stage: PC_next=00000000000000000000001100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000304
# pc register: out = 00000300
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000000
# instruction fetch stage: PC=00000000000000000000001100000100
# instruction fetch stage: PC_next=00000000000000000000001100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000308
# pc register: out = 00000304
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000100
# instruction fetch stage: PC=00000000000000000000001100001000
# instruction fetch stage: PC_next=00000000000000000000001100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000030c
# pc register: out = 00000308
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001000
# instruction fetch stage: PC=00000000000000000000001100001100
# instruction fetch stage: PC_next=00000000000000000000001100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000310
# pc register: out = 0000030c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001100
# instruction fetch stage: PC=00000000000000000000001100010000
# instruction fetch stage: PC_next=00000000000000000000001100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000314
# pc register: out = 00000310
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010000
# instruction fetch stage: PC=00000000000000000000001100010100
# instruction fetch stage: PC_next=00000000000000000000001100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000318
# pc register: out = 00000314
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010100
# instruction fetch stage: PC=00000000000000000000001100011000
# instruction fetch stage: PC_next=00000000000000000000001100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000031c
# pc register: out = 00000318
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011000
# instruction fetch stage: PC=00000000000000000000001100011100
# instruction fetch stage: PC_next=00000000000000000000001100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000320
# pc register: out = 0000031c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011100
# instruction fetch stage: PC=00000000000000000000001100100000
# instruction fetch stage: PC_next=00000000000000000000001100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000324
# pc register: out = 00000320
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100000
# instruction fetch stage: PC=00000000000000000000001100100100
# instruction fetch stage: PC_next=00000000000000000000001100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000328
# pc register: out = 00000324
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100100
# instruction fetch stage: PC=00000000000000000000001100101000
# instruction fetch stage: PC_next=00000000000000000000001100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000032c
# pc register: out = 00000328
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101000
# instruction fetch stage: PC=00000000000000000000001100101100
# instruction fetch stage: PC_next=00000000000000000000001100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000330
# pc register: out = 0000032c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101100
# instruction fetch stage: PC=00000000000000000000001100110000
# instruction fetch stage: PC_next=00000000000000000000001100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000334
# pc register: out = 00000330
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110000
# instruction fetch stage: PC=00000000000000000000001100110100
# instruction fetch stage: PC_next=00000000000000000000001100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000338
# pc register: out = 00000334
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110100
# instruction fetch stage: PC=00000000000000000000001100111000
# instruction fetch stage: PC_next=00000000000000000000001100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000033c
# pc register: out = 00000338
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111000
# instruction fetch stage: PC=00000000000000000000001100111100
# instruction fetch stage: PC_next=00000000000000000000001100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000340
# pc register: out = 0000033c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111100
# instruction fetch stage: PC=00000000000000000000001101000000
# instruction fetch stage: PC_next=00000000000000000000001101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000344
# pc register: out = 00000340
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000000
# instruction fetch stage: PC=00000000000000000000001101000100
# instruction fetch stage: PC_next=00000000000000000000001101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000348
# pc register: out = 00000344
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000100
# instruction fetch stage: PC=00000000000000000000001101001000
# instruction fetch stage: PC_next=00000000000000000000001101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000034c
# pc register: out = 00000348
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001000
# instruction fetch stage: PC=00000000000000000000001101001100
# instruction fetch stage: PC_next=00000000000000000000001101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000350
# pc register: out = 0000034c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001100
# instruction fetch stage: PC=00000000000000000000001101010000
# instruction fetch stage: PC_next=00000000000000000000001101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000354
# pc register: out = 00000350
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010000
# instruction fetch stage: PC=00000000000000000000001101010100
# instruction fetch stage: PC_next=00000000000000000000001101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000358
# pc register: out = 00000354
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010100
# instruction fetch stage: PC=00000000000000000000001101011000
# instruction fetch stage: PC_next=00000000000000000000001101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000035c
# pc register: out = 00000358
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011000
# instruction fetch stage: PC=00000000000000000000001101011100
# instruction fetch stage: PC_next=00000000000000000000001101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000360
# pc register: out = 0000035c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011100
# instruction fetch stage: PC=00000000000000000000001101100000
# instruction fetch stage: PC_next=00000000000000000000001101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000364
# pc register: out = 00000360
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100000
# instruction fetch stage: PC=00000000000000000000001101100100
# instruction fetch stage: PC_next=00000000000000000000001101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000368
# pc register: out = 00000364
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100100
# instruction fetch stage: PC=00000000000000000000001101101000
# instruction fetch stage: PC_next=00000000000000000000001101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000036c
# pc register: out = 00000368
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101000
# instruction fetch stage: PC=00000000000000000000001101101100
# instruction fetch stage: PC_next=00000000000000000000001101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000370
# pc register: out = 0000036c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101100
# instruction fetch stage: PC=00000000000000000000001101110000
# instruction fetch stage: PC_next=00000000000000000000001101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000374
# pc register: out = 00000370
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110000
# instruction fetch stage: PC=00000000000000000000001101110100
# instruction fetch stage: PC_next=00000000000000000000001101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000378
# pc register: out = 00000374
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110100
# instruction fetch stage: PC=00000000000000000000001101111000
# instruction fetch stage: PC_next=00000000000000000000001101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000037c
# pc register: out = 00000378
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111000
# instruction fetch stage: PC=00000000000000000000001101111100
# instruction fetch stage: PC_next=00000000000000000000001101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000380
# pc register: out = 0000037c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111100
# instruction fetch stage: PC=00000000000000000000001110000000
# instruction fetch stage: PC_next=00000000000000000000001110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000384
# pc register: out = 00000380
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000000
# instruction fetch stage: PC=00000000000000000000001110000100
# instruction fetch stage: PC_next=00000000000000000000001110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000388
# pc register: out = 00000384
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000100
# instruction fetch stage: PC=00000000000000000000001110001000
# instruction fetch stage: PC_next=00000000000000000000001110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000038c
# pc register: out = 00000388
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001000
# instruction fetch stage: PC=00000000000000000000001110001100
# instruction fetch stage: PC_next=00000000000000000000001110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000390
# pc register: out = 0000038c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001100
# instruction fetch stage: PC=00000000000000000000001110010000
# instruction fetch stage: PC_next=00000000000000000000001110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000394
# pc register: out = 00000390
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110010000
# instruction fetch stage: PC=00000000000000000000001110010100
# instruction fetch stage: PC_next=00000000000000000000001110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000398
# pc register: out = 00000394
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:04:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
###### src/hdl/components/memory.component.v(21):         trueAddress = (address - 32'd1024)[7:2];
# ** Error: (vlog-13069) src/hdl/components/memory.component.v(21): near "[": syntax error, unexpected '[', expecting ';'.
# End time: 14:04:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 1, Warnings: 0
# ** Error: /home/lotov2000/intelFPGA/20.1/modelsim_ase/linuxaloem/vlog failed.
# Error in macro ./do_sim.tcl line 23
# /home/lotov2000/intelFPGA/20.1/modelsim_ase/linuxaloem/vlog failed.
#     while executing
# "vlog +acc -incr -source +define+SIM $file"
#     ("foreach" body line 2)
#     invoked from within
# "foreach file $hdl_files {
#     vlog +acc -incr -source +define+SIM $file
# }"
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:53 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Compiling module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:05:54 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:05:54 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:05:55 on Dec 04,2024, Elapsed time: 0:06:17
# Errors: 1, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:05:55 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=         9
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967189
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c4
# pc register: out = 000000c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000228
# pc register: out = 00000224
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100100
# instruction fetch stage: PC=00000000000000000000001000101000
# instruction fetch stage: PC_next=00000000000000000000001000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000022c
# pc register: out = 00000228
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101000
# instruction fetch stage: PC=00000000000000000000001000101100
# instruction fetch stage: PC_next=00000000000000000000001000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000230
# pc register: out = 0000022c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101100
# instruction fetch stage: PC=00000000000000000000001000110000
# instruction fetch stage: PC_next=00000000000000000000001000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000234
# pc register: out = 00000230
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110000
# instruction fetch stage: PC=00000000000000000000001000110100
# instruction fetch stage: PC_next=00000000000000000000001000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000238
# pc register: out = 00000234
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110100
# instruction fetch stage: PC=00000000000000000000001000111000
# instruction fetch stage: PC_next=00000000000000000000001000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000023c
# pc register: out = 00000238
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111000
# instruction fetch stage: PC=00000000000000000000001000111100
# instruction fetch stage: PC_next=00000000000000000000001000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000240
# pc register: out = 0000023c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111100
# instruction fetch stage: PC=00000000000000000000001001000000
# instruction fetch stage: PC_next=00000000000000000000001001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000244
# pc register: out = 00000240
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000000
# instruction fetch stage: PC=00000000000000000000001001000100
# instruction fetch stage: PC_next=00000000000000000000001001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000248
# pc register: out = 00000244
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000100
# instruction fetch stage: PC=00000000000000000000001001001000
# instruction fetch stage: PC_next=00000000000000000000001001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000024c
# pc register: out = 00000248
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001000
# instruction fetch stage: PC=00000000000000000000001001001100
# instruction fetch stage: PC_next=00000000000000000000001001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000250
# pc register: out = 0000024c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001100
# instruction fetch stage: PC=00000000000000000000001001010000
# instruction fetch stage: PC_next=00000000000000000000001001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000254
# pc register: out = 00000250
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010000
# instruction fetch stage: PC=00000000000000000000001001010100
# instruction fetch stage: PC_next=00000000000000000000001001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000258
# pc register: out = 00000254
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010100
# instruction fetch stage: PC=00000000000000000000001001011000
# instruction fetch stage: PC_next=00000000000000000000001001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000025c
# pc register: out = 00000258
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011000
# instruction fetch stage: PC=00000000000000000000001001011100
# instruction fetch stage: PC_next=00000000000000000000001001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000260
# pc register: out = 0000025c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011100
# instruction fetch stage: PC=00000000000000000000001001100000
# instruction fetch stage: PC_next=00000000000000000000001001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000264
# pc register: out = 00000260
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100000
# instruction fetch stage: PC=00000000000000000000001001100100
# instruction fetch stage: PC_next=00000000000000000000001001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000268
# pc register: out = 00000264
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100100
# instruction fetch stage: PC=00000000000000000000001001101000
# instruction fetch stage: PC_next=00000000000000000000001001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000026c
# pc register: out = 00000268
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101000
# instruction fetch stage: PC=00000000000000000000001001101100
# instruction fetch stage: PC_next=00000000000000000000001001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000270
# pc register: out = 0000026c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101100
# instruction fetch stage: PC=00000000000000000000001001110000
# instruction fetch stage: PC_next=00000000000000000000001001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000274
# pc register: out = 00000270
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110000
# instruction fetch stage: PC=00000000000000000000001001110100
# instruction fetch stage: PC_next=00000000000000000000001001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000278
# pc register: out = 00000274
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110100
# instruction fetch stage: PC=00000000000000000000001001111000
# instruction fetch stage: PC_next=00000000000000000000001001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000027c
# pc register: out = 00000278
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111000
# instruction fetch stage: PC=00000000000000000000001001111100
# instruction fetch stage: PC_next=00000000000000000000001001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000280
# pc register: out = 0000027c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111100
# instruction fetch stage: PC=00000000000000000000001010000000
# instruction fetch stage: PC_next=00000000000000000000001010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000284
# pc register: out = 00000280
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000000
# instruction fetch stage: PC=00000000000000000000001010000100
# instruction fetch stage: PC_next=00000000000000000000001010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000288
# pc register: out = 00000284
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000100
# instruction fetch stage: PC=00000000000000000000001010001000
# instruction fetch stage: PC_next=00000000000000000000001010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000028c
# pc register: out = 00000288
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001000
# instruction fetch stage: PC=00000000000000000000001010001100
# instruction fetch stage: PC_next=00000000000000000000001010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000290
# pc register: out = 0000028c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001100
# instruction fetch stage: PC=00000000000000000000001010010000
# instruction fetch stage: PC_next=00000000000000000000001010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000294
# pc register: out = 00000290
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010000
# instruction fetch stage: PC=00000000000000000000001010010100
# instruction fetch stage: PC_next=00000000000000000000001010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000298
# pc register: out = 00000294
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010100
# instruction fetch stage: PC=00000000000000000000001010011000
# instruction fetch stage: PC_next=00000000000000000000001010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000029c
# pc register: out = 00000298
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011000
# instruction fetch stage: PC=00000000000000000000001010011100
# instruction fetch stage: PC_next=00000000000000000000001010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a0
# pc register: out = 0000029c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011100
# instruction fetch stage: PC=00000000000000000000001010100000
# instruction fetch stage: PC_next=00000000000000000000001010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a4
# pc register: out = 000002a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100000
# instruction fetch stage: PC=00000000000000000000001010100100
# instruction fetch stage: PC_next=00000000000000000000001010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a8
# pc register: out = 000002a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100100
# instruction fetch stage: PC=00000000000000000000001010101000
# instruction fetch stage: PC_next=00000000000000000000001010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ac
# pc register: out = 000002a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101000
# instruction fetch stage: PC=00000000000000000000001010101100
# instruction fetch stage: PC_next=00000000000000000000001010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b0
# pc register: out = 000002ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101100
# instruction fetch stage: PC=00000000000000000000001010110000
# instruction fetch stage: PC_next=00000000000000000000001010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b4
# pc register: out = 000002b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110000
# instruction fetch stage: PC=00000000000000000000001010110100
# instruction fetch stage: PC_next=00000000000000000000001010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b8
# pc register: out = 000002b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110100
# instruction fetch stage: PC=00000000000000000000001010111000
# instruction fetch stage: PC_next=00000000000000000000001010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002bc
# pc register: out = 000002b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111000
# instruction fetch stage: PC=00000000000000000000001010111100
# instruction fetch stage: PC_next=00000000000000000000001010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c0
# pc register: out = 000002bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111100
# instruction fetch stage: PC=00000000000000000000001011000000
# instruction fetch stage: PC_next=00000000000000000000001011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c4
# pc register: out = 000002c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000000
# instruction fetch stage: PC=00000000000000000000001011000100
# instruction fetch stage: PC_next=00000000000000000000001011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c8
# pc register: out = 000002c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000100
# instruction fetch stage: PC=00000000000000000000001011001000
# instruction fetch stage: PC_next=00000000000000000000001011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002cc
# pc register: out = 000002c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001000
# instruction fetch stage: PC=00000000000000000000001011001100
# instruction fetch stage: PC_next=00000000000000000000001011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d0
# pc register: out = 000002cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001100
# instruction fetch stage: PC=00000000000000000000001011010000
# instruction fetch stage: PC_next=00000000000000000000001011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d4
# pc register: out = 000002d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010000
# instruction fetch stage: PC=00000000000000000000001011010100
# instruction fetch stage: PC_next=00000000000000000000001011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d8
# pc register: out = 000002d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010100
# instruction fetch stage: PC=00000000000000000000001011011000
# instruction fetch stage: PC_next=00000000000000000000001011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002dc
# pc register: out = 000002d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011000
# instruction fetch stage: PC=00000000000000000000001011011100
# instruction fetch stage: PC_next=00000000000000000000001011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e0
# pc register: out = 000002dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011100
# instruction fetch stage: PC=00000000000000000000001011100000
# instruction fetch stage: PC_next=00000000000000000000001011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e4
# pc register: out = 000002e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100000
# instruction fetch stage: PC=00000000000000000000001011100100
# instruction fetch stage: PC_next=00000000000000000000001011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e8
# pc register: out = 000002e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100100
# instruction fetch stage: PC=00000000000000000000001011101000
# instruction fetch stage: PC_next=00000000000000000000001011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ec
# pc register: out = 000002e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101000
# instruction fetch stage: PC=00000000000000000000001011101100
# instruction fetch stage: PC_next=00000000000000000000001011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f0
# pc register: out = 000002ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101100
# instruction fetch stage: PC=00000000000000000000001011110000
# instruction fetch stage: PC_next=00000000000000000000001011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f4
# pc register: out = 000002f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110000
# instruction fetch stage: PC=00000000000000000000001011110100
# instruction fetch stage: PC_next=00000000000000000000001011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f8
# pc register: out = 000002f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110100
# instruction fetch stage: PC=00000000000000000000001011111000
# instruction fetch stage: PC_next=00000000000000000000001011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002fc
# pc register: out = 000002f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111000
# instruction fetch stage: PC=00000000000000000000001011111100
# instruction fetch stage: PC_next=00000000000000000000001011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000300
# pc register: out = 000002fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111100
# instruction fetch stage: PC=00000000000000000000001100000000
# instruction fetch stage: PC_next=00000000000000000000001100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000304
# pc register: out = 00000300
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000000
# instruction fetch stage: PC=00000000000000000000001100000100
# instruction fetch stage: PC_next=00000000000000000000001100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000308
# pc register: out = 00000304
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000100
# instruction fetch stage: PC=00000000000000000000001100001000
# instruction fetch stage: PC_next=00000000000000000000001100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000030c
# pc register: out = 00000308
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001000
# instruction fetch stage: PC=00000000000000000000001100001100
# instruction fetch stage: PC_next=00000000000000000000001100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000310
# pc register: out = 0000030c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001100
# instruction fetch stage: PC=00000000000000000000001100010000
# instruction fetch stage: PC_next=00000000000000000000001100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000314
# pc register: out = 00000310
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010000
# instruction fetch stage: PC=00000000000000000000001100010100
# instruction fetch stage: PC_next=00000000000000000000001100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000318
# pc register: out = 00000314
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010100
# instruction fetch stage: PC=00000000000000000000001100011000
# instruction fetch stage: PC_next=00000000000000000000001100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000031c
# pc register: out = 00000318
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011000
# instruction fetch stage: PC=00000000000000000000001100011100
# instruction fetch stage: PC_next=00000000000000000000001100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000320
# pc register: out = 0000031c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011100
# instruction fetch stage: PC=00000000000000000000001100100000
# instruction fetch stage: PC_next=00000000000000000000001100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000324
# pc register: out = 00000320
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100000
# instruction fetch stage: PC=00000000000000000000001100100100
# instruction fetch stage: PC_next=00000000000000000000001100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000328
# pc register: out = 00000324
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100100
# instruction fetch stage: PC=00000000000000000000001100101000
# instruction fetch stage: PC_next=00000000000000000000001100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000032c
# pc register: out = 00000328
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101000
# instruction fetch stage: PC=00000000000000000000001100101100
# instruction fetch stage: PC_next=00000000000000000000001100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000330
# pc register: out = 0000032c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101100
# instruction fetch stage: PC=00000000000000000000001100110000
# instruction fetch stage: PC_next=00000000000000000000001100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000334
# pc register: out = 00000330
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110000
# instruction fetch stage: PC=00000000000000000000001100110100
# instruction fetch stage: PC_next=00000000000000000000001100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000338
# pc register: out = 00000334
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110100
# instruction fetch stage: PC=00000000000000000000001100111000
# instruction fetch stage: PC_next=00000000000000000000001100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000033c
# pc register: out = 00000338
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111000
# instruction fetch stage: PC=00000000000000000000001100111100
# instruction fetch stage: PC_next=00000000000000000000001100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000340
# pc register: out = 0000033c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111100
# instruction fetch stage: PC=00000000000000000000001101000000
# instruction fetch stage: PC_next=00000000000000000000001101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000344
# pc register: out = 00000340
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000000
# instruction fetch stage: PC=00000000000000000000001101000100
# instruction fetch stage: PC_next=00000000000000000000001101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000348
# pc register: out = 00000344
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000100
# instruction fetch stage: PC=00000000000000000000001101001000
# instruction fetch stage: PC_next=00000000000000000000001101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000034c
# pc register: out = 00000348
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001000
# instruction fetch stage: PC=00000000000000000000001101001100
# instruction fetch stage: PC_next=00000000000000000000001101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000350
# pc register: out = 0000034c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001100
# instruction fetch stage: PC=00000000000000000000001101010000
# instruction fetch stage: PC_next=00000000000000000000001101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000354
# pc register: out = 00000350
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010000
# instruction fetch stage: PC=00000000000000000000001101010100
# instruction fetch stage: PC_next=00000000000000000000001101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000358
# pc register: out = 00000354
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010100
# instruction fetch stage: PC=00000000000000000000001101011000
# instruction fetch stage: PC_next=00000000000000000000001101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000035c
# pc register: out = 00000358
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011000
# instruction fetch stage: PC=00000000000000000000001101011100
# instruction fetch stage: PC_next=00000000000000000000001101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000360
# pc register: out = 0000035c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011100
# instruction fetch stage: PC=00000000000000000000001101100000
# instruction fetch stage: PC_next=00000000000000000000001101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000364
# pc register: out = 00000360
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100000
# instruction fetch stage: PC=00000000000000000000001101100100
# instruction fetch stage: PC_next=00000000000000000000001101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000368
# pc register: out = 00000364
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100100
# instruction fetch stage: PC=00000000000000000000001101101000
# instruction fetch stage: PC_next=00000000000000000000001101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000036c
# pc register: out = 00000368
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101000
# instruction fetch stage: PC=00000000000000000000001101101100
# instruction fetch stage: PC_next=00000000000000000000001101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000370
# pc register: out = 0000036c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101100
# instruction fetch stage: PC=00000000000000000000001101110000
# instruction fetch stage: PC_next=00000000000000000000001101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000374
# pc register: out = 00000370
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110000
# instruction fetch stage: PC=00000000000000000000001101110100
# instruction fetch stage: PC_next=00000000000000000000001101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000378
# pc register: out = 00000374
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110100
# instruction fetch stage: PC=00000000000000000000001101111000
# instruction fetch stage: PC_next=00000000000000000000001101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000037c
# pc register: out = 00000378
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111000
# instruction fetch stage: PC=00000000000000000000001101111100
# instruction fetch stage: PC_next=00000000000000000000001101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000380
# pc register: out = 0000037c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111100
# instruction fetch stage: PC=00000000000000000000001110000000
# instruction fetch stage: PC_next=00000000000000000000001110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000384
# pc register: out = 00000380
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000000
# instruction fetch stage: PC=00000000000000000000001110000100
# instruction fetch stage: PC_next=00000000000000000000001110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000388
# pc register: out = 00000384
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000100
# instruction fetch stage: PC=00000000000000000000001110001000
# instruction fetch stage: PC_next=00000000000000000000001110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000038c
# pc register: out = 00000388
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001000
# instruction fetch stage: PC=00000000000000000000001110001100
# instruction fetch stage: PC_next=00000000000000000000001110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000390
# pc register: out = 0000038c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001100
# instruction fetch stage: PC=00000000000000000000001110010000
# instruction fetch stage: PC_next=00000000000000000000001110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000394
# pc register: out = 00000390
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110010000
# instruction fetch stage: PC=00000000000000000000001110010100
# instruction fetch stage: PC_next=00000000000000000000001110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000398
# pc register: out = 00000394
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Compiling module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:19:24 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:24 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:19:25 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:19:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:19:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:19:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:19:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:19:25 on Dec 04,2024, Elapsed time: 0:13:30
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:19:25 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967189
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c4
# pc register: out = 000000c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000228
# pc register: out = 00000224
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100100
# instruction fetch stage: PC=00000000000000000000001000101000
# instruction fetch stage: PC_next=00000000000000000000001000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000022c
# pc register: out = 00000228
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101000
# instruction fetch stage: PC=00000000000000000000001000101100
# instruction fetch stage: PC_next=00000000000000000000001000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000230
# pc register: out = 0000022c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101100
# instruction fetch stage: PC=00000000000000000000001000110000
# instruction fetch stage: PC_next=00000000000000000000001000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000234
# pc register: out = 00000230
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110000
# instruction fetch stage: PC=00000000000000000000001000110100
# instruction fetch stage: PC_next=00000000000000000000001000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000238
# pc register: out = 00000234
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110100
# instruction fetch stage: PC=00000000000000000000001000111000
# instruction fetch stage: PC_next=00000000000000000000001000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000023c
# pc register: out = 00000238
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111000
# instruction fetch stage: PC=00000000000000000000001000111100
# instruction fetch stage: PC_next=00000000000000000000001000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000240
# pc register: out = 0000023c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111100
# instruction fetch stage: PC=00000000000000000000001001000000
# instruction fetch stage: PC_next=00000000000000000000001001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000244
# pc register: out = 00000240
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000000
# instruction fetch stage: PC=00000000000000000000001001000100
# instruction fetch stage: PC_next=00000000000000000000001001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000248
# pc register: out = 00000244
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000100
# instruction fetch stage: PC=00000000000000000000001001001000
# instruction fetch stage: PC_next=00000000000000000000001001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000024c
# pc register: out = 00000248
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001000
# instruction fetch stage: PC=00000000000000000000001001001100
# instruction fetch stage: PC_next=00000000000000000000001001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000250
# pc register: out = 0000024c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001100
# instruction fetch stage: PC=00000000000000000000001001010000
# instruction fetch stage: PC_next=00000000000000000000001001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000254
# pc register: out = 00000250
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010000
# instruction fetch stage: PC=00000000000000000000001001010100
# instruction fetch stage: PC_next=00000000000000000000001001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000258
# pc register: out = 00000254
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010100
# instruction fetch stage: PC=00000000000000000000001001011000
# instruction fetch stage: PC_next=00000000000000000000001001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000025c
# pc register: out = 00000258
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011000
# instruction fetch stage: PC=00000000000000000000001001011100
# instruction fetch stage: PC_next=00000000000000000000001001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000260
# pc register: out = 0000025c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011100
# instruction fetch stage: PC=00000000000000000000001001100000
# instruction fetch stage: PC_next=00000000000000000000001001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000264
# pc register: out = 00000260
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100000
# instruction fetch stage: PC=00000000000000000000001001100100
# instruction fetch stage: PC_next=00000000000000000000001001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000268
# pc register: out = 00000264
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100100
# instruction fetch stage: PC=00000000000000000000001001101000
# instruction fetch stage: PC_next=00000000000000000000001001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000026c
# pc register: out = 00000268
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101000
# instruction fetch stage: PC=00000000000000000000001001101100
# instruction fetch stage: PC_next=00000000000000000000001001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000270
# pc register: out = 0000026c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101100
# instruction fetch stage: PC=00000000000000000000001001110000
# instruction fetch stage: PC_next=00000000000000000000001001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000274
# pc register: out = 00000270
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110000
# instruction fetch stage: PC=00000000000000000000001001110100
# instruction fetch stage: PC_next=00000000000000000000001001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000278
# pc register: out = 00000274
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110100
# instruction fetch stage: PC=00000000000000000000001001111000
# instruction fetch stage: PC_next=00000000000000000000001001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000027c
# pc register: out = 00000278
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111000
# instruction fetch stage: PC=00000000000000000000001001111100
# instruction fetch stage: PC_next=00000000000000000000001001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000280
# pc register: out = 0000027c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111100
# instruction fetch stage: PC=00000000000000000000001010000000
# instruction fetch stage: PC_next=00000000000000000000001010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000284
# pc register: out = 00000280
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000000
# instruction fetch stage: PC=00000000000000000000001010000100
# instruction fetch stage: PC_next=00000000000000000000001010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000288
# pc register: out = 00000284
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000100
# instruction fetch stage: PC=00000000000000000000001010001000
# instruction fetch stage: PC_next=00000000000000000000001010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000028c
# pc register: out = 00000288
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001000
# instruction fetch stage: PC=00000000000000000000001010001100
# instruction fetch stage: PC_next=00000000000000000000001010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000290
# pc register: out = 0000028c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001100
# instruction fetch stage: PC=00000000000000000000001010010000
# instruction fetch stage: PC_next=00000000000000000000001010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000294
# pc register: out = 00000290
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010000
# instruction fetch stage: PC=00000000000000000000001010010100
# instruction fetch stage: PC_next=00000000000000000000001010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000298
# pc register: out = 00000294
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010100
# instruction fetch stage: PC=00000000000000000000001010011000
# instruction fetch stage: PC_next=00000000000000000000001010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000029c
# pc register: out = 00000298
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011000
# instruction fetch stage: PC=00000000000000000000001010011100
# instruction fetch stage: PC_next=00000000000000000000001010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a0
# pc register: out = 0000029c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011100
# instruction fetch stage: PC=00000000000000000000001010100000
# instruction fetch stage: PC_next=00000000000000000000001010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a4
# pc register: out = 000002a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100000
# instruction fetch stage: PC=00000000000000000000001010100100
# instruction fetch stage: PC_next=00000000000000000000001010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a8
# pc register: out = 000002a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100100
# instruction fetch stage: PC=00000000000000000000001010101000
# instruction fetch stage: PC_next=00000000000000000000001010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ac
# pc register: out = 000002a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101000
# instruction fetch stage: PC=00000000000000000000001010101100
# instruction fetch stage: PC_next=00000000000000000000001010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b0
# pc register: out = 000002ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101100
# instruction fetch stage: PC=00000000000000000000001010110000
# instruction fetch stage: PC_next=00000000000000000000001010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b4
# pc register: out = 000002b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110000
# instruction fetch stage: PC=00000000000000000000001010110100
# instruction fetch stage: PC_next=00000000000000000000001010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b8
# pc register: out = 000002b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110100
# instruction fetch stage: PC=00000000000000000000001010111000
# instruction fetch stage: PC_next=00000000000000000000001010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002bc
# pc register: out = 000002b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111000
# instruction fetch stage: PC=00000000000000000000001010111100
# instruction fetch stage: PC_next=00000000000000000000001010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c0
# pc register: out = 000002bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111100
# instruction fetch stage: PC=00000000000000000000001011000000
# instruction fetch stage: PC_next=00000000000000000000001011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c4
# pc register: out = 000002c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000000
# instruction fetch stage: PC=00000000000000000000001011000100
# instruction fetch stage: PC_next=00000000000000000000001011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c8
# pc register: out = 000002c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000100
# instruction fetch stage: PC=00000000000000000000001011001000
# instruction fetch stage: PC_next=00000000000000000000001011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002cc
# pc register: out = 000002c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001000
# instruction fetch stage: PC=00000000000000000000001011001100
# instruction fetch stage: PC_next=00000000000000000000001011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d0
# pc register: out = 000002cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001100
# instruction fetch stage: PC=00000000000000000000001011010000
# instruction fetch stage: PC_next=00000000000000000000001011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d4
# pc register: out = 000002d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010000
# instruction fetch stage: PC=00000000000000000000001011010100
# instruction fetch stage: PC_next=00000000000000000000001011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d8
# pc register: out = 000002d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010100
# instruction fetch stage: PC=00000000000000000000001011011000
# instruction fetch stage: PC_next=00000000000000000000001011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002dc
# pc register: out = 000002d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011000
# instruction fetch stage: PC=00000000000000000000001011011100
# instruction fetch stage: PC_next=00000000000000000000001011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e0
# pc register: out = 000002dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011100
# instruction fetch stage: PC=00000000000000000000001011100000
# instruction fetch stage: PC_next=00000000000000000000001011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e4
# pc register: out = 000002e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100000
# instruction fetch stage: PC=00000000000000000000001011100100
# instruction fetch stage: PC_next=00000000000000000000001011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e8
# pc register: out = 000002e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100100
# instruction fetch stage: PC=00000000000000000000001011101000
# instruction fetch stage: PC_next=00000000000000000000001011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ec
# pc register: out = 000002e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101000
# instruction fetch stage: PC=00000000000000000000001011101100
# instruction fetch stage: PC_next=00000000000000000000001011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f0
# pc register: out = 000002ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101100
# instruction fetch stage: PC=00000000000000000000001011110000
# instruction fetch stage: PC_next=00000000000000000000001011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f4
# pc register: out = 000002f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110000
# instruction fetch stage: PC=00000000000000000000001011110100
# instruction fetch stage: PC_next=00000000000000000000001011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f8
# pc register: out = 000002f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110100
# instruction fetch stage: PC=00000000000000000000001011111000
# instruction fetch stage: PC_next=00000000000000000000001011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002fc
# pc register: out = 000002f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111000
# instruction fetch stage: PC=00000000000000000000001011111100
# instruction fetch stage: PC_next=00000000000000000000001011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000300
# pc register: out = 000002fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111100
# instruction fetch stage: PC=00000000000000000000001100000000
# instruction fetch stage: PC_next=00000000000000000000001100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000304
# pc register: out = 00000300
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000000
# instruction fetch stage: PC=00000000000000000000001100000100
# instruction fetch stage: PC_next=00000000000000000000001100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000308
# pc register: out = 00000304
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000100
# instruction fetch stage: PC=00000000000000000000001100001000
# instruction fetch stage: PC_next=00000000000000000000001100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000030c
# pc register: out = 00000308
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001000
# instruction fetch stage: PC=00000000000000000000001100001100
# instruction fetch stage: PC_next=00000000000000000000001100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000310
# pc register: out = 0000030c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001100
# instruction fetch stage: PC=00000000000000000000001100010000
# instruction fetch stage: PC_next=00000000000000000000001100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000314
# pc register: out = 00000310
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010000
# instruction fetch stage: PC=00000000000000000000001100010100
# instruction fetch stage: PC_next=00000000000000000000001100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000318
# pc register: out = 00000314
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010100
# instruction fetch stage: PC=00000000000000000000001100011000
# instruction fetch stage: PC_next=00000000000000000000001100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000031c
# pc register: out = 00000318
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011000
# instruction fetch stage: PC=00000000000000000000001100011100
# instruction fetch stage: PC_next=00000000000000000000001100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000320
# pc register: out = 0000031c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011100
# instruction fetch stage: PC=00000000000000000000001100100000
# instruction fetch stage: PC_next=00000000000000000000001100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000324
# pc register: out = 00000320
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100000
# instruction fetch stage: PC=00000000000000000000001100100100
# instruction fetch stage: PC_next=00000000000000000000001100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000328
# pc register: out = 00000324
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100100
# instruction fetch stage: PC=00000000000000000000001100101000
# instruction fetch stage: PC_next=00000000000000000000001100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000032c
# pc register: out = 00000328
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101000
# instruction fetch stage: PC=00000000000000000000001100101100
# instruction fetch stage: PC_next=00000000000000000000001100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000330
# pc register: out = 0000032c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101100
# instruction fetch stage: PC=00000000000000000000001100110000
# instruction fetch stage: PC_next=00000000000000000000001100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000334
# pc register: out = 00000330
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110000
# instruction fetch stage: PC=00000000000000000000001100110100
# instruction fetch stage: PC_next=00000000000000000000001100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000338
# pc register: out = 00000334
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110100
# instruction fetch stage: PC=00000000000000000000001100111000
# instruction fetch stage: PC_next=00000000000000000000001100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000033c
# pc register: out = 00000338
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111000
# instruction fetch stage: PC=00000000000000000000001100111100
# instruction fetch stage: PC_next=00000000000000000000001100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000340
# pc register: out = 0000033c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111100
# instruction fetch stage: PC=00000000000000000000001101000000
# instruction fetch stage: PC_next=00000000000000000000001101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000344
# pc register: out = 00000340
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000000
# instruction fetch stage: PC=00000000000000000000001101000100
# instruction fetch stage: PC_next=00000000000000000000001101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000348
# pc register: out = 00000344
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000100
# instruction fetch stage: PC=00000000000000000000001101001000
# instruction fetch stage: PC_next=00000000000000000000001101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000034c
# pc register: out = 00000348
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001000
# instruction fetch stage: PC=00000000000000000000001101001100
# instruction fetch stage: PC_next=00000000000000000000001101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000350
# pc register: out = 0000034c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001100
# instruction fetch stage: PC=00000000000000000000001101010000
# instruction fetch stage: PC_next=00000000000000000000001101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000354
# pc register: out = 00000350
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010000
# instruction fetch stage: PC=00000000000000000000001101010100
# instruction fetch stage: PC_next=00000000000000000000001101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000358
# pc register: out = 00000354
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010100
# instruction fetch stage: PC=00000000000000000000001101011000
# instruction fetch stage: PC_next=00000000000000000000001101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000035c
# pc register: out = 00000358
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011000
# instruction fetch stage: PC=00000000000000000000001101011100
# instruction fetch stage: PC_next=00000000000000000000001101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000360
# pc register: out = 0000035c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011100
# instruction fetch stage: PC=00000000000000000000001101100000
# instruction fetch stage: PC_next=00000000000000000000001101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000364
# pc register: out = 00000360
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100000
# instruction fetch stage: PC=00000000000000000000001101100100
# instruction fetch stage: PC_next=00000000000000000000001101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000368
# pc register: out = 00000364
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100100
# instruction fetch stage: PC=00000000000000000000001101101000
# instruction fetch stage: PC_next=00000000000000000000001101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000036c
# pc register: out = 00000368
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101000
# instruction fetch stage: PC=00000000000000000000001101101100
# instruction fetch stage: PC_next=00000000000000000000001101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000370
# pc register: out = 0000036c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101100
# instruction fetch stage: PC=00000000000000000000001101110000
# instruction fetch stage: PC_next=00000000000000000000001101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000374
# pc register: out = 00000370
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110000
# instruction fetch stage: PC=00000000000000000000001101110100
# instruction fetch stage: PC_next=00000000000000000000001101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000378
# pc register: out = 00000374
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110100
# instruction fetch stage: PC=00000000000000000000001101111000
# instruction fetch stage: PC_next=00000000000000000000001101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000037c
# pc register: out = 00000378
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111000
# instruction fetch stage: PC=00000000000000000000001101111100
# instruction fetch stage: PC_next=00000000000000000000001101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000380
# pc register: out = 0000037c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111100
# instruction fetch stage: PC=00000000000000000000001110000000
# instruction fetch stage: PC_next=00000000000000000000001110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000384
# pc register: out = 00000380
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000000
# instruction fetch stage: PC=00000000000000000000001110000100
# instruction fetch stage: PC_next=00000000000000000000001110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000388
# pc register: out = 00000384
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000100
# instruction fetch stage: PC=00000000000000000000001110001000
# instruction fetch stage: PC_next=00000000000000000000001110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000038c
# pc register: out = 00000388
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001000
# instruction fetch stage: PC=00000000000000000000001110001100
# instruction fetch stage: PC_next=00000000000000000000001110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000390
# pc register: out = 0000038c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001100
# instruction fetch stage: PC=00000000000000000000001110010000
# instruction fetch stage: PC_next=00000000000000000000001110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000394
# pc register: out = 00000390
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110010000
# instruction fetch stage: PC=00000000000000000000001110010100
# instruction fetch stage: PC_next=00000000000000000000001110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000398
# pc register: out = 00000394
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:20:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:20:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:20:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:20:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:20:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:20:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:20:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:20:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:20:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:20:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:20:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:20:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:20:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:20:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:20:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:20:18 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:18 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Compiling module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:20:18 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:18 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:20:18 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:18 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:20:18 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:18 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:20:18 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:18 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:20:18 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:18 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:20:18 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:18 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:20:18 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:18 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:20:18 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:18 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:20:18 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:18 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:20:18 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:18 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:20:18 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:20:18 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:20:18 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:20:18 on Dec 04,2024, Elapsed time: 0:00:53
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:20:18 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967189
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c4
# pc register: out = 000000c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000228
# pc register: out = 00000224
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100100
# instruction fetch stage: PC=00000000000000000000001000101000
# instruction fetch stage: PC_next=00000000000000000000001000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000022c
# pc register: out = 00000228
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101000
# instruction fetch stage: PC=00000000000000000000001000101100
# instruction fetch stage: PC_next=00000000000000000000001000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000230
# pc register: out = 0000022c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101100
# instruction fetch stage: PC=00000000000000000000001000110000
# instruction fetch stage: PC_next=00000000000000000000001000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000234
# pc register: out = 00000230
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110000
# instruction fetch stage: PC=00000000000000000000001000110100
# instruction fetch stage: PC_next=00000000000000000000001000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000238
# pc register: out = 00000234
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110100
# instruction fetch stage: PC=00000000000000000000001000111000
# instruction fetch stage: PC_next=00000000000000000000001000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000023c
# pc register: out = 00000238
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111000
# instruction fetch stage: PC=00000000000000000000001000111100
# instruction fetch stage: PC_next=00000000000000000000001000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000240
# pc register: out = 0000023c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111100
# instruction fetch stage: PC=00000000000000000000001001000000
# instruction fetch stage: PC_next=00000000000000000000001001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000244
# pc register: out = 00000240
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000000
# instruction fetch stage: PC=00000000000000000000001001000100
# instruction fetch stage: PC_next=00000000000000000000001001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000248
# pc register: out = 00000244
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000100
# instruction fetch stage: PC=00000000000000000000001001001000
# instruction fetch stage: PC_next=00000000000000000000001001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000024c
# pc register: out = 00000248
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001000
# instruction fetch stage: PC=00000000000000000000001001001100
# instruction fetch stage: PC_next=00000000000000000000001001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000250
# pc register: out = 0000024c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001100
# instruction fetch stage: PC=00000000000000000000001001010000
# instruction fetch stage: PC_next=00000000000000000000001001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000254
# pc register: out = 00000250
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010000
# instruction fetch stage: PC=00000000000000000000001001010100
# instruction fetch stage: PC_next=00000000000000000000001001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000258
# pc register: out = 00000254
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010100
# instruction fetch stage: PC=00000000000000000000001001011000
# instruction fetch stage: PC_next=00000000000000000000001001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000025c
# pc register: out = 00000258
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011000
# instruction fetch stage: PC=00000000000000000000001001011100
# instruction fetch stage: PC_next=00000000000000000000001001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000260
# pc register: out = 0000025c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011100
# instruction fetch stage: PC=00000000000000000000001001100000
# instruction fetch stage: PC_next=00000000000000000000001001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000264
# pc register: out = 00000260
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100000
# instruction fetch stage: PC=00000000000000000000001001100100
# instruction fetch stage: PC_next=00000000000000000000001001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000268
# pc register: out = 00000264
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100100
# instruction fetch stage: PC=00000000000000000000001001101000
# instruction fetch stage: PC_next=00000000000000000000001001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000026c
# pc register: out = 00000268
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101000
# instruction fetch stage: PC=00000000000000000000001001101100
# instruction fetch stage: PC_next=00000000000000000000001001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000270
# pc register: out = 0000026c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101100
# instruction fetch stage: PC=00000000000000000000001001110000
# instruction fetch stage: PC_next=00000000000000000000001001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000274
# pc register: out = 00000270
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110000
# instruction fetch stage: PC=00000000000000000000001001110100
# instruction fetch stage: PC_next=00000000000000000000001001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000278
# pc register: out = 00000274
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110100
# instruction fetch stage: PC=00000000000000000000001001111000
# instruction fetch stage: PC_next=00000000000000000000001001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000027c
# pc register: out = 00000278
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111000
# instruction fetch stage: PC=00000000000000000000001001111100
# instruction fetch stage: PC_next=00000000000000000000001001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000280
# pc register: out = 0000027c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111100
# instruction fetch stage: PC=00000000000000000000001010000000
# instruction fetch stage: PC_next=00000000000000000000001010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000284
# pc register: out = 00000280
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000000
# instruction fetch stage: PC=00000000000000000000001010000100
# instruction fetch stage: PC_next=00000000000000000000001010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000288
# pc register: out = 00000284
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000100
# instruction fetch stage: PC=00000000000000000000001010001000
# instruction fetch stage: PC_next=00000000000000000000001010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000028c
# pc register: out = 00000288
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001000
# instruction fetch stage: PC=00000000000000000000001010001100
# instruction fetch stage: PC_next=00000000000000000000001010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000290
# pc register: out = 0000028c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001100
# instruction fetch stage: PC=00000000000000000000001010010000
# instruction fetch stage: PC_next=00000000000000000000001010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000294
# pc register: out = 00000290
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010000
# instruction fetch stage: PC=00000000000000000000001010010100
# instruction fetch stage: PC_next=00000000000000000000001010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000298
# pc register: out = 00000294
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010100
# instruction fetch stage: PC=00000000000000000000001010011000
# instruction fetch stage: PC_next=00000000000000000000001010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000029c
# pc register: out = 00000298
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011000
# instruction fetch stage: PC=00000000000000000000001010011100
# instruction fetch stage: PC_next=00000000000000000000001010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a0
# pc register: out = 0000029c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011100
# instruction fetch stage: PC=00000000000000000000001010100000
# instruction fetch stage: PC_next=00000000000000000000001010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a4
# pc register: out = 000002a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100000
# instruction fetch stage: PC=00000000000000000000001010100100
# instruction fetch stage: PC_next=00000000000000000000001010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a8
# pc register: out = 000002a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100100
# instruction fetch stage: PC=00000000000000000000001010101000
# instruction fetch stage: PC_next=00000000000000000000001010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ac
# pc register: out = 000002a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101000
# instruction fetch stage: PC=00000000000000000000001010101100
# instruction fetch stage: PC_next=00000000000000000000001010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b0
# pc register: out = 000002ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101100
# instruction fetch stage: PC=00000000000000000000001010110000
# instruction fetch stage: PC_next=00000000000000000000001010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b4
# pc register: out = 000002b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110000
# instruction fetch stage: PC=00000000000000000000001010110100
# instruction fetch stage: PC_next=00000000000000000000001010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b8
# pc register: out = 000002b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110100
# instruction fetch stage: PC=00000000000000000000001010111000
# instruction fetch stage: PC_next=00000000000000000000001010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002bc
# pc register: out = 000002b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111000
# instruction fetch stage: PC=00000000000000000000001010111100
# instruction fetch stage: PC_next=00000000000000000000001010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c0
# pc register: out = 000002bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111100
# instruction fetch stage: PC=00000000000000000000001011000000
# instruction fetch stage: PC_next=00000000000000000000001011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c4
# pc register: out = 000002c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000000
# instruction fetch stage: PC=00000000000000000000001011000100
# instruction fetch stage: PC_next=00000000000000000000001011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c8
# pc register: out = 000002c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000100
# instruction fetch stage: PC=00000000000000000000001011001000
# instruction fetch stage: PC_next=00000000000000000000001011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002cc
# pc register: out = 000002c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001000
# instruction fetch stage: PC=00000000000000000000001011001100
# instruction fetch stage: PC_next=00000000000000000000001011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d0
# pc register: out = 000002cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001100
# instruction fetch stage: PC=00000000000000000000001011010000
# instruction fetch stage: PC_next=00000000000000000000001011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d4
# pc register: out = 000002d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010000
# instruction fetch stage: PC=00000000000000000000001011010100
# instruction fetch stage: PC_next=00000000000000000000001011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d8
# pc register: out = 000002d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010100
# instruction fetch stage: PC=00000000000000000000001011011000
# instruction fetch stage: PC_next=00000000000000000000001011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002dc
# pc register: out = 000002d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011000
# instruction fetch stage: PC=00000000000000000000001011011100
# instruction fetch stage: PC_next=00000000000000000000001011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e0
# pc register: out = 000002dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011100
# instruction fetch stage: PC=00000000000000000000001011100000
# instruction fetch stage: PC_next=00000000000000000000001011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e4
# pc register: out = 000002e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100000
# instruction fetch stage: PC=00000000000000000000001011100100
# instruction fetch stage: PC_next=00000000000000000000001011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e8
# pc register: out = 000002e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100100
# instruction fetch stage: PC=00000000000000000000001011101000
# instruction fetch stage: PC_next=00000000000000000000001011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ec
# pc register: out = 000002e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101000
# instruction fetch stage: PC=00000000000000000000001011101100
# instruction fetch stage: PC_next=00000000000000000000001011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f0
# pc register: out = 000002ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101100
# instruction fetch stage: PC=00000000000000000000001011110000
# instruction fetch stage: PC_next=00000000000000000000001011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f4
# pc register: out = 000002f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110000
# instruction fetch stage: PC=00000000000000000000001011110100
# instruction fetch stage: PC_next=00000000000000000000001011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f8
# pc register: out = 000002f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110100
# instruction fetch stage: PC=00000000000000000000001011111000
# instruction fetch stage: PC_next=00000000000000000000001011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002fc
# pc register: out = 000002f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111000
# instruction fetch stage: PC=00000000000000000000001011111100
# instruction fetch stage: PC_next=00000000000000000000001011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000300
# pc register: out = 000002fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111100
# instruction fetch stage: PC=00000000000000000000001100000000
# instruction fetch stage: PC_next=00000000000000000000001100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000304
# pc register: out = 00000300
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000000
# instruction fetch stage: PC=00000000000000000000001100000100
# instruction fetch stage: PC_next=00000000000000000000001100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000308
# pc register: out = 00000304
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000100
# instruction fetch stage: PC=00000000000000000000001100001000
# instruction fetch stage: PC_next=00000000000000000000001100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000030c
# pc register: out = 00000308
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001000
# instruction fetch stage: PC=00000000000000000000001100001100
# instruction fetch stage: PC_next=00000000000000000000001100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000310
# pc register: out = 0000030c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001100
# instruction fetch stage: PC=00000000000000000000001100010000
# instruction fetch stage: PC_next=00000000000000000000001100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000314
# pc register: out = 00000310
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010000
# instruction fetch stage: PC=00000000000000000000001100010100
# instruction fetch stage: PC_next=00000000000000000000001100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000318
# pc register: out = 00000314
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010100
# instruction fetch stage: PC=00000000000000000000001100011000
# instruction fetch stage: PC_next=00000000000000000000001100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000031c
# pc register: out = 00000318
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011000
# instruction fetch stage: PC=00000000000000000000001100011100
# instruction fetch stage: PC_next=00000000000000000000001100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000320
# pc register: out = 0000031c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011100
# instruction fetch stage: PC=00000000000000000000001100100000
# instruction fetch stage: PC_next=00000000000000000000001100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000324
# pc register: out = 00000320
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100000
# instruction fetch stage: PC=00000000000000000000001100100100
# instruction fetch stage: PC_next=00000000000000000000001100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000328
# pc register: out = 00000324
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100100
# instruction fetch stage: PC=00000000000000000000001100101000
# instruction fetch stage: PC_next=00000000000000000000001100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000032c
# pc register: out = 00000328
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101000
# instruction fetch stage: PC=00000000000000000000001100101100
# instruction fetch stage: PC_next=00000000000000000000001100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000330
# pc register: out = 0000032c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101100
# instruction fetch stage: PC=00000000000000000000001100110000
# instruction fetch stage: PC_next=00000000000000000000001100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000334
# pc register: out = 00000330
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110000
# instruction fetch stage: PC=00000000000000000000001100110100
# instruction fetch stage: PC_next=00000000000000000000001100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000338
# pc register: out = 00000334
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110100
# instruction fetch stage: PC=00000000000000000000001100111000
# instruction fetch stage: PC_next=00000000000000000000001100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000033c
# pc register: out = 00000338
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111000
# instruction fetch stage: PC=00000000000000000000001100111100
# instruction fetch stage: PC_next=00000000000000000000001100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000340
# pc register: out = 0000033c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111100
# instruction fetch stage: PC=00000000000000000000001101000000
# instruction fetch stage: PC_next=00000000000000000000001101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000344
# pc register: out = 00000340
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000000
# instruction fetch stage: PC=00000000000000000000001101000100
# instruction fetch stage: PC_next=00000000000000000000001101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000348
# pc register: out = 00000344
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000100
# instruction fetch stage: PC=00000000000000000000001101001000
# instruction fetch stage: PC_next=00000000000000000000001101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000034c
# pc register: out = 00000348
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001000
# instruction fetch stage: PC=00000000000000000000001101001100
# instruction fetch stage: PC_next=00000000000000000000001101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000350
# pc register: out = 0000034c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001100
# instruction fetch stage: PC=00000000000000000000001101010000
# instruction fetch stage: PC_next=00000000000000000000001101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000354
# pc register: out = 00000350
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010000
# instruction fetch stage: PC=00000000000000000000001101010100
# instruction fetch stage: PC_next=00000000000000000000001101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000358
# pc register: out = 00000354
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010100
# instruction fetch stage: PC=00000000000000000000001101011000
# instruction fetch stage: PC_next=00000000000000000000001101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000035c
# pc register: out = 00000358
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011000
# instruction fetch stage: PC=00000000000000000000001101011100
# instruction fetch stage: PC_next=00000000000000000000001101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000360
# pc register: out = 0000035c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011100
# instruction fetch stage: PC=00000000000000000000001101100000
# instruction fetch stage: PC_next=00000000000000000000001101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000364
# pc register: out = 00000360
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100000
# instruction fetch stage: PC=00000000000000000000001101100100
# instruction fetch stage: PC_next=00000000000000000000001101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000368
# pc register: out = 00000364
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100100
# instruction fetch stage: PC=00000000000000000000001101101000
# instruction fetch stage: PC_next=00000000000000000000001101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000036c
# pc register: out = 00000368
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101000
# instruction fetch stage: PC=00000000000000000000001101101100
# instruction fetch stage: PC_next=00000000000000000000001101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000370
# pc register: out = 0000036c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101100
# instruction fetch stage: PC=00000000000000000000001101110000
# instruction fetch stage: PC_next=00000000000000000000001101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000374
# pc register: out = 00000370
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110000
# instruction fetch stage: PC=00000000000000000000001101110100
# instruction fetch stage: PC_next=00000000000000000000001101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000378
# pc register: out = 00000374
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110100
# instruction fetch stage: PC=00000000000000000000001101111000
# instruction fetch stage: PC_next=00000000000000000000001101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000037c
# pc register: out = 00000378
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111000
# instruction fetch stage: PC=00000000000000000000001101111100
# instruction fetch stage: PC_next=00000000000000000000001101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000380
# pc register: out = 0000037c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111100
# instruction fetch stage: PC=00000000000000000000001110000000
# instruction fetch stage: PC_next=00000000000000000000001110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000384
# pc register: out = 00000380
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000000
# instruction fetch stage: PC=00000000000000000000001110000100
# instruction fetch stage: PC_next=00000000000000000000001110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000388
# pc register: out = 00000384
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000100
# instruction fetch stage: PC=00000000000000000000001110001000
# instruction fetch stage: PC_next=00000000000000000000001110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000038c
# pc register: out = 00000388
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001000
# instruction fetch stage: PC=00000000000000000000001110001100
# instruction fetch stage: PC_next=00000000000000000000001110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000390
# pc register: out = 0000038c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001100
# instruction fetch stage: PC=00000000000000000000001110010000
# instruction fetch stage: PC_next=00000000000000000000001110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000394
# pc register: out = 00000390
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110010000
# instruction fetch stage: PC=00000000000000000000001110010100
# instruction fetch stage: PC_next=00000000000000000000001110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000398
# pc register: out = 00000394
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/val2
# WARNING: No extended dataflow license exists
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
add wave -position 1  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/valRm
add wave -position 2  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/shiftImmediate
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
add wave -position 2  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/shiftImmediate
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Compiling module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Compiling module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Compiling module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:31:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:28 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:31:28 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:28 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:31:28 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:28 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:31:28 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:28 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:31:28 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:28 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:31:28 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:31:28 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:31:28 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:31:28 on Dec 04,2024, Elapsed time: 0:11:10
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:31:28 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=         0
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=         0
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        40
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967176
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=         9
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967192
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=         0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c4
# pc register: out = 000000c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000228
# pc register: out = 00000224
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100100
# instruction fetch stage: PC=00000000000000000000001000101000
# instruction fetch stage: PC_next=00000000000000000000001000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000022c
# pc register: out = 00000228
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101000
# instruction fetch stage: PC=00000000000000000000001000101100
# instruction fetch stage: PC_next=00000000000000000000001000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000230
# pc register: out = 0000022c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101100
# instruction fetch stage: PC=00000000000000000000001000110000
# instruction fetch stage: PC_next=00000000000000000000001000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000234
# pc register: out = 00000230
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110000
# instruction fetch stage: PC=00000000000000000000001000110100
# instruction fetch stage: PC_next=00000000000000000000001000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000238
# pc register: out = 00000234
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110100
# instruction fetch stage: PC=00000000000000000000001000111000
# instruction fetch stage: PC_next=00000000000000000000001000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000023c
# pc register: out = 00000238
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111000
# instruction fetch stage: PC=00000000000000000000001000111100
# instruction fetch stage: PC_next=00000000000000000000001000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000240
# pc register: out = 0000023c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111100
# instruction fetch stage: PC=00000000000000000000001001000000
# instruction fetch stage: PC_next=00000000000000000000001001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000244
# pc register: out = 00000240
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000000
# instruction fetch stage: PC=00000000000000000000001001000100
# instruction fetch stage: PC_next=00000000000000000000001001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000248
# pc register: out = 00000244
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000100
# instruction fetch stage: PC=00000000000000000000001001001000
# instruction fetch stage: PC_next=00000000000000000000001001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000024c
# pc register: out = 00000248
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001000
# instruction fetch stage: PC=00000000000000000000001001001100
# instruction fetch stage: PC_next=00000000000000000000001001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000250
# pc register: out = 0000024c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001100
# instruction fetch stage: PC=00000000000000000000001001010000
# instruction fetch stage: PC_next=00000000000000000000001001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000254
# pc register: out = 00000250
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010000
# instruction fetch stage: PC=00000000000000000000001001010100
# instruction fetch stage: PC_next=00000000000000000000001001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000258
# pc register: out = 00000254
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010100
# instruction fetch stage: PC=00000000000000000000001001011000
# instruction fetch stage: PC_next=00000000000000000000001001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000025c
# pc register: out = 00000258
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011000
# instruction fetch stage: PC=00000000000000000000001001011100
# instruction fetch stage: PC_next=00000000000000000000001001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000260
# pc register: out = 0000025c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011100
# instruction fetch stage: PC=00000000000000000000001001100000
# instruction fetch stage: PC_next=00000000000000000000001001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000264
# pc register: out = 00000260
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100000
# instruction fetch stage: PC=00000000000000000000001001100100
# instruction fetch stage: PC_next=00000000000000000000001001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000268
# pc register: out = 00000264
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100100
# instruction fetch stage: PC=00000000000000000000001001101000
# instruction fetch stage: PC_next=00000000000000000000001001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000026c
# pc register: out = 00000268
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101000
# instruction fetch stage: PC=00000000000000000000001001101100
# instruction fetch stage: PC_next=00000000000000000000001001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000270
# pc register: out = 0000026c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101100
# instruction fetch stage: PC=00000000000000000000001001110000
# instruction fetch stage: PC_next=00000000000000000000001001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000274
# pc register: out = 00000270
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110000
# instruction fetch stage: PC=00000000000000000000001001110100
# instruction fetch stage: PC_next=00000000000000000000001001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000278
# pc register: out = 00000274
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110100
# instruction fetch stage: PC=00000000000000000000001001111000
# instruction fetch stage: PC_next=00000000000000000000001001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000027c
# pc register: out = 00000278
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111000
# instruction fetch stage: PC=00000000000000000000001001111100
# instruction fetch stage: PC_next=00000000000000000000001001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000280
# pc register: out = 0000027c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111100
# instruction fetch stage: PC=00000000000000000000001010000000
# instruction fetch stage: PC_next=00000000000000000000001010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000284
# pc register: out = 00000280
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000000
# instruction fetch stage: PC=00000000000000000000001010000100
# instruction fetch stage: PC_next=00000000000000000000001010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000288
# pc register: out = 00000284
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000100
# instruction fetch stage: PC=00000000000000000000001010001000
# instruction fetch stage: PC_next=00000000000000000000001010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000028c
# pc register: out = 00000288
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001000
# instruction fetch stage: PC=00000000000000000000001010001100
# instruction fetch stage: PC_next=00000000000000000000001010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000290
# pc register: out = 0000028c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001100
# instruction fetch stage: PC=00000000000000000000001010010000
# instruction fetch stage: PC_next=00000000000000000000001010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000294
# pc register: out = 00000290
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010000
# instruction fetch stage: PC=00000000000000000000001010010100
# instruction fetch stage: PC_next=00000000000000000000001010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000298
# pc register: out = 00000294
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010100
# instruction fetch stage: PC=00000000000000000000001010011000
# instruction fetch stage: PC_next=00000000000000000000001010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000029c
# pc register: out = 00000298
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011000
# instruction fetch stage: PC=00000000000000000000001010011100
# instruction fetch stage: PC_next=00000000000000000000001010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a0
# pc register: out = 0000029c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011100
# instruction fetch stage: PC=00000000000000000000001010100000
# instruction fetch stage: PC_next=00000000000000000000001010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a4
# pc register: out = 000002a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100000
# instruction fetch stage: PC=00000000000000000000001010100100
# instruction fetch stage: PC_next=00000000000000000000001010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a8
# pc register: out = 000002a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100100
# instruction fetch stage: PC=00000000000000000000001010101000
# instruction fetch stage: PC_next=00000000000000000000001010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ac
# pc register: out = 000002a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101000
# instruction fetch stage: PC=00000000000000000000001010101100
# instruction fetch stage: PC_next=00000000000000000000001010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b0
# pc register: out = 000002ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101100
# instruction fetch stage: PC=00000000000000000000001010110000
# instruction fetch stage: PC_next=00000000000000000000001010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b4
# pc register: out = 000002b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110000
# instruction fetch stage: PC=00000000000000000000001010110100
# instruction fetch stage: PC_next=00000000000000000000001010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b8
# pc register: out = 000002b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110100
# instruction fetch stage: PC=00000000000000000000001010111000
# instruction fetch stage: PC_next=00000000000000000000001010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002bc
# pc register: out = 000002b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111000
# instruction fetch stage: PC=00000000000000000000001010111100
# instruction fetch stage: PC_next=00000000000000000000001010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c0
# pc register: out = 000002bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111100
# instruction fetch stage: PC=00000000000000000000001011000000
# instruction fetch stage: PC_next=00000000000000000000001011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c4
# pc register: out = 000002c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000000
# instruction fetch stage: PC=00000000000000000000001011000100
# instruction fetch stage: PC_next=00000000000000000000001011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c8
# pc register: out = 000002c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000100
# instruction fetch stage: PC=00000000000000000000001011001000
# instruction fetch stage: PC_next=00000000000000000000001011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002cc
# pc register: out = 000002c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001000
# instruction fetch stage: PC=00000000000000000000001011001100
# instruction fetch stage: PC_next=00000000000000000000001011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d0
# pc register: out = 000002cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001100
# instruction fetch stage: PC=00000000000000000000001011010000
# instruction fetch stage: PC_next=00000000000000000000001011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d4
# pc register: out = 000002d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010000
# instruction fetch stage: PC=00000000000000000000001011010100
# instruction fetch stage: PC_next=00000000000000000000001011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d8
# pc register: out = 000002d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010100
# instruction fetch stage: PC=00000000000000000000001011011000
# instruction fetch stage: PC_next=00000000000000000000001011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002dc
# pc register: out = 000002d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011000
# instruction fetch stage: PC=00000000000000000000001011011100
# instruction fetch stage: PC_next=00000000000000000000001011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e0
# pc register: out = 000002dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011100
# instruction fetch stage: PC=00000000000000000000001011100000
# instruction fetch stage: PC_next=00000000000000000000001011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e4
# pc register: out = 000002e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100000
# instruction fetch stage: PC=00000000000000000000001011100100
# instruction fetch stage: PC_next=00000000000000000000001011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e8
# pc register: out = 000002e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100100
# instruction fetch stage: PC=00000000000000000000001011101000
# instruction fetch stage: PC_next=00000000000000000000001011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ec
# pc register: out = 000002e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101000
# instruction fetch stage: PC=00000000000000000000001011101100
# instruction fetch stage: PC_next=00000000000000000000001011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f0
# pc register: out = 000002ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101100
# instruction fetch stage: PC=00000000000000000000001011110000
# instruction fetch stage: PC_next=00000000000000000000001011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f4
# pc register: out = 000002f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110000
# instruction fetch stage: PC=00000000000000000000001011110100
# instruction fetch stage: PC_next=00000000000000000000001011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f8
# pc register: out = 000002f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110100
# instruction fetch stage: PC=00000000000000000000001011111000
# instruction fetch stage: PC_next=00000000000000000000001011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002fc
# pc register: out = 000002f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111000
# instruction fetch stage: PC=00000000000000000000001011111100
# instruction fetch stage: PC_next=00000000000000000000001011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000300
# pc register: out = 000002fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111100
# instruction fetch stage: PC=00000000000000000000001100000000
# instruction fetch stage: PC_next=00000000000000000000001100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000304
# pc register: out = 00000300
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000000
# instruction fetch stage: PC=00000000000000000000001100000100
# instruction fetch stage: PC_next=00000000000000000000001100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000308
# pc register: out = 00000304
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000100
# instruction fetch stage: PC=00000000000000000000001100001000
# instruction fetch stage: PC_next=00000000000000000000001100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000030c
# pc register: out = 00000308
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001000
# instruction fetch stage: PC=00000000000000000000001100001100
# instruction fetch stage: PC_next=00000000000000000000001100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000310
# pc register: out = 0000030c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001100
# instruction fetch stage: PC=00000000000000000000001100010000
# instruction fetch stage: PC_next=00000000000000000000001100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000314
# pc register: out = 00000310
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010000
# instruction fetch stage: PC=00000000000000000000001100010100
# instruction fetch stage: PC_next=00000000000000000000001100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000318
# pc register: out = 00000314
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010100
# instruction fetch stage: PC=00000000000000000000001100011000
# instruction fetch stage: PC_next=00000000000000000000001100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000031c
# pc register: out = 00000318
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011000
# instruction fetch stage: PC=00000000000000000000001100011100
# instruction fetch stage: PC_next=00000000000000000000001100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000320
# pc register: out = 0000031c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011100
# instruction fetch stage: PC=00000000000000000000001100100000
# instruction fetch stage: PC_next=00000000000000000000001100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000324
# pc register: out = 00000320
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100000
# instruction fetch stage: PC=00000000000000000000001100100100
# instruction fetch stage: PC_next=00000000000000000000001100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000328
# pc register: out = 00000324
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100100
# instruction fetch stage: PC=00000000000000000000001100101000
# instruction fetch stage: PC_next=00000000000000000000001100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000032c
# pc register: out = 00000328
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101000
# instruction fetch stage: PC=00000000000000000000001100101100
# instruction fetch stage: PC_next=00000000000000000000001100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000330
# pc register: out = 0000032c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101100
# instruction fetch stage: PC=00000000000000000000001100110000
# instruction fetch stage: PC_next=00000000000000000000001100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000334
# pc register: out = 00000330
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110000
# instruction fetch stage: PC=00000000000000000000001100110100
# instruction fetch stage: PC_next=00000000000000000000001100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000338
# pc register: out = 00000334
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110100
# instruction fetch stage: PC=00000000000000000000001100111000
# instruction fetch stage: PC_next=00000000000000000000001100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000033c
# pc register: out = 00000338
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111000
# instruction fetch stage: PC=00000000000000000000001100111100
# instruction fetch stage: PC_next=00000000000000000000001100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000340
# pc register: out = 0000033c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111100
# instruction fetch stage: PC=00000000000000000000001101000000
# instruction fetch stage: PC_next=00000000000000000000001101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000344
# pc register: out = 00000340
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000000
# instruction fetch stage: PC=00000000000000000000001101000100
# instruction fetch stage: PC_next=00000000000000000000001101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000348
# pc register: out = 00000344
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000100
# instruction fetch stage: PC=00000000000000000000001101001000
# instruction fetch stage: PC_next=00000000000000000000001101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000034c
# pc register: out = 00000348
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001000
# instruction fetch stage: PC=00000000000000000000001101001100
# instruction fetch stage: PC_next=00000000000000000000001101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000350
# pc register: out = 0000034c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001100
# instruction fetch stage: PC=00000000000000000000001101010000
# instruction fetch stage: PC_next=00000000000000000000001101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000354
# pc register: out = 00000350
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010000
# instruction fetch stage: PC=00000000000000000000001101010100
# instruction fetch stage: PC_next=00000000000000000000001101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000358
# pc register: out = 00000354
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010100
# instruction fetch stage: PC=00000000000000000000001101011000
# instruction fetch stage: PC_next=00000000000000000000001101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000035c
# pc register: out = 00000358
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011000
# instruction fetch stage: PC=00000000000000000000001101011100
# instruction fetch stage: PC_next=00000000000000000000001101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000360
# pc register: out = 0000035c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011100
# instruction fetch stage: PC=00000000000000000000001101100000
# instruction fetch stage: PC_next=00000000000000000000001101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000364
# pc register: out = 00000360
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100000
# instruction fetch stage: PC=00000000000000000000001101100100
# instruction fetch stage: PC_next=00000000000000000000001101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000368
# pc register: out = 00000364
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100100
# instruction fetch stage: PC=00000000000000000000001101101000
# instruction fetch stage: PC_next=00000000000000000000001101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000036c
# pc register: out = 00000368
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101000
# instruction fetch stage: PC=00000000000000000000001101101100
# instruction fetch stage: PC_next=00000000000000000000001101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000370
# pc register: out = 0000036c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101100
# instruction fetch stage: PC=00000000000000000000001101110000
# instruction fetch stage: PC_next=00000000000000000000001101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000374
# pc register: out = 00000370
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110000
# instruction fetch stage: PC=00000000000000000000001101110100
# instruction fetch stage: PC_next=00000000000000000000001101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000378
# pc register: out = 00000374
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110100
# instruction fetch stage: PC=00000000000000000000001101111000
# instruction fetch stage: PC_next=00000000000000000000001101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000037c
# pc register: out = 00000378
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111000
# instruction fetch stage: PC=00000000000000000000001101111100
# instruction fetch stage: PC_next=00000000000000000000001101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000380
# pc register: out = 0000037c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111100
# instruction fetch stage: PC=00000000000000000000001110000000
# instruction fetch stage: PC_next=00000000000000000000001110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000384
# pc register: out = 00000380
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000000
# instruction fetch stage: PC=00000000000000000000001110000100
# instruction fetch stage: PC_next=00000000000000000000001110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000388
# pc register: out = 00000384
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000100
# instruction fetch stage: PC=00000000000000000000001110001000
# instruction fetch stage: PC_next=00000000000000000000001110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000038c
# pc register: out = 00000388
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001000
# instruction fetch stage: PC=00000000000000000000001110001100
# instruction fetch stage: PC_next=00000000000000000000001110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000390
# pc register: out = 0000038c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001100
# instruction fetch stage: PC=00000000000000000000001110010000
# instruction fetch stage: PC_next=00000000000000000000001110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000394
# pc register: out = 00000390
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110010000
# instruction fetch stage: PC=00000000000000000000001110010100
# instruction fetch stage: PC_next=00000000000000000000001110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000398
# pc register: out = 00000394
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110010100
# instruction fetch stage: PC=00000000000000000000001110011000
# instruction fetch stage: PC_next=00000000000000000000001110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000039c
# pc register: out = 00000398
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110011000
# instruction fetch stage: PC=00000000000000000000001110011100
# instruction fetch stage: PC_next=00000000000000000000001110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000003a0
# pc register: out = 0000039c
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/shiftImmediate
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/shiftImmediate
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:34:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:34:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:34:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:34:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:34:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:34:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:34:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:34:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:34:30 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:34:30 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:34:31 on Dec 04,2024, Elapsed time: 0:03:03
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:34:31 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=       952
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=      1904
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        40
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967176
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=         9
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967192
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=       952
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c4
# pc register: out = 000000c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000228
# pc register: out = 00000224
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100100
# instruction fetch stage: PC=00000000000000000000001000101000
# instruction fetch stage: PC_next=00000000000000000000001000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000022c
# pc register: out = 00000228
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101000
# instruction fetch stage: PC=00000000000000000000001000101100
# instruction fetch stage: PC_next=00000000000000000000001000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000230
# pc register: out = 0000022c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101100
# instruction fetch stage: PC=00000000000000000000001000110000
# instruction fetch stage: PC_next=00000000000000000000001000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000234
# pc register: out = 00000230
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110000
# instruction fetch stage: PC=00000000000000000000001000110100
# instruction fetch stage: PC_next=00000000000000000000001000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000238
# pc register: out = 00000234
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110100
# instruction fetch stage: PC=00000000000000000000001000111000
# instruction fetch stage: PC_next=00000000000000000000001000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000023c
# pc register: out = 00000238
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111000
# instruction fetch stage: PC=00000000000000000000001000111100
# instruction fetch stage: PC_next=00000000000000000000001000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000240
# pc register: out = 0000023c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111100
# instruction fetch stage: PC=00000000000000000000001001000000
# instruction fetch stage: PC_next=00000000000000000000001001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000244
# pc register: out = 00000240
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000000
# instruction fetch stage: PC=00000000000000000000001001000100
# instruction fetch stage: PC_next=00000000000000000000001001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000248
# pc register: out = 00000244
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000100
# instruction fetch stage: PC=00000000000000000000001001001000
# instruction fetch stage: PC_next=00000000000000000000001001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000024c
# pc register: out = 00000248
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001000
# instruction fetch stage: PC=00000000000000000000001001001100
# instruction fetch stage: PC_next=00000000000000000000001001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000250
# pc register: out = 0000024c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001100
# instruction fetch stage: PC=00000000000000000000001001010000
# instruction fetch stage: PC_next=00000000000000000000001001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000254
# pc register: out = 00000250
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010000
# instruction fetch stage: PC=00000000000000000000001001010100
# instruction fetch stage: PC_next=00000000000000000000001001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000258
# pc register: out = 00000254
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010100
# instruction fetch stage: PC=00000000000000000000001001011000
# instruction fetch stage: PC_next=00000000000000000000001001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000025c
# pc register: out = 00000258
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011000
# instruction fetch stage: PC=00000000000000000000001001011100
# instruction fetch stage: PC_next=00000000000000000000001001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000260
# pc register: out = 0000025c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011100
# instruction fetch stage: PC=00000000000000000000001001100000
# instruction fetch stage: PC_next=00000000000000000000001001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000264
# pc register: out = 00000260
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100000
# instruction fetch stage: PC=00000000000000000000001001100100
# instruction fetch stage: PC_next=00000000000000000000001001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000268
# pc register: out = 00000264
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100100
# instruction fetch stage: PC=00000000000000000000001001101000
# instruction fetch stage: PC_next=00000000000000000000001001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000026c
# pc register: out = 00000268
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101000
# instruction fetch stage: PC=00000000000000000000001001101100
# instruction fetch stage: PC_next=00000000000000000000001001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000270
# pc register: out = 0000026c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101100
# instruction fetch stage: PC=00000000000000000000001001110000
# instruction fetch stage: PC_next=00000000000000000000001001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000274
# pc register: out = 00000270
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110000
# instruction fetch stage: PC=00000000000000000000001001110100
# instruction fetch stage: PC_next=00000000000000000000001001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000278
# pc register: out = 00000274
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110100
# instruction fetch stage: PC=00000000000000000000001001111000
# instruction fetch stage: PC_next=00000000000000000000001001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000027c
# pc register: out = 00000278
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111000
# instruction fetch stage: PC=00000000000000000000001001111100
# instruction fetch stage: PC_next=00000000000000000000001001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000280
# pc register: out = 0000027c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111100
# instruction fetch stage: PC=00000000000000000000001010000000
# instruction fetch stage: PC_next=00000000000000000000001010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000284
# pc register: out = 00000280
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000000
# instruction fetch stage: PC=00000000000000000000001010000100
# instruction fetch stage: PC_next=00000000000000000000001010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000288
# pc register: out = 00000284
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000100
# instruction fetch stage: PC=00000000000000000000001010001000
# instruction fetch stage: PC_next=00000000000000000000001010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000028c
# pc register: out = 00000288
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001000
# instruction fetch stage: PC=00000000000000000000001010001100
# instruction fetch stage: PC_next=00000000000000000000001010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000290
# pc register: out = 0000028c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001100
# instruction fetch stage: PC=00000000000000000000001010010000
# instruction fetch stage: PC_next=00000000000000000000001010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000294
# pc register: out = 00000290
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010000
# instruction fetch stage: PC=00000000000000000000001010010100
# instruction fetch stage: PC_next=00000000000000000000001010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000298
# pc register: out = 00000294
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010100
# instruction fetch stage: PC=00000000000000000000001010011000
# instruction fetch stage: PC_next=00000000000000000000001010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000029c
# pc register: out = 00000298
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011000
# instruction fetch stage: PC=00000000000000000000001010011100
# instruction fetch stage: PC_next=00000000000000000000001010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a0
# pc register: out = 0000029c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011100
# instruction fetch stage: PC=00000000000000000000001010100000
# instruction fetch stage: PC_next=00000000000000000000001010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a4
# pc register: out = 000002a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100000
# instruction fetch stage: PC=00000000000000000000001010100100
# instruction fetch stage: PC_next=00000000000000000000001010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a8
# pc register: out = 000002a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100100
# instruction fetch stage: PC=00000000000000000000001010101000
# instruction fetch stage: PC_next=00000000000000000000001010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ac
# pc register: out = 000002a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101000
# instruction fetch stage: PC=00000000000000000000001010101100
# instruction fetch stage: PC_next=00000000000000000000001010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b0
# pc register: out = 000002ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101100
# instruction fetch stage: PC=00000000000000000000001010110000
# instruction fetch stage: PC_next=00000000000000000000001010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b4
# pc register: out = 000002b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110000
# instruction fetch stage: PC=00000000000000000000001010110100
# instruction fetch stage: PC_next=00000000000000000000001010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b8
# pc register: out = 000002b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110100
# instruction fetch stage: PC=00000000000000000000001010111000
# instruction fetch stage: PC_next=00000000000000000000001010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002bc
# pc register: out = 000002b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111000
# instruction fetch stage: PC=00000000000000000000001010111100
# instruction fetch stage: PC_next=00000000000000000000001010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c0
# pc register: out = 000002bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111100
# instruction fetch stage: PC=00000000000000000000001011000000
# instruction fetch stage: PC_next=00000000000000000000001011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c4
# pc register: out = 000002c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000000
# instruction fetch stage: PC=00000000000000000000001011000100
# instruction fetch stage: PC_next=00000000000000000000001011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c8
# pc register: out = 000002c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000100
# instruction fetch stage: PC=00000000000000000000001011001000
# instruction fetch stage: PC_next=00000000000000000000001011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002cc
# pc register: out = 000002c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001000
# instruction fetch stage: PC=00000000000000000000001011001100
# instruction fetch stage: PC_next=00000000000000000000001011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d0
# pc register: out = 000002cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001100
# instruction fetch stage: PC=00000000000000000000001011010000
# instruction fetch stage: PC_next=00000000000000000000001011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d4
# pc register: out = 000002d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010000
# instruction fetch stage: PC=00000000000000000000001011010100
# instruction fetch stage: PC_next=00000000000000000000001011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d8
# pc register: out = 000002d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010100
# instruction fetch stage: PC=00000000000000000000001011011000
# instruction fetch stage: PC_next=00000000000000000000001011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002dc
# pc register: out = 000002d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011000
# instruction fetch stage: PC=00000000000000000000001011011100
# instruction fetch stage: PC_next=00000000000000000000001011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e0
# pc register: out = 000002dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011100
# instruction fetch stage: PC=00000000000000000000001011100000
# instruction fetch stage: PC_next=00000000000000000000001011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e4
# pc register: out = 000002e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100000
# instruction fetch stage: PC=00000000000000000000001011100100
# instruction fetch stage: PC_next=00000000000000000000001011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e8
# pc register: out = 000002e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100100
# instruction fetch stage: PC=00000000000000000000001011101000
# instruction fetch stage: PC_next=00000000000000000000001011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ec
# pc register: out = 000002e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101000
# instruction fetch stage: PC=00000000000000000000001011101100
# instruction fetch stage: PC_next=00000000000000000000001011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f0
# pc register: out = 000002ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101100
# instruction fetch stage: PC=00000000000000000000001011110000
# instruction fetch stage: PC_next=00000000000000000000001011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f4
# pc register: out = 000002f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110000
# instruction fetch stage: PC=00000000000000000000001011110100
# instruction fetch stage: PC_next=00000000000000000000001011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f8
# pc register: out = 000002f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110100
# instruction fetch stage: PC=00000000000000000000001011111000
# instruction fetch stage: PC_next=00000000000000000000001011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002fc
# pc register: out = 000002f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111000
# instruction fetch stage: PC=00000000000000000000001011111100
# instruction fetch stage: PC_next=00000000000000000000001011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000300
# pc register: out = 000002fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111100
# instruction fetch stage: PC=00000000000000000000001100000000
# instruction fetch stage: PC_next=00000000000000000000001100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000304
# pc register: out = 00000300
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000000
# instruction fetch stage: PC=00000000000000000000001100000100
# instruction fetch stage: PC_next=00000000000000000000001100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000308
# pc register: out = 00000304
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000100
# instruction fetch stage: PC=00000000000000000000001100001000
# instruction fetch stage: PC_next=00000000000000000000001100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000030c
# pc register: out = 00000308
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001000
# instruction fetch stage: PC=00000000000000000000001100001100
# instruction fetch stage: PC_next=00000000000000000000001100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000310
# pc register: out = 0000030c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001100
# instruction fetch stage: PC=00000000000000000000001100010000
# instruction fetch stage: PC_next=00000000000000000000001100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000314
# pc register: out = 00000310
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010000
# instruction fetch stage: PC=00000000000000000000001100010100
# instruction fetch stage: PC_next=00000000000000000000001100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000318
# pc register: out = 00000314
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010100
# instruction fetch stage: PC=00000000000000000000001100011000
# instruction fetch stage: PC_next=00000000000000000000001100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000031c
# pc register: out = 00000318
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011000
# instruction fetch stage: PC=00000000000000000000001100011100
# instruction fetch stage: PC_next=00000000000000000000001100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000320
# pc register: out = 0000031c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011100
# instruction fetch stage: PC=00000000000000000000001100100000
# instruction fetch stage: PC_next=00000000000000000000001100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000324
# pc register: out = 00000320
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100000
# instruction fetch stage: PC=00000000000000000000001100100100
# instruction fetch stage: PC_next=00000000000000000000001100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000328
# pc register: out = 00000324
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100100
# instruction fetch stage: PC=00000000000000000000001100101000
# instruction fetch stage: PC_next=00000000000000000000001100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000032c
# pc register: out = 00000328
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101000
# instruction fetch stage: PC=00000000000000000000001100101100
# instruction fetch stage: PC_next=00000000000000000000001100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000330
# pc register: out = 0000032c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101100
# instruction fetch stage: PC=00000000000000000000001100110000
# instruction fetch stage: PC_next=00000000000000000000001100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000334
# pc register: out = 00000330
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110000
# instruction fetch stage: PC=00000000000000000000001100110100
# instruction fetch stage: PC_next=00000000000000000000001100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000338
# pc register: out = 00000334
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110100
# instruction fetch stage: PC=00000000000000000000001100111000
# instruction fetch stage: PC_next=00000000000000000000001100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000033c
# pc register: out = 00000338
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111000
# instruction fetch stage: PC=00000000000000000000001100111100
# instruction fetch stage: PC_next=00000000000000000000001100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000340
# pc register: out = 0000033c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111100
# instruction fetch stage: PC=00000000000000000000001101000000
# instruction fetch stage: PC_next=00000000000000000000001101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000344
# pc register: out = 00000340
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000000
# instruction fetch stage: PC=00000000000000000000001101000100
# instruction fetch stage: PC_next=00000000000000000000001101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000348
# pc register: out = 00000344
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000100
# instruction fetch stage: PC=00000000000000000000001101001000
# instruction fetch stage: PC_next=00000000000000000000001101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000034c
# pc register: out = 00000348
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001000
# instruction fetch stage: PC=00000000000000000000001101001100
# instruction fetch stage: PC_next=00000000000000000000001101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000350
# pc register: out = 0000034c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001100
# instruction fetch stage: PC=00000000000000000000001101010000
# instruction fetch stage: PC_next=00000000000000000000001101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000354
# pc register: out = 00000350
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010000
# instruction fetch stage: PC=00000000000000000000001101010100
# instruction fetch stage: PC_next=00000000000000000000001101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000358
# pc register: out = 00000354
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010100
# instruction fetch stage: PC=00000000000000000000001101011000
# instruction fetch stage: PC_next=00000000000000000000001101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000035c
# pc register: out = 00000358
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011000
# instruction fetch stage: PC=00000000000000000000001101011100
# instruction fetch stage: PC_next=00000000000000000000001101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000360
# pc register: out = 0000035c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011100
# instruction fetch stage: PC=00000000000000000000001101100000
# instruction fetch stage: PC_next=00000000000000000000001101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000364
# pc register: out = 00000360
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100000
# instruction fetch stage: PC=00000000000000000000001101100100
# instruction fetch stage: PC_next=00000000000000000000001101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000368
# pc register: out = 00000364
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100100
# instruction fetch stage: PC=00000000000000000000001101101000
# instruction fetch stage: PC_next=00000000000000000000001101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000036c
# pc register: out = 00000368
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101000
# instruction fetch stage: PC=00000000000000000000001101101100
# instruction fetch stage: PC_next=00000000000000000000001101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000370
# pc register: out = 0000036c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101100
# instruction fetch stage: PC=00000000000000000000001101110000
# instruction fetch stage: PC_next=00000000000000000000001101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000374
# pc register: out = 00000370
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110000
# instruction fetch stage: PC=00000000000000000000001101110100
# instruction fetch stage: PC_next=00000000000000000000001101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000378
# pc register: out = 00000374
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110100
# instruction fetch stage: PC=00000000000000000000001101111000
# instruction fetch stage: PC_next=00000000000000000000001101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000037c
# pc register: out = 00000378
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111000
# instruction fetch stage: PC=00000000000000000000001101111100
# instruction fetch stage: PC_next=00000000000000000000001101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000380
# pc register: out = 0000037c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111100
# instruction fetch stage: PC=00000000000000000000001110000000
# instruction fetch stage: PC_next=00000000000000000000001110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000384
# pc register: out = 00000380
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000000
# instruction fetch stage: PC=00000000000000000000001110000100
# instruction fetch stage: PC_next=00000000000000000000001110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000388
# pc register: out = 00000384
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000100
# instruction fetch stage: PC=00000000000000000000001110001000
# instruction fetch stage: PC_next=00000000000000000000001110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000038c
# pc register: out = 00000388
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001000
# instruction fetch stage: PC=00000000000000000000001110001100
# instruction fetch stage: PC_next=00000000000000000000001110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000390
# pc register: out = 0000038c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001100
# instruction fetch stage: PC=00000000000000000000001110010000
# instruction fetch stage: PC_next=00000000000000000000001110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000394
# pc register: out = 00000390
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110010000
# instruction fetch stage: PC=00000000000000000000001110010100
# instruction fetch stage: PC_next=00000000000000000000001110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000398
# pc register: out = 00000394
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/shiftImmediate
# Can't move the Now cursor.
# WARNING: No extended dataflow license exists
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/val2
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/val2
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:35:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:35:53 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:53 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:35:53 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:53 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:35:53 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:53 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:35:53 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:53 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:35:53 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:53 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:35:53 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:35:53 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:35:53 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:35:53 on Dec 04,2024, Elapsed time: 0:01:22
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:35:53 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967189
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c4
# pc register: out = 000000c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000228
# pc register: out = 00000224
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100100
# instruction fetch stage: PC=00000000000000000000001000101000
# instruction fetch stage: PC_next=00000000000000000000001000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000022c
# pc register: out = 00000228
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101000
# instruction fetch stage: PC=00000000000000000000001000101100
# instruction fetch stage: PC_next=00000000000000000000001000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000230
# pc register: out = 0000022c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101100
# instruction fetch stage: PC=00000000000000000000001000110000
# instruction fetch stage: PC_next=00000000000000000000001000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000234
# pc register: out = 00000230
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110000
# instruction fetch stage: PC=00000000000000000000001000110100
# instruction fetch stage: PC_next=00000000000000000000001000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000238
# pc register: out = 00000234
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110100
# instruction fetch stage: PC=00000000000000000000001000111000
# instruction fetch stage: PC_next=00000000000000000000001000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000023c
# pc register: out = 00000238
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111000
# instruction fetch stage: PC=00000000000000000000001000111100
# instruction fetch stage: PC_next=00000000000000000000001000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000240
# pc register: out = 0000023c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111100
# instruction fetch stage: PC=00000000000000000000001001000000
# instruction fetch stage: PC_next=00000000000000000000001001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000244
# pc register: out = 00000240
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000000
# instruction fetch stage: PC=00000000000000000000001001000100
# instruction fetch stage: PC_next=00000000000000000000001001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000248
# pc register: out = 00000244
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000100
# instruction fetch stage: PC=00000000000000000000001001001000
# instruction fetch stage: PC_next=00000000000000000000001001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000024c
# pc register: out = 00000248
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001000
# instruction fetch stage: PC=00000000000000000000001001001100
# instruction fetch stage: PC_next=00000000000000000000001001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000250
# pc register: out = 0000024c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001100
# instruction fetch stage: PC=00000000000000000000001001010000
# instruction fetch stage: PC_next=00000000000000000000001001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000254
# pc register: out = 00000250
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010000
# instruction fetch stage: PC=00000000000000000000001001010100
# instruction fetch stage: PC_next=00000000000000000000001001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000258
# pc register: out = 00000254
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010100
# instruction fetch stage: PC=00000000000000000000001001011000
# instruction fetch stage: PC_next=00000000000000000000001001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000025c
# pc register: out = 00000258
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011000
# instruction fetch stage: PC=00000000000000000000001001011100
# instruction fetch stage: PC_next=00000000000000000000001001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000260
# pc register: out = 0000025c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011100
# instruction fetch stage: PC=00000000000000000000001001100000
# instruction fetch stage: PC_next=00000000000000000000001001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000264
# pc register: out = 00000260
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100000
# instruction fetch stage: PC=00000000000000000000001001100100
# instruction fetch stage: PC_next=00000000000000000000001001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000268
# pc register: out = 00000264
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100100
# instruction fetch stage: PC=00000000000000000000001001101000
# instruction fetch stage: PC_next=00000000000000000000001001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000026c
# pc register: out = 00000268
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101000
# instruction fetch stage: PC=00000000000000000000001001101100
# instruction fetch stage: PC_next=00000000000000000000001001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000270
# pc register: out = 0000026c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101100
# instruction fetch stage: PC=00000000000000000000001001110000
# instruction fetch stage: PC_next=00000000000000000000001001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000274
# pc register: out = 00000270
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110000
# instruction fetch stage: PC=00000000000000000000001001110100
# instruction fetch stage: PC_next=00000000000000000000001001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000278
# pc register: out = 00000274
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110100
# instruction fetch stage: PC=00000000000000000000001001111000
# instruction fetch stage: PC_next=00000000000000000000001001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000027c
# pc register: out = 00000278
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111000
# instruction fetch stage: PC=00000000000000000000001001111100
# instruction fetch stage: PC_next=00000000000000000000001001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000280
# pc register: out = 0000027c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111100
# instruction fetch stage: PC=00000000000000000000001010000000
# instruction fetch stage: PC_next=00000000000000000000001010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000284
# pc register: out = 00000280
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000000
# instruction fetch stage: PC=00000000000000000000001010000100
# instruction fetch stage: PC_next=00000000000000000000001010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000288
# pc register: out = 00000284
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000100
# instruction fetch stage: PC=00000000000000000000001010001000
# instruction fetch stage: PC_next=00000000000000000000001010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000028c
# pc register: out = 00000288
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001000
# instruction fetch stage: PC=00000000000000000000001010001100
# instruction fetch stage: PC_next=00000000000000000000001010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000290
# pc register: out = 0000028c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001100
# instruction fetch stage: PC=00000000000000000000001010010000
# instruction fetch stage: PC_next=00000000000000000000001010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000294
# pc register: out = 00000290
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010000
# instruction fetch stage: PC=00000000000000000000001010010100
# instruction fetch stage: PC_next=00000000000000000000001010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000298
# pc register: out = 00000294
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010100
# instruction fetch stage: PC=00000000000000000000001010011000
# instruction fetch stage: PC_next=00000000000000000000001010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000029c
# pc register: out = 00000298
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011000
# instruction fetch stage: PC=00000000000000000000001010011100
# instruction fetch stage: PC_next=00000000000000000000001010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a0
# pc register: out = 0000029c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011100
# instruction fetch stage: PC=00000000000000000000001010100000
# instruction fetch stage: PC_next=00000000000000000000001010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a4
# pc register: out = 000002a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100000
# instruction fetch stage: PC=00000000000000000000001010100100
# instruction fetch stage: PC_next=00000000000000000000001010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a8
# pc register: out = 000002a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100100
# instruction fetch stage: PC=00000000000000000000001010101000
# instruction fetch stage: PC_next=00000000000000000000001010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ac
# pc register: out = 000002a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101000
# instruction fetch stage: PC=00000000000000000000001010101100
# instruction fetch stage: PC_next=00000000000000000000001010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b0
# pc register: out = 000002ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101100
# instruction fetch stage: PC=00000000000000000000001010110000
# instruction fetch stage: PC_next=00000000000000000000001010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b4
# pc register: out = 000002b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110000
# instruction fetch stage: PC=00000000000000000000001010110100
# instruction fetch stage: PC_next=00000000000000000000001010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b8
# pc register: out = 000002b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110100
# instruction fetch stage: PC=00000000000000000000001010111000
# instruction fetch stage: PC_next=00000000000000000000001010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002bc
# pc register: out = 000002b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111000
# instruction fetch stage: PC=00000000000000000000001010111100
# instruction fetch stage: PC_next=00000000000000000000001010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c0
# pc register: out = 000002bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111100
# instruction fetch stage: PC=00000000000000000000001011000000
# instruction fetch stage: PC_next=00000000000000000000001011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c4
# pc register: out = 000002c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000000
# instruction fetch stage: PC=00000000000000000000001011000100
# instruction fetch stage: PC_next=00000000000000000000001011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c8
# pc register: out = 000002c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000100
# instruction fetch stage: PC=00000000000000000000001011001000
# instruction fetch stage: PC_next=00000000000000000000001011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002cc
# pc register: out = 000002c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001000
# instruction fetch stage: PC=00000000000000000000001011001100
# instruction fetch stage: PC_next=00000000000000000000001011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d0
# pc register: out = 000002cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001100
# instruction fetch stage: PC=00000000000000000000001011010000
# instruction fetch stage: PC_next=00000000000000000000001011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d4
# pc register: out = 000002d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010000
# instruction fetch stage: PC=00000000000000000000001011010100
# instruction fetch stage: PC_next=00000000000000000000001011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d8
# pc register: out = 000002d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010100
# instruction fetch stage: PC=00000000000000000000001011011000
# instruction fetch stage: PC_next=00000000000000000000001011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002dc
# pc register: out = 000002d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011000
# instruction fetch stage: PC=00000000000000000000001011011100
# instruction fetch stage: PC_next=00000000000000000000001011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e0
# pc register: out = 000002dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011100
# instruction fetch stage: PC=00000000000000000000001011100000
# instruction fetch stage: PC_next=00000000000000000000001011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e4
# pc register: out = 000002e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100000
# instruction fetch stage: PC=00000000000000000000001011100100
# instruction fetch stage: PC_next=00000000000000000000001011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e8
# pc register: out = 000002e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100100
# instruction fetch stage: PC=00000000000000000000001011101000
# instruction fetch stage: PC_next=00000000000000000000001011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ec
# pc register: out = 000002e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101000
# instruction fetch stage: PC=00000000000000000000001011101100
# instruction fetch stage: PC_next=00000000000000000000001011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f0
# pc register: out = 000002ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101100
# instruction fetch stage: PC=00000000000000000000001011110000
# instruction fetch stage: PC_next=00000000000000000000001011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f4
# pc register: out = 000002f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110000
# instruction fetch stage: PC=00000000000000000000001011110100
# instruction fetch stage: PC_next=00000000000000000000001011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f8
# pc register: out = 000002f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110100
# instruction fetch stage: PC=00000000000000000000001011111000
# instruction fetch stage: PC_next=00000000000000000000001011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002fc
# pc register: out = 000002f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111000
# instruction fetch stage: PC=00000000000000000000001011111100
# instruction fetch stage: PC_next=00000000000000000000001011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000300
# pc register: out = 000002fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111100
# instruction fetch stage: PC=00000000000000000000001100000000
# instruction fetch stage: PC_next=00000000000000000000001100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000304
# pc register: out = 00000300
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000000
# instruction fetch stage: PC=00000000000000000000001100000100
# instruction fetch stage: PC_next=00000000000000000000001100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000308
# pc register: out = 00000304
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000100
# instruction fetch stage: PC=00000000000000000000001100001000
# instruction fetch stage: PC_next=00000000000000000000001100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000030c
# pc register: out = 00000308
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001000
# instruction fetch stage: PC=00000000000000000000001100001100
# instruction fetch stage: PC_next=00000000000000000000001100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000310
# pc register: out = 0000030c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001100
# instruction fetch stage: PC=00000000000000000000001100010000
# instruction fetch stage: PC_next=00000000000000000000001100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000314
# pc register: out = 00000310
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010000
# instruction fetch stage: PC=00000000000000000000001100010100
# instruction fetch stage: PC_next=00000000000000000000001100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000318
# pc register: out = 00000314
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010100
# instruction fetch stage: PC=00000000000000000000001100011000
# instruction fetch stage: PC_next=00000000000000000000001100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000031c
# pc register: out = 00000318
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011000
# instruction fetch stage: PC=00000000000000000000001100011100
# instruction fetch stage: PC_next=00000000000000000000001100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000320
# pc register: out = 0000031c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011100
# instruction fetch stage: PC=00000000000000000000001100100000
# instruction fetch stage: PC_next=00000000000000000000001100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000324
# pc register: out = 00000320
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100000
# instruction fetch stage: PC=00000000000000000000001100100100
# instruction fetch stage: PC_next=00000000000000000000001100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000328
# pc register: out = 00000324
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100100
# instruction fetch stage: PC=00000000000000000000001100101000
# instruction fetch stage: PC_next=00000000000000000000001100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000032c
# pc register: out = 00000328
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101000
# instruction fetch stage: PC=00000000000000000000001100101100
# instruction fetch stage: PC_next=00000000000000000000001100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000330
# pc register: out = 0000032c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101100
# instruction fetch stage: PC=00000000000000000000001100110000
# instruction fetch stage: PC_next=00000000000000000000001100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000334
# pc register: out = 00000330
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110000
# instruction fetch stage: PC=00000000000000000000001100110100
# instruction fetch stage: PC_next=00000000000000000000001100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000338
# pc register: out = 00000334
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110100
# instruction fetch stage: PC=00000000000000000000001100111000
# instruction fetch stage: PC_next=00000000000000000000001100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000033c
# pc register: out = 00000338
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111000
# instruction fetch stage: PC=00000000000000000000001100111100
# instruction fetch stage: PC_next=00000000000000000000001100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000340
# pc register: out = 0000033c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111100
# instruction fetch stage: PC=00000000000000000000001101000000
# instruction fetch stage: PC_next=00000000000000000000001101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000344
# pc register: out = 00000340
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000000
# instruction fetch stage: PC=00000000000000000000001101000100
# instruction fetch stage: PC_next=00000000000000000000001101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000348
# pc register: out = 00000344
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000100
# instruction fetch stage: PC=00000000000000000000001101001000
# instruction fetch stage: PC_next=00000000000000000000001101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000034c
# pc register: out = 00000348
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001000
# instruction fetch stage: PC=00000000000000000000001101001100
# instruction fetch stage: PC_next=00000000000000000000001101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000350
# pc register: out = 0000034c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001100
# instruction fetch stage: PC=00000000000000000000001101010000
# instruction fetch stage: PC_next=00000000000000000000001101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000354
# pc register: out = 00000350
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010000
# instruction fetch stage: PC=00000000000000000000001101010100
# instruction fetch stage: PC_next=00000000000000000000001101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000358
# pc register: out = 00000354
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010100
# instruction fetch stage: PC=00000000000000000000001101011000
# instruction fetch stage: PC_next=00000000000000000000001101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000035c
# pc register: out = 00000358
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011000
# instruction fetch stage: PC=00000000000000000000001101011100
# instruction fetch stage: PC_next=00000000000000000000001101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000360
# pc register: out = 0000035c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011100
# instruction fetch stage: PC=00000000000000000000001101100000
# instruction fetch stage: PC_next=00000000000000000000001101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000364
# pc register: out = 00000360
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100000
# instruction fetch stage: PC=00000000000000000000001101100100
# instruction fetch stage: PC_next=00000000000000000000001101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000368
# pc register: out = 00000364
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100100
# instruction fetch stage: PC=00000000000000000000001101101000
# instruction fetch stage: PC_next=00000000000000000000001101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000036c
# pc register: out = 00000368
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101000
# instruction fetch stage: PC=00000000000000000000001101101100
# instruction fetch stage: PC_next=00000000000000000000001101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000370
# pc register: out = 0000036c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101100
# instruction fetch stage: PC=00000000000000000000001101110000
# instruction fetch stage: PC_next=00000000000000000000001101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000374
# pc register: out = 00000370
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110000
# instruction fetch stage: PC=00000000000000000000001101110100
# instruction fetch stage: PC_next=00000000000000000000001101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000378
# pc register: out = 00000374
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110100
# instruction fetch stage: PC=00000000000000000000001101111000
# instruction fetch stage: PC_next=00000000000000000000001101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000037c
# pc register: out = 00000378
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111000
# instruction fetch stage: PC=00000000000000000000001101111100
# instruction fetch stage: PC_next=00000000000000000000001101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000380
# pc register: out = 0000037c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111100
# instruction fetch stage: PC=00000000000000000000001110000000
# instruction fetch stage: PC_next=00000000000000000000001110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000384
# pc register: out = 00000380
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000000
# instruction fetch stage: PC=00000000000000000000001110000100
# instruction fetch stage: PC_next=00000000000000000000001110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000388
# pc register: out = 00000384
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000100
# instruction fetch stage: PC=00000000000000000000001110001000
# instruction fetch stage: PC_next=00000000000000000000001110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000038c
# pc register: out = 00000388
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001000
# instruction fetch stage: PC=00000000000000000000001110001100
# instruction fetch stage: PC_next=00000000000000000000001110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000390
# pc register: out = 0000038c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001100
# instruction fetch stage: PC=00000000000000000000001110010000
# instruction fetch stage: PC_next=00000000000000000000001110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000394
# pc register: out = 00000390
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110010000
# instruction fetch stage: PC=00000000000000000000001110010100
# instruction fetch stage: PC_next=00000000000000000000001110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000398
# pc register: out = 00000394
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/val2
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/val2
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Compiling module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:38:27 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:27 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:38:28 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:38:28 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:38:28 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:38:28 on Dec 04,2024, Elapsed time: 0:02:35
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:38:28 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294966681
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        15
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294966681
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c4
# pc register: out = 000000c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000228
# pc register: out = 00000224
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100100
# instruction fetch stage: PC=00000000000000000000001000101000
# instruction fetch stage: PC_next=00000000000000000000001000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000022c
# pc register: out = 00000228
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101000
# instruction fetch stage: PC=00000000000000000000001000101100
# instruction fetch stage: PC_next=00000000000000000000001000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000230
# pc register: out = 0000022c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101100
# instruction fetch stage: PC=00000000000000000000001000110000
# instruction fetch stage: PC_next=00000000000000000000001000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000234
# pc register: out = 00000230
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110000
# instruction fetch stage: PC=00000000000000000000001000110100
# instruction fetch stage: PC_next=00000000000000000000001000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000238
# pc register: out = 00000234
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110100
# instruction fetch stage: PC=00000000000000000000001000111000
# instruction fetch stage: PC_next=00000000000000000000001000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000023c
# pc register: out = 00000238
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111000
# instruction fetch stage: PC=00000000000000000000001000111100
# instruction fetch stage: PC_next=00000000000000000000001000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000240
# pc register: out = 0000023c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111100
# instruction fetch stage: PC=00000000000000000000001001000000
# instruction fetch stage: PC_next=00000000000000000000001001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000244
# pc register: out = 00000240
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000000
# instruction fetch stage: PC=00000000000000000000001001000100
# instruction fetch stage: PC_next=00000000000000000000001001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000248
# pc register: out = 00000244
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000100
# instruction fetch stage: PC=00000000000000000000001001001000
# instruction fetch stage: PC_next=00000000000000000000001001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000024c
# pc register: out = 00000248
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001000
# instruction fetch stage: PC=00000000000000000000001001001100
# instruction fetch stage: PC_next=00000000000000000000001001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000250
# pc register: out = 0000024c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001100
# instruction fetch stage: PC=00000000000000000000001001010000
# instruction fetch stage: PC_next=00000000000000000000001001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000254
# pc register: out = 00000250
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010000
# instruction fetch stage: PC=00000000000000000000001001010100
# instruction fetch stage: PC_next=00000000000000000000001001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000258
# pc register: out = 00000254
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010100
# instruction fetch stage: PC=00000000000000000000001001011000
# instruction fetch stage: PC_next=00000000000000000000001001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000025c
# pc register: out = 00000258
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011000
# instruction fetch stage: PC=00000000000000000000001001011100
# instruction fetch stage: PC_next=00000000000000000000001001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000260
# pc register: out = 0000025c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011100
# instruction fetch stage: PC=00000000000000000000001001100000
# instruction fetch stage: PC_next=00000000000000000000001001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000264
# pc register: out = 00000260
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100000
# instruction fetch stage: PC=00000000000000000000001001100100
# instruction fetch stage: PC_next=00000000000000000000001001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000268
# pc register: out = 00000264
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100100
# instruction fetch stage: PC=00000000000000000000001001101000
# instruction fetch stage: PC_next=00000000000000000000001001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000026c
# pc register: out = 00000268
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101000
# instruction fetch stage: PC=00000000000000000000001001101100
# instruction fetch stage: PC_next=00000000000000000000001001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000270
# pc register: out = 0000026c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101100
# instruction fetch stage: PC=00000000000000000000001001110000
# instruction fetch stage: PC_next=00000000000000000000001001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000274
# pc register: out = 00000270
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110000
# instruction fetch stage: PC=00000000000000000000001001110100
# instruction fetch stage: PC_next=00000000000000000000001001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000278
# pc register: out = 00000274
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110100
# instruction fetch stage: PC=00000000000000000000001001111000
# instruction fetch stage: PC_next=00000000000000000000001001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000027c
# pc register: out = 00000278
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111000
# instruction fetch stage: PC=00000000000000000000001001111100
# instruction fetch stage: PC_next=00000000000000000000001001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000280
# pc register: out = 0000027c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111100
# instruction fetch stage: PC=00000000000000000000001010000000
# instruction fetch stage: PC_next=00000000000000000000001010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000284
# pc register: out = 00000280
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000000
# instruction fetch stage: PC=00000000000000000000001010000100
# instruction fetch stage: PC_next=00000000000000000000001010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000288
# pc register: out = 00000284
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000100
# instruction fetch stage: PC=00000000000000000000001010001000
# instruction fetch stage: PC_next=00000000000000000000001010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000028c
# pc register: out = 00000288
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001000
# instruction fetch stage: PC=00000000000000000000001010001100
# instruction fetch stage: PC_next=00000000000000000000001010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000290
# pc register: out = 0000028c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001100
# instruction fetch stage: PC=00000000000000000000001010010000
# instruction fetch stage: PC_next=00000000000000000000001010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000294
# pc register: out = 00000290
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010000
# instruction fetch stage: PC=00000000000000000000001010010100
# instruction fetch stage: PC_next=00000000000000000000001010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000298
# pc register: out = 00000294
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010100
# instruction fetch stage: PC=00000000000000000000001010011000
# instruction fetch stage: PC_next=00000000000000000000001010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000029c
# pc register: out = 00000298
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011000
# instruction fetch stage: PC=00000000000000000000001010011100
# instruction fetch stage: PC_next=00000000000000000000001010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a0
# pc register: out = 0000029c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011100
# instruction fetch stage: PC=00000000000000000000001010100000
# instruction fetch stage: PC_next=00000000000000000000001010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a4
# pc register: out = 000002a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100000
# instruction fetch stage: PC=00000000000000000000001010100100
# instruction fetch stage: PC_next=00000000000000000000001010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a8
# pc register: out = 000002a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100100
# instruction fetch stage: PC=00000000000000000000001010101000
# instruction fetch stage: PC_next=00000000000000000000001010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ac
# pc register: out = 000002a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101000
# instruction fetch stage: PC=00000000000000000000001010101100
# instruction fetch stage: PC_next=00000000000000000000001010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b0
# pc register: out = 000002ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101100
# instruction fetch stage: PC=00000000000000000000001010110000
# instruction fetch stage: PC_next=00000000000000000000001010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b4
# pc register: out = 000002b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110000
# instruction fetch stage: PC=00000000000000000000001010110100
# instruction fetch stage: PC_next=00000000000000000000001010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b8
# pc register: out = 000002b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110100
# instruction fetch stage: PC=00000000000000000000001010111000
# instruction fetch stage: PC_next=00000000000000000000001010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002bc
# pc register: out = 000002b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111000
# instruction fetch stage: PC=00000000000000000000001010111100
# instruction fetch stage: PC_next=00000000000000000000001010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c0
# pc register: out = 000002bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111100
# instruction fetch stage: PC=00000000000000000000001011000000
# instruction fetch stage: PC_next=00000000000000000000001011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c4
# pc register: out = 000002c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000000
# instruction fetch stage: PC=00000000000000000000001011000100
# instruction fetch stage: PC_next=00000000000000000000001011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c8
# pc register: out = 000002c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000100
# instruction fetch stage: PC=00000000000000000000001011001000
# instruction fetch stage: PC_next=00000000000000000000001011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002cc
# pc register: out = 000002c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001000
# instruction fetch stage: PC=00000000000000000000001011001100
# instruction fetch stage: PC_next=00000000000000000000001011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d0
# pc register: out = 000002cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001100
# instruction fetch stage: PC=00000000000000000000001011010000
# instruction fetch stage: PC_next=00000000000000000000001011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d4
# pc register: out = 000002d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010000
# instruction fetch stage: PC=00000000000000000000001011010100
# instruction fetch stage: PC_next=00000000000000000000001011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d8
# pc register: out = 000002d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010100
# instruction fetch stage: PC=00000000000000000000001011011000
# instruction fetch stage: PC_next=00000000000000000000001011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002dc
# pc register: out = 000002d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011000
# instruction fetch stage: PC=00000000000000000000001011011100
# instruction fetch stage: PC_next=00000000000000000000001011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e0
# pc register: out = 000002dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011100
# instruction fetch stage: PC=00000000000000000000001011100000
# instruction fetch stage: PC_next=00000000000000000000001011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e4
# pc register: out = 000002e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100000
# instruction fetch stage: PC=00000000000000000000001011100100
# instruction fetch stage: PC_next=00000000000000000000001011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e8
# pc register: out = 000002e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100100
# instruction fetch stage: PC=00000000000000000000001011101000
# instruction fetch stage: PC_next=00000000000000000000001011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ec
# pc register: out = 000002e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101000
# instruction fetch stage: PC=00000000000000000000001011101100
# instruction fetch stage: PC_next=00000000000000000000001011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f0
# pc register: out = 000002ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101100
# instruction fetch stage: PC=00000000000000000000001011110000
# instruction fetch stage: PC_next=00000000000000000000001011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f4
# pc register: out = 000002f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110000
# instruction fetch stage: PC=00000000000000000000001011110100
# instruction fetch stage: PC_next=00000000000000000000001011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f8
# pc register: out = 000002f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110100
# instruction fetch stage: PC=00000000000000000000001011111000
# instruction fetch stage: PC_next=00000000000000000000001011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002fc
# pc register: out = 000002f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111000
# instruction fetch stage: PC=00000000000000000000001011111100
# instruction fetch stage: PC_next=00000000000000000000001011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000300
# pc register: out = 000002fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111100
# instruction fetch stage: PC=00000000000000000000001100000000
# instruction fetch stage: PC_next=00000000000000000000001100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000304
# pc register: out = 00000300
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000000
# instruction fetch stage: PC=00000000000000000000001100000100
# instruction fetch stage: PC_next=00000000000000000000001100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000308
# pc register: out = 00000304
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000100
# instruction fetch stage: PC=00000000000000000000001100001000
# instruction fetch stage: PC_next=00000000000000000000001100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000030c
# pc register: out = 00000308
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001000
# instruction fetch stage: PC=00000000000000000000001100001100
# instruction fetch stage: PC_next=00000000000000000000001100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000310
# pc register: out = 0000030c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001100
# instruction fetch stage: PC=00000000000000000000001100010000
# instruction fetch stage: PC_next=00000000000000000000001100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000314
# pc register: out = 00000310
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010000
# instruction fetch stage: PC=00000000000000000000001100010100
# instruction fetch stage: PC_next=00000000000000000000001100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000318
# pc register: out = 00000314
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010100
# instruction fetch stage: PC=00000000000000000000001100011000
# instruction fetch stage: PC_next=00000000000000000000001100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000031c
# pc register: out = 00000318
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011000
# instruction fetch stage: PC=00000000000000000000001100011100
# instruction fetch stage: PC_next=00000000000000000000001100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000320
# pc register: out = 0000031c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011100
# instruction fetch stage: PC=00000000000000000000001100100000
# instruction fetch stage: PC_next=00000000000000000000001100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000324
# pc register: out = 00000320
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100000
# instruction fetch stage: PC=00000000000000000000001100100100
# instruction fetch stage: PC_next=00000000000000000000001100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000328
# pc register: out = 00000324
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100100
# instruction fetch stage: PC=00000000000000000000001100101000
# instruction fetch stage: PC_next=00000000000000000000001100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000032c
# pc register: out = 00000328
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101000
# instruction fetch stage: PC=00000000000000000000001100101100
# instruction fetch stage: PC_next=00000000000000000000001100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000330
# pc register: out = 0000032c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101100
# instruction fetch stage: PC=00000000000000000000001100110000
# instruction fetch stage: PC_next=00000000000000000000001100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000334
# pc register: out = 00000330
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110000
# instruction fetch stage: PC=00000000000000000000001100110100
# instruction fetch stage: PC_next=00000000000000000000001100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000338
# pc register: out = 00000334
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110100
# instruction fetch stage: PC=00000000000000000000001100111000
# instruction fetch stage: PC_next=00000000000000000000001100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000033c
# pc register: out = 00000338
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111000
# instruction fetch stage: PC=00000000000000000000001100111100
# instruction fetch stage: PC_next=00000000000000000000001100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000340
# pc register: out = 0000033c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111100
# instruction fetch stage: PC=00000000000000000000001101000000
# instruction fetch stage: PC_next=00000000000000000000001101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000344
# pc register: out = 00000340
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000000
# instruction fetch stage: PC=00000000000000000000001101000100
# instruction fetch stage: PC_next=00000000000000000000001101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000348
# pc register: out = 00000344
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000100
# instruction fetch stage: PC=00000000000000000000001101001000
# instruction fetch stage: PC_next=00000000000000000000001101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000034c
# pc register: out = 00000348
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001000
# instruction fetch stage: PC=00000000000000000000001101001100
# instruction fetch stage: PC_next=00000000000000000000001101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000350
# pc register: out = 0000034c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001100
# instruction fetch stage: PC=00000000000000000000001101010000
# instruction fetch stage: PC_next=00000000000000000000001101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000354
# pc register: out = 00000350
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010000
# instruction fetch stage: PC=00000000000000000000001101010100
# instruction fetch stage: PC_next=00000000000000000000001101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000358
# pc register: out = 00000354
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010100
# instruction fetch stage: PC=00000000000000000000001101011000
# instruction fetch stage: PC_next=00000000000000000000001101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000035c
# pc register: out = 00000358
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011000
# instruction fetch stage: PC=00000000000000000000001101011100
# instruction fetch stage: PC_next=00000000000000000000001101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000360
# pc register: out = 0000035c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011100
# instruction fetch stage: PC=00000000000000000000001101100000
# instruction fetch stage: PC_next=00000000000000000000001101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000364
# pc register: out = 00000360
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100000
# instruction fetch stage: PC=00000000000000000000001101100100
# instruction fetch stage: PC_next=00000000000000000000001101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000368
# pc register: out = 00000364
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100100
# instruction fetch stage: PC=00000000000000000000001101101000
# instruction fetch stage: PC_next=00000000000000000000001101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000036c
# pc register: out = 00000368
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101000
# instruction fetch stage: PC=00000000000000000000001101101100
# instruction fetch stage: PC_next=00000000000000000000001101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000370
# pc register: out = 0000036c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101100
# instruction fetch stage: PC=00000000000000000000001101110000
# instruction fetch stage: PC_next=00000000000000000000001101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000374
# pc register: out = 00000370
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110000
# instruction fetch stage: PC=00000000000000000000001101110100
# instruction fetch stage: PC_next=00000000000000000000001101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000378
# pc register: out = 00000374
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110100
# instruction fetch stage: PC=00000000000000000000001101111000
# instruction fetch stage: PC_next=00000000000000000000001101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000037c
# pc register: out = 00000378
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111000
# instruction fetch stage: PC=00000000000000000000001101111100
# instruction fetch stage: PC_next=00000000000000000000001101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000380
# pc register: out = 0000037c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111100
# instruction fetch stage: PC=00000000000000000000001110000000
# instruction fetch stage: PC_next=00000000000000000000001110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000384
# pc register: out = 00000380
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000000
# instruction fetch stage: PC=00000000000000000000001110000100
# instruction fetch stage: PC_next=00000000000000000000001110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000388
# pc register: out = 00000384
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000100
# instruction fetch stage: PC=00000000000000000000001110001000
# instruction fetch stage: PC_next=00000000000000000000001110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000038c
# pc register: out = 00000388
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001000
# instruction fetch stage: PC=00000000000000000000001110001100
# instruction fetch stage: PC_next=00000000000000000000001110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000390
# pc register: out = 0000038c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001100
# instruction fetch stage: PC=00000000000000000000001110010000
# instruction fetch stage: PC_next=00000000000000000000001110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000394
# pc register: out = 00000390
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110010000
# instruction fetch stage: PC=00000000000000000000001110010100
# instruction fetch stage: PC_next=00000000000000000000001110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000398
# pc register: out = 00000394
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/val2
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Compiling module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Compiling module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Compiling module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:41:50 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:50 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:41:51 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Compiling module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:41:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:41:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:41:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:41:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:41:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:41:51 on Dec 04,2024, Elapsed time: 0:03:23
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:41:51 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967189
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c4
# pc register: out = 000000c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000228
# pc register: out = 00000224
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100100
# instruction fetch stage: PC=00000000000000000000001000101000
# instruction fetch stage: PC_next=00000000000000000000001000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000022c
# pc register: out = 00000228
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101000
# instruction fetch stage: PC=00000000000000000000001000101100
# instruction fetch stage: PC_next=00000000000000000000001000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000230
# pc register: out = 0000022c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101100
# instruction fetch stage: PC=00000000000000000000001000110000
# instruction fetch stage: PC_next=00000000000000000000001000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000234
# pc register: out = 00000230
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110000
# instruction fetch stage: PC=00000000000000000000001000110100
# instruction fetch stage: PC_next=00000000000000000000001000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000238
# pc register: out = 00000234
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110100
# instruction fetch stage: PC=00000000000000000000001000111000
# instruction fetch stage: PC_next=00000000000000000000001000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000023c
# pc register: out = 00000238
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111000
# instruction fetch stage: PC=00000000000000000000001000111100
# instruction fetch stage: PC_next=00000000000000000000001000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000240
# pc register: out = 0000023c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111100
# instruction fetch stage: PC=00000000000000000000001001000000
# instruction fetch stage: PC_next=00000000000000000000001001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000244
# pc register: out = 00000240
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000000
# instruction fetch stage: PC=00000000000000000000001001000100
# instruction fetch stage: PC_next=00000000000000000000001001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000248
# pc register: out = 00000244
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000100
# instruction fetch stage: PC=00000000000000000000001001001000
# instruction fetch stage: PC_next=00000000000000000000001001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000024c
# pc register: out = 00000248
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001000
# instruction fetch stage: PC=00000000000000000000001001001100
# instruction fetch stage: PC_next=00000000000000000000001001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000250
# pc register: out = 0000024c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001100
# instruction fetch stage: PC=00000000000000000000001001010000
# instruction fetch stage: PC_next=00000000000000000000001001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000254
# pc register: out = 00000250
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010000
# instruction fetch stage: PC=00000000000000000000001001010100
# instruction fetch stage: PC_next=00000000000000000000001001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000258
# pc register: out = 00000254
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010100
# instruction fetch stage: PC=00000000000000000000001001011000
# instruction fetch stage: PC_next=00000000000000000000001001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000025c
# pc register: out = 00000258
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011000
# instruction fetch stage: PC=00000000000000000000001001011100
# instruction fetch stage: PC_next=00000000000000000000001001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000260
# pc register: out = 0000025c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011100
# instruction fetch stage: PC=00000000000000000000001001100000
# instruction fetch stage: PC_next=00000000000000000000001001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000264
# pc register: out = 00000260
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100000
# instruction fetch stage: PC=00000000000000000000001001100100
# instruction fetch stage: PC_next=00000000000000000000001001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000268
# pc register: out = 00000264
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100100
# instruction fetch stage: PC=00000000000000000000001001101000
# instruction fetch stage: PC_next=00000000000000000000001001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000026c
# pc register: out = 00000268
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101000
# instruction fetch stage: PC=00000000000000000000001001101100
# instruction fetch stage: PC_next=00000000000000000000001001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000270
# pc register: out = 0000026c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101100
# instruction fetch stage: PC=00000000000000000000001001110000
# instruction fetch stage: PC_next=00000000000000000000001001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000274
# pc register: out = 00000270
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110000
# instruction fetch stage: PC=00000000000000000000001001110100
# instruction fetch stage: PC_next=00000000000000000000001001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000278
# pc register: out = 00000274
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110100
# instruction fetch stage: PC=00000000000000000000001001111000
# instruction fetch stage: PC_next=00000000000000000000001001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000027c
# pc register: out = 00000278
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111000
# instruction fetch stage: PC=00000000000000000000001001111100
# instruction fetch stage: PC_next=00000000000000000000001001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000280
# pc register: out = 0000027c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111100
# instruction fetch stage: PC=00000000000000000000001010000000
# instruction fetch stage: PC_next=00000000000000000000001010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000284
# pc register: out = 00000280
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000000
# instruction fetch stage: PC=00000000000000000000001010000100
# instruction fetch stage: PC_next=00000000000000000000001010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000288
# pc register: out = 00000284
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000100
# instruction fetch stage: PC=00000000000000000000001010001000
# instruction fetch stage: PC_next=00000000000000000000001010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000028c
# pc register: out = 00000288
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001000
# instruction fetch stage: PC=00000000000000000000001010001100
# instruction fetch stage: PC_next=00000000000000000000001010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000290
# pc register: out = 0000028c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001100
# instruction fetch stage: PC=00000000000000000000001010010000
# instruction fetch stage: PC_next=00000000000000000000001010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000294
# pc register: out = 00000290
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010000
# instruction fetch stage: PC=00000000000000000000001010010100
# instruction fetch stage: PC_next=00000000000000000000001010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000298
# pc register: out = 00000294
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010100
# instruction fetch stage: PC=00000000000000000000001010011000
# instruction fetch stage: PC_next=00000000000000000000001010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000029c
# pc register: out = 00000298
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011000
# instruction fetch stage: PC=00000000000000000000001010011100
# instruction fetch stage: PC_next=00000000000000000000001010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a0
# pc register: out = 0000029c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011100
# instruction fetch stage: PC=00000000000000000000001010100000
# instruction fetch stage: PC_next=00000000000000000000001010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a4
# pc register: out = 000002a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100000
# instruction fetch stage: PC=00000000000000000000001010100100
# instruction fetch stage: PC_next=00000000000000000000001010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a8
# pc register: out = 000002a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100100
# instruction fetch stage: PC=00000000000000000000001010101000
# instruction fetch stage: PC_next=00000000000000000000001010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ac
# pc register: out = 000002a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101000
# instruction fetch stage: PC=00000000000000000000001010101100
# instruction fetch stage: PC_next=00000000000000000000001010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b0
# pc register: out = 000002ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101100
# instruction fetch stage: PC=00000000000000000000001010110000
# instruction fetch stage: PC_next=00000000000000000000001010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b4
# pc register: out = 000002b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110000
# instruction fetch stage: PC=00000000000000000000001010110100
# instruction fetch stage: PC_next=00000000000000000000001010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b8
# pc register: out = 000002b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110100
# instruction fetch stage: PC=00000000000000000000001010111000
# instruction fetch stage: PC_next=00000000000000000000001010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002bc
# pc register: out = 000002b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111000
# instruction fetch stage: PC=00000000000000000000001010111100
# instruction fetch stage: PC_next=00000000000000000000001010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c0
# pc register: out = 000002bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111100
# instruction fetch stage: PC=00000000000000000000001011000000
# instruction fetch stage: PC_next=00000000000000000000001011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c4
# pc register: out = 000002c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000000
# instruction fetch stage: PC=00000000000000000000001011000100
# instruction fetch stage: PC_next=00000000000000000000001011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c8
# pc register: out = 000002c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000100
# instruction fetch stage: PC=00000000000000000000001011001000
# instruction fetch stage: PC_next=00000000000000000000001011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002cc
# pc register: out = 000002c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001000
# instruction fetch stage: PC=00000000000000000000001011001100
# instruction fetch stage: PC_next=00000000000000000000001011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d0
# pc register: out = 000002cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001100
# instruction fetch stage: PC=00000000000000000000001011010000
# instruction fetch stage: PC_next=00000000000000000000001011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d4
# pc register: out = 000002d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010000
# instruction fetch stage: PC=00000000000000000000001011010100
# instruction fetch stage: PC_next=00000000000000000000001011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d8
# pc register: out = 000002d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010100
# instruction fetch stage: PC=00000000000000000000001011011000
# instruction fetch stage: PC_next=00000000000000000000001011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002dc
# pc register: out = 000002d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011000
# instruction fetch stage: PC=00000000000000000000001011011100
# instruction fetch stage: PC_next=00000000000000000000001011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e0
# pc register: out = 000002dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011100
# instruction fetch stage: PC=00000000000000000000001011100000
# instruction fetch stage: PC_next=00000000000000000000001011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e4
# pc register: out = 000002e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100000
# instruction fetch stage: PC=00000000000000000000001011100100
# instruction fetch stage: PC_next=00000000000000000000001011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e8
# pc register: out = 000002e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100100
# instruction fetch stage: PC=00000000000000000000001011101000
# instruction fetch stage: PC_next=00000000000000000000001011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ec
# pc register: out = 000002e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101000
# instruction fetch stage: PC=00000000000000000000001011101100
# instruction fetch stage: PC_next=00000000000000000000001011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f0
# pc register: out = 000002ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101100
# instruction fetch stage: PC=00000000000000000000001011110000
# instruction fetch stage: PC_next=00000000000000000000001011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f4
# pc register: out = 000002f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110000
# instruction fetch stage: PC=00000000000000000000001011110100
# instruction fetch stage: PC_next=00000000000000000000001011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f8
# pc register: out = 000002f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110100
# instruction fetch stage: PC=00000000000000000000001011111000
# instruction fetch stage: PC_next=00000000000000000000001011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002fc
# pc register: out = 000002f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111000
# instruction fetch stage: PC=00000000000000000000001011111100
# instruction fetch stage: PC_next=00000000000000000000001011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000300
# pc register: out = 000002fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111100
# instruction fetch stage: PC=00000000000000000000001100000000
# instruction fetch stage: PC_next=00000000000000000000001100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000304
# pc register: out = 00000300
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000000
# instruction fetch stage: PC=00000000000000000000001100000100
# instruction fetch stage: PC_next=00000000000000000000001100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000308
# pc register: out = 00000304
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000100
# instruction fetch stage: PC=00000000000000000000001100001000
# instruction fetch stage: PC_next=00000000000000000000001100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000030c
# pc register: out = 00000308
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001000
# instruction fetch stage: PC=00000000000000000000001100001100
# instruction fetch stage: PC_next=00000000000000000000001100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000310
# pc register: out = 0000030c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001100
# instruction fetch stage: PC=00000000000000000000001100010000
# instruction fetch stage: PC_next=00000000000000000000001100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000314
# pc register: out = 00000310
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010000
# instruction fetch stage: PC=00000000000000000000001100010100
# instruction fetch stage: PC_next=00000000000000000000001100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000318
# pc register: out = 00000314
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010100
# instruction fetch stage: PC=00000000000000000000001100011000
# instruction fetch stage: PC_next=00000000000000000000001100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000031c
# pc register: out = 00000318
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011000
# instruction fetch stage: PC=00000000000000000000001100011100
# instruction fetch stage: PC_next=00000000000000000000001100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000320
# pc register: out = 0000031c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011100
# instruction fetch stage: PC=00000000000000000000001100100000
# instruction fetch stage: PC_next=00000000000000000000001100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000324
# pc register: out = 00000320
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100000
# instruction fetch stage: PC=00000000000000000000001100100100
# instruction fetch stage: PC_next=00000000000000000000001100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000328
# pc register: out = 00000324
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100100
# instruction fetch stage: PC=00000000000000000000001100101000
# instruction fetch stage: PC_next=00000000000000000000001100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000032c
# pc register: out = 00000328
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101000
# instruction fetch stage: PC=00000000000000000000001100101100
# instruction fetch stage: PC_next=00000000000000000000001100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000330
# pc register: out = 0000032c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101100
# instruction fetch stage: PC=00000000000000000000001100110000
# instruction fetch stage: PC_next=00000000000000000000001100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000334
# pc register: out = 00000330
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110000
# instruction fetch stage: PC=00000000000000000000001100110100
# instruction fetch stage: PC_next=00000000000000000000001100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000338
# pc register: out = 00000334
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110100
# instruction fetch stage: PC=00000000000000000000001100111000
# instruction fetch stage: PC_next=00000000000000000000001100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000033c
# pc register: out = 00000338
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111000
# instruction fetch stage: PC=00000000000000000000001100111100
# instruction fetch stage: PC_next=00000000000000000000001100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000340
# pc register: out = 0000033c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111100
# instruction fetch stage: PC=00000000000000000000001101000000
# instruction fetch stage: PC_next=00000000000000000000001101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000344
# pc register: out = 00000340
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000000
# instruction fetch stage: PC=00000000000000000000001101000100
# instruction fetch stage: PC_next=00000000000000000000001101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000348
# pc register: out = 00000344
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000100
# instruction fetch stage: PC=00000000000000000000001101001000
# instruction fetch stage: PC_next=00000000000000000000001101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000034c
# pc register: out = 00000348
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001000
# instruction fetch stage: PC=00000000000000000000001101001100
# instruction fetch stage: PC_next=00000000000000000000001101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000350
# pc register: out = 0000034c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001100
# instruction fetch stage: PC=00000000000000000000001101010000
# instruction fetch stage: PC_next=00000000000000000000001101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000354
# pc register: out = 00000350
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010000
# instruction fetch stage: PC=00000000000000000000001101010100
# instruction fetch stage: PC_next=00000000000000000000001101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000358
# pc register: out = 00000354
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010100
# instruction fetch stage: PC=00000000000000000000001101011000
# instruction fetch stage: PC_next=00000000000000000000001101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000035c
# pc register: out = 00000358
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011000
# instruction fetch stage: PC=00000000000000000000001101011100
# instruction fetch stage: PC_next=00000000000000000000001101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000360
# pc register: out = 0000035c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011100
# instruction fetch stage: PC=00000000000000000000001101100000
# instruction fetch stage: PC_next=00000000000000000000001101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000364
# pc register: out = 00000360
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100000
# instruction fetch stage: PC=00000000000000000000001101100100
# instruction fetch stage: PC_next=00000000000000000000001101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000368
# pc register: out = 00000364
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100100
# instruction fetch stage: PC=00000000000000000000001101101000
# instruction fetch stage: PC_next=00000000000000000000001101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000036c
# pc register: out = 00000368
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101000
# instruction fetch stage: PC=00000000000000000000001101101100
# instruction fetch stage: PC_next=00000000000000000000001101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000370
# pc register: out = 0000036c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101100
# instruction fetch stage: PC=00000000000000000000001101110000
# instruction fetch stage: PC_next=00000000000000000000001101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000374
# pc register: out = 00000370
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110000
# instruction fetch stage: PC=00000000000000000000001101110100
# instruction fetch stage: PC_next=00000000000000000000001101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000378
# pc register: out = 00000374
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110100
# instruction fetch stage: PC=00000000000000000000001101111000
# instruction fetch stage: PC_next=00000000000000000000001101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000037c
# pc register: out = 00000378
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111000
# instruction fetch stage: PC=00000000000000000000001101111100
# instruction fetch stage: PC_next=00000000000000000000001101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000380
# pc register: out = 0000037c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111100
# instruction fetch stage: PC=00000000000000000000001110000000
# instruction fetch stage: PC_next=00000000000000000000001110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000384
# pc register: out = 00000380
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000000
# instruction fetch stage: PC=00000000000000000000001110000100
# instruction fetch stage: PC_next=00000000000000000000001110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000388
# pc register: out = 00000384
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000100
# instruction fetch stage: PC=00000000000000000000001110001000
# instruction fetch stage: PC_next=00000000000000000000001110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000038c
# pc register: out = 00000388
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001000
# instruction fetch stage: PC=00000000000000000000001110001100
# instruction fetch stage: PC_next=00000000000000000000001110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000390
# pc register: out = 0000038c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001100
# instruction fetch stage: PC=00000000000000000000001110010000
# instruction fetch stage: PC_next=00000000000000000000001110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000394
# pc register: out = 00000390
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110010000
# instruction fetch stage: PC=00000000000000000000001110010100
# instruction fetch stage: PC_next=00000000000000000000001110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000398
# pc register: out = 00000394
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:42:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:42:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:42:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Compiling module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:42:15 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:42:15 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:42:16 on Dec 04,2024, Elapsed time: 0:00:25
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:42:16 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967189
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c4
# pc register: out = 000000c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000228
# pc register: out = 00000224
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100100
# instruction fetch stage: PC=00000000000000000000001000101000
# instruction fetch stage: PC_next=00000000000000000000001000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000022c
# pc register: out = 00000228
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101000
# instruction fetch stage: PC=00000000000000000000001000101100
# instruction fetch stage: PC_next=00000000000000000000001000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000230
# pc register: out = 0000022c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101100
# instruction fetch stage: PC=00000000000000000000001000110000
# instruction fetch stage: PC_next=00000000000000000000001000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000234
# pc register: out = 00000230
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110000
# instruction fetch stage: PC=00000000000000000000001000110100
# instruction fetch stage: PC_next=00000000000000000000001000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000238
# pc register: out = 00000234
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110100
# instruction fetch stage: PC=00000000000000000000001000111000
# instruction fetch stage: PC_next=00000000000000000000001000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000023c
# pc register: out = 00000238
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111000
# instruction fetch stage: PC=00000000000000000000001000111100
# instruction fetch stage: PC_next=00000000000000000000001000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000240
# pc register: out = 0000023c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111100
# instruction fetch stage: PC=00000000000000000000001001000000
# instruction fetch stage: PC_next=00000000000000000000001001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000244
# pc register: out = 00000240
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000000
# instruction fetch stage: PC=00000000000000000000001001000100
# instruction fetch stage: PC_next=00000000000000000000001001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000248
# pc register: out = 00000244
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000100
# instruction fetch stage: PC=00000000000000000000001001001000
# instruction fetch stage: PC_next=00000000000000000000001001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000024c
# pc register: out = 00000248
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001000
# instruction fetch stage: PC=00000000000000000000001001001100
# instruction fetch stage: PC_next=00000000000000000000001001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000250
# pc register: out = 0000024c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001100
# instruction fetch stage: PC=00000000000000000000001001010000
# instruction fetch stage: PC_next=00000000000000000000001001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000254
# pc register: out = 00000250
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010000
# instruction fetch stage: PC=00000000000000000000001001010100
# instruction fetch stage: PC_next=00000000000000000000001001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000258
# pc register: out = 00000254
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010100
# instruction fetch stage: PC=00000000000000000000001001011000
# instruction fetch stage: PC_next=00000000000000000000001001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000025c
# pc register: out = 00000258
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011000
# instruction fetch stage: PC=00000000000000000000001001011100
# instruction fetch stage: PC_next=00000000000000000000001001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000260
# pc register: out = 0000025c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011100
# instruction fetch stage: PC=00000000000000000000001001100000
# instruction fetch stage: PC_next=00000000000000000000001001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000264
# pc register: out = 00000260
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100000
# instruction fetch stage: PC=00000000000000000000001001100100
# instruction fetch stage: PC_next=00000000000000000000001001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000268
# pc register: out = 00000264
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100100
# instruction fetch stage: PC=00000000000000000000001001101000
# instruction fetch stage: PC_next=00000000000000000000001001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000026c
# pc register: out = 00000268
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101000
# instruction fetch stage: PC=00000000000000000000001001101100
# instruction fetch stage: PC_next=00000000000000000000001001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000270
# pc register: out = 0000026c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101100
# instruction fetch stage: PC=00000000000000000000001001110000
# instruction fetch stage: PC_next=00000000000000000000001001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000274
# pc register: out = 00000270
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110000
# instruction fetch stage: PC=00000000000000000000001001110100
# instruction fetch stage: PC_next=00000000000000000000001001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000278
# pc register: out = 00000274
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110100
# instruction fetch stage: PC=00000000000000000000001001111000
# instruction fetch stage: PC_next=00000000000000000000001001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000027c
# pc register: out = 00000278
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111000
# instruction fetch stage: PC=00000000000000000000001001111100
# instruction fetch stage: PC_next=00000000000000000000001001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000280
# pc register: out = 0000027c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111100
# instruction fetch stage: PC=00000000000000000000001010000000
# instruction fetch stage: PC_next=00000000000000000000001010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000284
# pc register: out = 00000280
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000000
# instruction fetch stage: PC=00000000000000000000001010000100
# instruction fetch stage: PC_next=00000000000000000000001010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000288
# pc register: out = 00000284
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000100
# instruction fetch stage: PC=00000000000000000000001010001000
# instruction fetch stage: PC_next=00000000000000000000001010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000028c
# pc register: out = 00000288
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001000
# instruction fetch stage: PC=00000000000000000000001010001100
# instruction fetch stage: PC_next=00000000000000000000001010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000290
# pc register: out = 0000028c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001100
# instruction fetch stage: PC=00000000000000000000001010010000
# instruction fetch stage: PC_next=00000000000000000000001010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000294
# pc register: out = 00000290
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010000
# instruction fetch stage: PC=00000000000000000000001010010100
# instruction fetch stage: PC_next=00000000000000000000001010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000298
# pc register: out = 00000294
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010100
# instruction fetch stage: PC=00000000000000000000001010011000
# instruction fetch stage: PC_next=00000000000000000000001010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000029c
# pc register: out = 00000298
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011000
# instruction fetch stage: PC=00000000000000000000001010011100
# instruction fetch stage: PC_next=00000000000000000000001010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a0
# pc register: out = 0000029c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011100
# instruction fetch stage: PC=00000000000000000000001010100000
# instruction fetch stage: PC_next=00000000000000000000001010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a4
# pc register: out = 000002a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100000
# instruction fetch stage: PC=00000000000000000000001010100100
# instruction fetch stage: PC_next=00000000000000000000001010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a8
# pc register: out = 000002a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100100
# instruction fetch stage: PC=00000000000000000000001010101000
# instruction fetch stage: PC_next=00000000000000000000001010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ac
# pc register: out = 000002a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101000
# instruction fetch stage: PC=00000000000000000000001010101100
# instruction fetch stage: PC_next=00000000000000000000001010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b0
# pc register: out = 000002ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101100
# instruction fetch stage: PC=00000000000000000000001010110000
# instruction fetch stage: PC_next=00000000000000000000001010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b4
# pc register: out = 000002b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110000
# instruction fetch stage: PC=00000000000000000000001010110100
# instruction fetch stage: PC_next=00000000000000000000001010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b8
# pc register: out = 000002b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110100
# instruction fetch stage: PC=00000000000000000000001010111000
# instruction fetch stage: PC_next=00000000000000000000001010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002bc
# pc register: out = 000002b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111000
# instruction fetch stage: PC=00000000000000000000001010111100
# instruction fetch stage: PC_next=00000000000000000000001010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c0
# pc register: out = 000002bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111100
# instruction fetch stage: PC=00000000000000000000001011000000
# instruction fetch stage: PC_next=00000000000000000000001011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c4
# pc register: out = 000002c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000000
# instruction fetch stage: PC=00000000000000000000001011000100
# instruction fetch stage: PC_next=00000000000000000000001011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c8
# pc register: out = 000002c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000100
# instruction fetch stage: PC=00000000000000000000001011001000
# instruction fetch stage: PC_next=00000000000000000000001011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002cc
# pc register: out = 000002c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001000
# instruction fetch stage: PC=00000000000000000000001011001100
# instruction fetch stage: PC_next=00000000000000000000001011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d0
# pc register: out = 000002cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001100
# instruction fetch stage: PC=00000000000000000000001011010000
# instruction fetch stage: PC_next=00000000000000000000001011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d4
# pc register: out = 000002d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010000
# instruction fetch stage: PC=00000000000000000000001011010100
# instruction fetch stage: PC_next=00000000000000000000001011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d8
# pc register: out = 000002d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010100
# instruction fetch stage: PC=00000000000000000000001011011000
# instruction fetch stage: PC_next=00000000000000000000001011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002dc
# pc register: out = 000002d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011000
# instruction fetch stage: PC=00000000000000000000001011011100
# instruction fetch stage: PC_next=00000000000000000000001011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e0
# pc register: out = 000002dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011100
# instruction fetch stage: PC=00000000000000000000001011100000
# instruction fetch stage: PC_next=00000000000000000000001011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e4
# pc register: out = 000002e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100000
# instruction fetch stage: PC=00000000000000000000001011100100
# instruction fetch stage: PC_next=00000000000000000000001011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e8
# pc register: out = 000002e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100100
# instruction fetch stage: PC=00000000000000000000001011101000
# instruction fetch stage: PC_next=00000000000000000000001011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ec
# pc register: out = 000002e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101000
# instruction fetch stage: PC=00000000000000000000001011101100
# instruction fetch stage: PC_next=00000000000000000000001011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f0
# pc register: out = 000002ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101100
# instruction fetch stage: PC=00000000000000000000001011110000
# instruction fetch stage: PC_next=00000000000000000000001011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f4
# pc register: out = 000002f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110000
# instruction fetch stage: PC=00000000000000000000001011110100
# instruction fetch stage: PC_next=00000000000000000000001011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f8
# pc register: out = 000002f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110100
# instruction fetch stage: PC=00000000000000000000001011111000
# instruction fetch stage: PC_next=00000000000000000000001011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002fc
# pc register: out = 000002f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111000
# instruction fetch stage: PC=00000000000000000000001011111100
# instruction fetch stage: PC_next=00000000000000000000001011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000300
# pc register: out = 000002fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111100
# instruction fetch stage: PC=00000000000000000000001100000000
# instruction fetch stage: PC_next=00000000000000000000001100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000304
# pc register: out = 00000300
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000000
# instruction fetch stage: PC=00000000000000000000001100000100
# instruction fetch stage: PC_next=00000000000000000000001100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000308
# pc register: out = 00000304
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000100
# instruction fetch stage: PC=00000000000000000000001100001000
# instruction fetch stage: PC_next=00000000000000000000001100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000030c
# pc register: out = 00000308
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001000
# instruction fetch stage: PC=00000000000000000000001100001100
# instruction fetch stage: PC_next=00000000000000000000001100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000310
# pc register: out = 0000030c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001100
# instruction fetch stage: PC=00000000000000000000001100010000
# instruction fetch stage: PC_next=00000000000000000000001100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000314
# pc register: out = 00000310
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010000
# instruction fetch stage: PC=00000000000000000000001100010100
# instruction fetch stage: PC_next=00000000000000000000001100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000318
# pc register: out = 00000314
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010100
# instruction fetch stage: PC=00000000000000000000001100011000
# instruction fetch stage: PC_next=00000000000000000000001100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000031c
# pc register: out = 00000318
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011000
# instruction fetch stage: PC=00000000000000000000001100011100
# instruction fetch stage: PC_next=00000000000000000000001100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000320
# pc register: out = 0000031c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011100
# instruction fetch stage: PC=00000000000000000000001100100000
# instruction fetch stage: PC_next=00000000000000000000001100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000324
# pc register: out = 00000320
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100000
# instruction fetch stage: PC=00000000000000000000001100100100
# instruction fetch stage: PC_next=00000000000000000000001100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000328
# pc register: out = 00000324
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100100
# instruction fetch stage: PC=00000000000000000000001100101000
# instruction fetch stage: PC_next=00000000000000000000001100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000032c
# pc register: out = 00000328
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101000
# instruction fetch stage: PC=00000000000000000000001100101100
# instruction fetch stage: PC_next=00000000000000000000001100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000330
# pc register: out = 0000032c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101100
# instruction fetch stage: PC=00000000000000000000001100110000
# instruction fetch stage: PC_next=00000000000000000000001100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000334
# pc register: out = 00000330
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110000
# instruction fetch stage: PC=00000000000000000000001100110100
# instruction fetch stage: PC_next=00000000000000000000001100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000338
# pc register: out = 00000334
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110100
# instruction fetch stage: PC=00000000000000000000001100111000
# instruction fetch stage: PC_next=00000000000000000000001100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000033c
# pc register: out = 00000338
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111000
# instruction fetch stage: PC=00000000000000000000001100111100
# instruction fetch stage: PC_next=00000000000000000000001100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000340
# pc register: out = 0000033c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111100
# instruction fetch stage: PC=00000000000000000000001101000000
# instruction fetch stage: PC_next=00000000000000000000001101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000344
# pc register: out = 00000340
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000000
# instruction fetch stage: PC=00000000000000000000001101000100
# instruction fetch stage: PC_next=00000000000000000000001101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000348
# pc register: out = 00000344
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000100
# instruction fetch stage: PC=00000000000000000000001101001000
# instruction fetch stage: PC_next=00000000000000000000001101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000034c
# pc register: out = 00000348
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001000
# instruction fetch stage: PC=00000000000000000000001101001100
# instruction fetch stage: PC_next=00000000000000000000001101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000350
# pc register: out = 0000034c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001100
# instruction fetch stage: PC=00000000000000000000001101010000
# instruction fetch stage: PC_next=00000000000000000000001101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000354
# pc register: out = 00000350
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010000
# instruction fetch stage: PC=00000000000000000000001101010100
# instruction fetch stage: PC_next=00000000000000000000001101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000358
# pc register: out = 00000354
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010100
# instruction fetch stage: PC=00000000000000000000001101011000
# instruction fetch stage: PC_next=00000000000000000000001101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000035c
# pc register: out = 00000358
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011000
# instruction fetch stage: PC=00000000000000000000001101011100
# instruction fetch stage: PC_next=00000000000000000000001101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000360
# pc register: out = 0000035c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011100
# instruction fetch stage: PC=00000000000000000000001101100000
# instruction fetch stage: PC_next=00000000000000000000001101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000364
# pc register: out = 00000360
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100000
# instruction fetch stage: PC=00000000000000000000001101100100
# instruction fetch stage: PC_next=00000000000000000000001101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000368
# pc register: out = 00000364
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100100
# instruction fetch stage: PC=00000000000000000000001101101000
# instruction fetch stage: PC_next=00000000000000000000001101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000036c
# pc register: out = 00000368
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101000
# instruction fetch stage: PC=00000000000000000000001101101100
# instruction fetch stage: PC_next=00000000000000000000001101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000370
# pc register: out = 0000036c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101100
# instruction fetch stage: PC=00000000000000000000001101110000
# instruction fetch stage: PC_next=00000000000000000000001101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000374
# pc register: out = 00000370
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110000
# instruction fetch stage: PC=00000000000000000000001101110100
# instruction fetch stage: PC_next=00000000000000000000001101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000378
# pc register: out = 00000374
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110100
# instruction fetch stage: PC=00000000000000000000001101111000
# instruction fetch stage: PC_next=00000000000000000000001101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000037c
# pc register: out = 00000378
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111000
# instruction fetch stage: PC=00000000000000000000001101111100
# instruction fetch stage: PC_next=00000000000000000000001101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000380
# pc register: out = 0000037c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111100
# instruction fetch stage: PC=00000000000000000000001110000000
# instruction fetch stage: PC_next=00000000000000000000001110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000384
# pc register: out = 00000380
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000000
# instruction fetch stage: PC=00000000000000000000001110000100
# instruction fetch stage: PC_next=00000000000000000000001110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000388
# pc register: out = 00000384
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000100
# instruction fetch stage: PC=00000000000000000000001110001000
# instruction fetch stage: PC_next=00000000000000000000001110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000038c
# pc register: out = 00000388
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001000
# instruction fetch stage: PC=00000000000000000000001110001100
# instruction fetch stage: PC_next=00000000000000000000001110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000390
# pc register: out = 0000038c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001100
# instruction fetch stage: PC=00000000000000000000001110010000
# instruction fetch stage: PC_next=00000000000000000000001110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000394
# pc register: out = 00000390
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110010000
# instruction fetch stage: PC=00000000000000000000001110010100
# instruction fetch stage: PC_next=00000000000000000000001110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000398
# pc register: out = 00000394
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/valRm
add wave -position 1  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/val2
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:28 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:49:28 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:28 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:49:28 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:28 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:49:28 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:28 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:49:28 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:28 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Compiling module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:29 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:49:29 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:49:30 on Dec 04,2024, Elapsed time: 0:07:14
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:49:30 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967189
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c4
# pc register: out = 000000c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000228
# pc register: out = 00000224
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100100
# instruction fetch stage: PC=00000000000000000000001000101000
# instruction fetch stage: PC_next=00000000000000000000001000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000022c
# pc register: out = 00000228
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101000
# instruction fetch stage: PC=00000000000000000000001000101100
# instruction fetch stage: PC_next=00000000000000000000001000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000230
# pc register: out = 0000022c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101100
# instruction fetch stage: PC=00000000000000000000001000110000
# instruction fetch stage: PC_next=00000000000000000000001000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000234
# pc register: out = 00000230
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110000
# instruction fetch stage: PC=00000000000000000000001000110100
# instruction fetch stage: PC_next=00000000000000000000001000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000238
# pc register: out = 00000234
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110100
# instruction fetch stage: PC=00000000000000000000001000111000
# instruction fetch stage: PC_next=00000000000000000000001000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000023c
# pc register: out = 00000238
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111000
# instruction fetch stage: PC=00000000000000000000001000111100
# instruction fetch stage: PC_next=00000000000000000000001000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000240
# pc register: out = 0000023c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111100
# instruction fetch stage: PC=00000000000000000000001001000000
# instruction fetch stage: PC_next=00000000000000000000001001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000244
# pc register: out = 00000240
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000000
# instruction fetch stage: PC=00000000000000000000001001000100
# instruction fetch stage: PC_next=00000000000000000000001001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000248
# pc register: out = 00000244
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000100
# instruction fetch stage: PC=00000000000000000000001001001000
# instruction fetch stage: PC_next=00000000000000000000001001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000024c
# pc register: out = 00000248
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001000
# instruction fetch stage: PC=00000000000000000000001001001100
# instruction fetch stage: PC_next=00000000000000000000001001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000250
# pc register: out = 0000024c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001100
# instruction fetch stage: PC=00000000000000000000001001010000
# instruction fetch stage: PC_next=00000000000000000000001001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000254
# pc register: out = 00000250
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010000
# instruction fetch stage: PC=00000000000000000000001001010100
# instruction fetch stage: PC_next=00000000000000000000001001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000258
# pc register: out = 00000254
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010100
# instruction fetch stage: PC=00000000000000000000001001011000
# instruction fetch stage: PC_next=00000000000000000000001001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000025c
# pc register: out = 00000258
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011000
# instruction fetch stage: PC=00000000000000000000001001011100
# instruction fetch stage: PC_next=00000000000000000000001001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000260
# pc register: out = 0000025c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011100
# instruction fetch stage: PC=00000000000000000000001001100000
# instruction fetch stage: PC_next=00000000000000000000001001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000264
# pc register: out = 00000260
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100000
# instruction fetch stage: PC=00000000000000000000001001100100
# instruction fetch stage: PC_next=00000000000000000000001001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000268
# pc register: out = 00000264
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100100
# instruction fetch stage: PC=00000000000000000000001001101000
# instruction fetch stage: PC_next=00000000000000000000001001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000026c
# pc register: out = 00000268
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101000
# instruction fetch stage: PC=00000000000000000000001001101100
# instruction fetch stage: PC_next=00000000000000000000001001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000270
# pc register: out = 0000026c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101100
# instruction fetch stage: PC=00000000000000000000001001110000
# instruction fetch stage: PC_next=00000000000000000000001001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000274
# pc register: out = 00000270
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110000
# instruction fetch stage: PC=00000000000000000000001001110100
# instruction fetch stage: PC_next=00000000000000000000001001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000278
# pc register: out = 00000274
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110100
# instruction fetch stage: PC=00000000000000000000001001111000
# instruction fetch stage: PC_next=00000000000000000000001001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000027c
# pc register: out = 00000278
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111000
# instruction fetch stage: PC=00000000000000000000001001111100
# instruction fetch stage: PC_next=00000000000000000000001001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000280
# pc register: out = 0000027c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111100
# instruction fetch stage: PC=00000000000000000000001010000000
# instruction fetch stage: PC_next=00000000000000000000001010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000284
# pc register: out = 00000280
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000000
# instruction fetch stage: PC=00000000000000000000001010000100
# instruction fetch stage: PC_next=00000000000000000000001010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000288
# pc register: out = 00000284
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000100
# instruction fetch stage: PC=00000000000000000000001010001000
# instruction fetch stage: PC_next=00000000000000000000001010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000028c
# pc register: out = 00000288
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001000
# instruction fetch stage: PC=00000000000000000000001010001100
# instruction fetch stage: PC_next=00000000000000000000001010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000290
# pc register: out = 0000028c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001100
# instruction fetch stage: PC=00000000000000000000001010010000
# instruction fetch stage: PC_next=00000000000000000000001010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000294
# pc register: out = 00000290
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010000
# instruction fetch stage: PC=00000000000000000000001010010100
# instruction fetch stage: PC_next=00000000000000000000001010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000298
# pc register: out = 00000294
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010100
# instruction fetch stage: PC=00000000000000000000001010011000
# instruction fetch stage: PC_next=00000000000000000000001010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000029c
# pc register: out = 00000298
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011000
# instruction fetch stage: PC=00000000000000000000001010011100
# instruction fetch stage: PC_next=00000000000000000000001010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a0
# pc register: out = 0000029c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011100
# instruction fetch stage: PC=00000000000000000000001010100000
# instruction fetch stage: PC_next=00000000000000000000001010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a4
# pc register: out = 000002a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100000
# instruction fetch stage: PC=00000000000000000000001010100100
# instruction fetch stage: PC_next=00000000000000000000001010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a8
# pc register: out = 000002a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100100
# instruction fetch stage: PC=00000000000000000000001010101000
# instruction fetch stage: PC_next=00000000000000000000001010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ac
# pc register: out = 000002a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101000
# instruction fetch stage: PC=00000000000000000000001010101100
# instruction fetch stage: PC_next=00000000000000000000001010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b0
# pc register: out = 000002ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101100
# instruction fetch stage: PC=00000000000000000000001010110000
# instruction fetch stage: PC_next=00000000000000000000001010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b4
# pc register: out = 000002b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110000
# instruction fetch stage: PC=00000000000000000000001010110100
# instruction fetch stage: PC_next=00000000000000000000001010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b8
# pc register: out = 000002b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110100
# instruction fetch stage: PC=00000000000000000000001010111000
# instruction fetch stage: PC_next=00000000000000000000001010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002bc
# pc register: out = 000002b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111000
# instruction fetch stage: PC=00000000000000000000001010111100
# instruction fetch stage: PC_next=00000000000000000000001010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c0
# pc register: out = 000002bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111100
# instruction fetch stage: PC=00000000000000000000001011000000
# instruction fetch stage: PC_next=00000000000000000000001011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c4
# pc register: out = 000002c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000000
# instruction fetch stage: PC=00000000000000000000001011000100
# instruction fetch stage: PC_next=00000000000000000000001011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c8
# pc register: out = 000002c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000100
# instruction fetch stage: PC=00000000000000000000001011001000
# instruction fetch stage: PC_next=00000000000000000000001011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002cc
# pc register: out = 000002c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001000
# instruction fetch stage: PC=00000000000000000000001011001100
# instruction fetch stage: PC_next=00000000000000000000001011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d0
# pc register: out = 000002cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001100
# instruction fetch stage: PC=00000000000000000000001011010000
# instruction fetch stage: PC_next=00000000000000000000001011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d4
# pc register: out = 000002d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010000
# instruction fetch stage: PC=00000000000000000000001011010100
# instruction fetch stage: PC_next=00000000000000000000001011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d8
# pc register: out = 000002d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010100
# instruction fetch stage: PC=00000000000000000000001011011000
# instruction fetch stage: PC_next=00000000000000000000001011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002dc
# pc register: out = 000002d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011000
# instruction fetch stage: PC=00000000000000000000001011011100
# instruction fetch stage: PC_next=00000000000000000000001011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e0
# pc register: out = 000002dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011100
# instruction fetch stage: PC=00000000000000000000001011100000
# instruction fetch stage: PC_next=00000000000000000000001011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e4
# pc register: out = 000002e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100000
# instruction fetch stage: PC=00000000000000000000001011100100
# instruction fetch stage: PC_next=00000000000000000000001011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e8
# pc register: out = 000002e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100100
# instruction fetch stage: PC=00000000000000000000001011101000
# instruction fetch stage: PC_next=00000000000000000000001011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ec
# pc register: out = 000002e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101000
# instruction fetch stage: PC=00000000000000000000001011101100
# instruction fetch stage: PC_next=00000000000000000000001011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f0
# pc register: out = 000002ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101100
# instruction fetch stage: PC=00000000000000000000001011110000
# instruction fetch stage: PC_next=00000000000000000000001011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f4
# pc register: out = 000002f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110000
# instruction fetch stage: PC=00000000000000000000001011110100
# instruction fetch stage: PC_next=00000000000000000000001011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f8
# pc register: out = 000002f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110100
# instruction fetch stage: PC=00000000000000000000001011111000
# instruction fetch stage: PC_next=00000000000000000000001011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002fc
# pc register: out = 000002f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111000
# instruction fetch stage: PC=00000000000000000000001011111100
# instruction fetch stage: PC_next=00000000000000000000001011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000300
# pc register: out = 000002fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111100
# instruction fetch stage: PC=00000000000000000000001100000000
# instruction fetch stage: PC_next=00000000000000000000001100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000304
# pc register: out = 00000300
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000000
# instruction fetch stage: PC=00000000000000000000001100000100
# instruction fetch stage: PC_next=00000000000000000000001100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000308
# pc register: out = 00000304
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000100
# instruction fetch stage: PC=00000000000000000000001100001000
# instruction fetch stage: PC_next=00000000000000000000001100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000030c
# pc register: out = 00000308
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001000
# instruction fetch stage: PC=00000000000000000000001100001100
# instruction fetch stage: PC_next=00000000000000000000001100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000310
# pc register: out = 0000030c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001100
# instruction fetch stage: PC=00000000000000000000001100010000
# instruction fetch stage: PC_next=00000000000000000000001100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000314
# pc register: out = 00000310
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010000
# instruction fetch stage: PC=00000000000000000000001100010100
# instruction fetch stage: PC_next=00000000000000000000001100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000318
# pc register: out = 00000314
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010100
# instruction fetch stage: PC=00000000000000000000001100011000
# instruction fetch stage: PC_next=00000000000000000000001100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000031c
# pc register: out = 00000318
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011000
# instruction fetch stage: PC=00000000000000000000001100011100
# instruction fetch stage: PC_next=00000000000000000000001100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000320
# pc register: out = 0000031c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011100
# instruction fetch stage: PC=00000000000000000000001100100000
# instruction fetch stage: PC_next=00000000000000000000001100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000324
# pc register: out = 00000320
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100000
# instruction fetch stage: PC=00000000000000000000001100100100
# instruction fetch stage: PC_next=00000000000000000000001100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000328
# pc register: out = 00000324
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100100
# instruction fetch stage: PC=00000000000000000000001100101000
# instruction fetch stage: PC_next=00000000000000000000001100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000032c
# pc register: out = 00000328
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101000
# instruction fetch stage: PC=00000000000000000000001100101100
# instruction fetch stage: PC_next=00000000000000000000001100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000330
# pc register: out = 0000032c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101100
# instruction fetch stage: PC=00000000000000000000001100110000
# instruction fetch stage: PC_next=00000000000000000000001100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000334
# pc register: out = 00000330
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110000
# instruction fetch stage: PC=00000000000000000000001100110100
# instruction fetch stage: PC_next=00000000000000000000001100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000338
# pc register: out = 00000334
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110100
# instruction fetch stage: PC=00000000000000000000001100111000
# instruction fetch stage: PC_next=00000000000000000000001100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000033c
# pc register: out = 00000338
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111000
# instruction fetch stage: PC=00000000000000000000001100111100
# instruction fetch stage: PC_next=00000000000000000000001100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000340
# pc register: out = 0000033c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111100
# instruction fetch stage: PC=00000000000000000000001101000000
# instruction fetch stage: PC_next=00000000000000000000001101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000344
# pc register: out = 00000340
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000000
# instruction fetch stage: PC=00000000000000000000001101000100
# instruction fetch stage: PC_next=00000000000000000000001101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000348
# pc register: out = 00000344
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000100
# instruction fetch stage: PC=00000000000000000000001101001000
# instruction fetch stage: PC_next=00000000000000000000001101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000034c
# pc register: out = 00000348
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001000
# instruction fetch stage: PC=00000000000000000000001101001100
# instruction fetch stage: PC_next=00000000000000000000001101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000350
# pc register: out = 0000034c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001100
# instruction fetch stage: PC=00000000000000000000001101010000
# instruction fetch stage: PC_next=00000000000000000000001101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000354
# pc register: out = 00000350
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010000
# instruction fetch stage: PC=00000000000000000000001101010100
# instruction fetch stage: PC_next=00000000000000000000001101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000358
# pc register: out = 00000354
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010100
# instruction fetch stage: PC=00000000000000000000001101011000
# instruction fetch stage: PC_next=00000000000000000000001101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000035c
# pc register: out = 00000358
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011000
# instruction fetch stage: PC=00000000000000000000001101011100
# instruction fetch stage: PC_next=00000000000000000000001101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000360
# pc register: out = 0000035c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011100
# instruction fetch stage: PC=00000000000000000000001101100000
# instruction fetch stage: PC_next=00000000000000000000001101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000364
# pc register: out = 00000360
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100000
# instruction fetch stage: PC=00000000000000000000001101100100
# instruction fetch stage: PC_next=00000000000000000000001101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000368
# pc register: out = 00000364
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100100
# instruction fetch stage: PC=00000000000000000000001101101000
# instruction fetch stage: PC_next=00000000000000000000001101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000036c
# pc register: out = 00000368
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101000
# instruction fetch stage: PC=00000000000000000000001101101100
# instruction fetch stage: PC_next=00000000000000000000001101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000370
# pc register: out = 0000036c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101100
# instruction fetch stage: PC=00000000000000000000001101110000
# instruction fetch stage: PC_next=00000000000000000000001101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000374
# pc register: out = 00000370
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110000
# instruction fetch stage: PC=00000000000000000000001101110100
# instruction fetch stage: PC_next=00000000000000000000001101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000378
# pc register: out = 00000374
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110100
# instruction fetch stage: PC=00000000000000000000001101111000
# instruction fetch stage: PC_next=00000000000000000000001101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000037c
# pc register: out = 00000378
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111000
# instruction fetch stage: PC=00000000000000000000001101111100
# instruction fetch stage: PC_next=00000000000000000000001101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000380
# pc register: out = 0000037c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111100
# instruction fetch stage: PC=00000000000000000000001110000000
# instruction fetch stage: PC_next=00000000000000000000001110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000384
# pc register: out = 00000380
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000000
# instruction fetch stage: PC=00000000000000000000001110000100
# instruction fetch stage: PC_next=00000000000000000000001110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000388
# pc register: out = 00000384
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000100
# instruction fetch stage: PC=00000000000000000000001110001000
# instruction fetch stage: PC_next=00000000000000000000001110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000038c
# pc register: out = 00000388
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001000
# instruction fetch stage: PC=00000000000000000000001110001100
# instruction fetch stage: PC_next=00000000000000000000001110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000390
# pc register: out = 0000038c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001100
# instruction fetch stage: PC=00000000000000000000001110010000
# instruction fetch stage: PC_next=00000000000000000000001110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000394
# pc register: out = 00000390
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110010000
# instruction fetch stage: PC=00000000000000000000001110010100
# instruction fetch stage: PC_next=00000000000000000000001110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000398
# pc register: out = 00000394
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
add wave -position 1  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/val2
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/valRm
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:13 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:53:13 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:13 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:53:13 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:13 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:53:13 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:13 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:53:13 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:13 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:53:13 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Compiling module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:53:14 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:53:14 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:53:15 on Dec 04,2024, Elapsed time: 0:03:45
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:53:15 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967189
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c4
# pc register: out = 000000c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000228
# pc register: out = 00000224
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100100
# instruction fetch stage: PC=00000000000000000000001000101000
# instruction fetch stage: PC_next=00000000000000000000001000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000022c
# pc register: out = 00000228
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101000
# instruction fetch stage: PC=00000000000000000000001000101100
# instruction fetch stage: PC_next=00000000000000000000001000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000230
# pc register: out = 0000022c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101100
# instruction fetch stage: PC=00000000000000000000001000110000
# instruction fetch stage: PC_next=00000000000000000000001000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000234
# pc register: out = 00000230
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110000
# instruction fetch stage: PC=00000000000000000000001000110100
# instruction fetch stage: PC_next=00000000000000000000001000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000238
# pc register: out = 00000234
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110100
# instruction fetch stage: PC=00000000000000000000001000111000
# instruction fetch stage: PC_next=00000000000000000000001000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000023c
# pc register: out = 00000238
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111000
# instruction fetch stage: PC=00000000000000000000001000111100
# instruction fetch stage: PC_next=00000000000000000000001000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000240
# pc register: out = 0000023c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111100
# instruction fetch stage: PC=00000000000000000000001001000000
# instruction fetch stage: PC_next=00000000000000000000001001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000244
# pc register: out = 00000240
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000000
# instruction fetch stage: PC=00000000000000000000001001000100
# instruction fetch stage: PC_next=00000000000000000000001001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000248
# pc register: out = 00000244
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000100
# instruction fetch stage: PC=00000000000000000000001001001000
# instruction fetch stage: PC_next=00000000000000000000001001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000024c
# pc register: out = 00000248
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001000
# instruction fetch stage: PC=00000000000000000000001001001100
# instruction fetch stage: PC_next=00000000000000000000001001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000250
# pc register: out = 0000024c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001100
# instruction fetch stage: PC=00000000000000000000001001010000
# instruction fetch stage: PC_next=00000000000000000000001001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000254
# pc register: out = 00000250
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010000
# instruction fetch stage: PC=00000000000000000000001001010100
# instruction fetch stage: PC_next=00000000000000000000001001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000258
# pc register: out = 00000254
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010100
# instruction fetch stage: PC=00000000000000000000001001011000
# instruction fetch stage: PC_next=00000000000000000000001001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000025c
# pc register: out = 00000258
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011000
# instruction fetch stage: PC=00000000000000000000001001011100
# instruction fetch stage: PC_next=00000000000000000000001001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000260
# pc register: out = 0000025c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011100
# instruction fetch stage: PC=00000000000000000000001001100000
# instruction fetch stage: PC_next=00000000000000000000001001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000264
# pc register: out = 00000260
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100000
# instruction fetch stage: PC=00000000000000000000001001100100
# instruction fetch stage: PC_next=00000000000000000000001001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000268
# pc register: out = 00000264
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100100
# instruction fetch stage: PC=00000000000000000000001001101000
# instruction fetch stage: PC_next=00000000000000000000001001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000026c
# pc register: out = 00000268
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101000
# instruction fetch stage: PC=00000000000000000000001001101100
# instruction fetch stage: PC_next=00000000000000000000001001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000270
# pc register: out = 0000026c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101100
# instruction fetch stage: PC=00000000000000000000001001110000
# instruction fetch stage: PC_next=00000000000000000000001001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000274
# pc register: out = 00000270
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110000
# instruction fetch stage: PC=00000000000000000000001001110100
# instruction fetch stage: PC_next=00000000000000000000001001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000278
# pc register: out = 00000274
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110100
# instruction fetch stage: PC=00000000000000000000001001111000
# instruction fetch stage: PC_next=00000000000000000000001001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000027c
# pc register: out = 00000278
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111000
# instruction fetch stage: PC=00000000000000000000001001111100
# instruction fetch stage: PC_next=00000000000000000000001001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000280
# pc register: out = 0000027c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111100
# instruction fetch stage: PC=00000000000000000000001010000000
# instruction fetch stage: PC_next=00000000000000000000001010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000284
# pc register: out = 00000280
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000000
# instruction fetch stage: PC=00000000000000000000001010000100
# instruction fetch stage: PC_next=00000000000000000000001010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000288
# pc register: out = 00000284
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000100
# instruction fetch stage: PC=00000000000000000000001010001000
# instruction fetch stage: PC_next=00000000000000000000001010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000028c
# pc register: out = 00000288
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001000
# instruction fetch stage: PC=00000000000000000000001010001100
# instruction fetch stage: PC_next=00000000000000000000001010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000290
# pc register: out = 0000028c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001100
# instruction fetch stage: PC=00000000000000000000001010010000
# instruction fetch stage: PC_next=00000000000000000000001010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000294
# pc register: out = 00000290
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010000
# instruction fetch stage: PC=00000000000000000000001010010100
# instruction fetch stage: PC_next=00000000000000000000001010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000298
# pc register: out = 00000294
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010100
# instruction fetch stage: PC=00000000000000000000001010011000
# instruction fetch stage: PC_next=00000000000000000000001010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000029c
# pc register: out = 00000298
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011000
# instruction fetch stage: PC=00000000000000000000001010011100
# instruction fetch stage: PC_next=00000000000000000000001010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a0
# pc register: out = 0000029c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011100
# instruction fetch stage: PC=00000000000000000000001010100000
# instruction fetch stage: PC_next=00000000000000000000001010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a4
# pc register: out = 000002a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100000
# instruction fetch stage: PC=00000000000000000000001010100100
# instruction fetch stage: PC_next=00000000000000000000001010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a8
# pc register: out = 000002a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100100
# instruction fetch stage: PC=00000000000000000000001010101000
# instruction fetch stage: PC_next=00000000000000000000001010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ac
# pc register: out = 000002a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101000
# instruction fetch stage: PC=00000000000000000000001010101100
# instruction fetch stage: PC_next=00000000000000000000001010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b0
# pc register: out = 000002ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101100
# instruction fetch stage: PC=00000000000000000000001010110000
# instruction fetch stage: PC_next=00000000000000000000001010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b4
# pc register: out = 000002b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110000
# instruction fetch stage: PC=00000000000000000000001010110100
# instruction fetch stage: PC_next=00000000000000000000001010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b8
# pc register: out = 000002b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110100
# instruction fetch stage: PC=00000000000000000000001010111000
# instruction fetch stage: PC_next=00000000000000000000001010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002bc
# pc register: out = 000002b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111000
# instruction fetch stage: PC=00000000000000000000001010111100
# instruction fetch stage: PC_next=00000000000000000000001010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c0
# pc register: out = 000002bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111100
# instruction fetch stage: PC=00000000000000000000001011000000
# instruction fetch stage: PC_next=00000000000000000000001011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c4
# pc register: out = 000002c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000000
# instruction fetch stage: PC=00000000000000000000001011000100
# instruction fetch stage: PC_next=00000000000000000000001011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c8
# pc register: out = 000002c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000100
# instruction fetch stage: PC=00000000000000000000001011001000
# instruction fetch stage: PC_next=00000000000000000000001011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002cc
# pc register: out = 000002c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001000
# instruction fetch stage: PC=00000000000000000000001011001100
# instruction fetch stage: PC_next=00000000000000000000001011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d0
# pc register: out = 000002cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001100
# instruction fetch stage: PC=00000000000000000000001011010000
# instruction fetch stage: PC_next=00000000000000000000001011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d4
# pc register: out = 000002d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010000
# instruction fetch stage: PC=00000000000000000000001011010100
# instruction fetch stage: PC_next=00000000000000000000001011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d8
# pc register: out = 000002d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010100
# instruction fetch stage: PC=00000000000000000000001011011000
# instruction fetch stage: PC_next=00000000000000000000001011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002dc
# pc register: out = 000002d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011000
# instruction fetch stage: PC=00000000000000000000001011011100
# instruction fetch stage: PC_next=00000000000000000000001011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e0
# pc register: out = 000002dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011100
# instruction fetch stage: PC=00000000000000000000001011100000
# instruction fetch stage: PC_next=00000000000000000000001011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e4
# pc register: out = 000002e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100000
# instruction fetch stage: PC=00000000000000000000001011100100
# instruction fetch stage: PC_next=00000000000000000000001011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e8
# pc register: out = 000002e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100100
# instruction fetch stage: PC=00000000000000000000001011101000
# instruction fetch stage: PC_next=00000000000000000000001011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ec
# pc register: out = 000002e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101000
# instruction fetch stage: PC=00000000000000000000001011101100
# instruction fetch stage: PC_next=00000000000000000000001011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f0
# pc register: out = 000002ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101100
# instruction fetch stage: PC=00000000000000000000001011110000
# instruction fetch stage: PC_next=00000000000000000000001011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f4
# pc register: out = 000002f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110000
# instruction fetch stage: PC=00000000000000000000001011110100
# instruction fetch stage: PC_next=00000000000000000000001011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f8
# pc register: out = 000002f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110100
# instruction fetch stage: PC=00000000000000000000001011111000
# instruction fetch stage: PC_next=00000000000000000000001011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002fc
# pc register: out = 000002f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111000
# instruction fetch stage: PC=00000000000000000000001011111100
# instruction fetch stage: PC_next=00000000000000000000001011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000300
# pc register: out = 000002fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111100
# instruction fetch stage: PC=00000000000000000000001100000000
# instruction fetch stage: PC_next=00000000000000000000001100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000304
# pc register: out = 00000300
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000000
# instruction fetch stage: PC=00000000000000000000001100000100
# instruction fetch stage: PC_next=00000000000000000000001100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000308
# pc register: out = 00000304
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000100
# instruction fetch stage: PC=00000000000000000000001100001000
# instruction fetch stage: PC_next=00000000000000000000001100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000030c
# pc register: out = 00000308
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001000
# instruction fetch stage: PC=00000000000000000000001100001100
# instruction fetch stage: PC_next=00000000000000000000001100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000310
# pc register: out = 0000030c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001100
# instruction fetch stage: PC=00000000000000000000001100010000
# instruction fetch stage: PC_next=00000000000000000000001100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000314
# pc register: out = 00000310
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010000
# instruction fetch stage: PC=00000000000000000000001100010100
# instruction fetch stage: PC_next=00000000000000000000001100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000318
# pc register: out = 00000314
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010100
# instruction fetch stage: PC=00000000000000000000001100011000
# instruction fetch stage: PC_next=00000000000000000000001100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000031c
# pc register: out = 00000318
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011000
# instruction fetch stage: PC=00000000000000000000001100011100
# instruction fetch stage: PC_next=00000000000000000000001100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000320
# pc register: out = 0000031c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011100
# instruction fetch stage: PC=00000000000000000000001100100000
# instruction fetch stage: PC_next=00000000000000000000001100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000324
# pc register: out = 00000320
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100000
# instruction fetch stage: PC=00000000000000000000001100100100
# instruction fetch stage: PC_next=00000000000000000000001100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000328
# pc register: out = 00000324
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100100
# instruction fetch stage: PC=00000000000000000000001100101000
# instruction fetch stage: PC_next=00000000000000000000001100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000032c
# pc register: out = 00000328
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101000
# instruction fetch stage: PC=00000000000000000000001100101100
# instruction fetch stage: PC_next=00000000000000000000001100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000330
# pc register: out = 0000032c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101100
# instruction fetch stage: PC=00000000000000000000001100110000
# instruction fetch stage: PC_next=00000000000000000000001100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000334
# pc register: out = 00000330
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110000
# instruction fetch stage: PC=00000000000000000000001100110100
# instruction fetch stage: PC_next=00000000000000000000001100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000338
# pc register: out = 00000334
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110100
# instruction fetch stage: PC=00000000000000000000001100111000
# instruction fetch stage: PC_next=00000000000000000000001100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000033c
# pc register: out = 00000338
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111000
# instruction fetch stage: PC=00000000000000000000001100111100
# instruction fetch stage: PC_next=00000000000000000000001100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000340
# pc register: out = 0000033c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111100
# instruction fetch stage: PC=00000000000000000000001101000000
# instruction fetch stage: PC_next=00000000000000000000001101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000344
# pc register: out = 00000340
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000000
# instruction fetch stage: PC=00000000000000000000001101000100
# instruction fetch stage: PC_next=00000000000000000000001101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000348
# pc register: out = 00000344
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000100
# instruction fetch stage: PC=00000000000000000000001101001000
# instruction fetch stage: PC_next=00000000000000000000001101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000034c
# pc register: out = 00000348
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001000
# instruction fetch stage: PC=00000000000000000000001101001100
# instruction fetch stage: PC_next=00000000000000000000001101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000350
# pc register: out = 0000034c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001100
# instruction fetch stage: PC=00000000000000000000001101010000
# instruction fetch stage: PC_next=00000000000000000000001101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000354
# pc register: out = 00000350
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010000
# instruction fetch stage: PC=00000000000000000000001101010100
# instruction fetch stage: PC_next=00000000000000000000001101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000358
# pc register: out = 00000354
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010100
# instruction fetch stage: PC=00000000000000000000001101011000
# instruction fetch stage: PC_next=00000000000000000000001101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000035c
# pc register: out = 00000358
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011000
# instruction fetch stage: PC=00000000000000000000001101011100
# instruction fetch stage: PC_next=00000000000000000000001101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000360
# pc register: out = 0000035c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011100
# instruction fetch stage: PC=00000000000000000000001101100000
# instruction fetch stage: PC_next=00000000000000000000001101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000364
# pc register: out = 00000360
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100000
# instruction fetch stage: PC=00000000000000000000001101100100
# instruction fetch stage: PC_next=00000000000000000000001101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000368
# pc register: out = 00000364
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100100
# instruction fetch stage: PC=00000000000000000000001101101000
# instruction fetch stage: PC_next=00000000000000000000001101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000036c
# pc register: out = 00000368
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101000
# instruction fetch stage: PC=00000000000000000000001101101100
# instruction fetch stage: PC_next=00000000000000000000001101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000370
# pc register: out = 0000036c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101100
# instruction fetch stage: PC=00000000000000000000001101110000
# instruction fetch stage: PC_next=00000000000000000000001101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000374
# pc register: out = 00000370
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110000
# instruction fetch stage: PC=00000000000000000000001101110100
# instruction fetch stage: PC_next=00000000000000000000001101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000378
# pc register: out = 00000374
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110100
# instruction fetch stage: PC=00000000000000000000001101111000
# instruction fetch stage: PC_next=00000000000000000000001101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000037c
# pc register: out = 00000378
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111000
# instruction fetch stage: PC=00000000000000000000001101111100
# instruction fetch stage: PC_next=00000000000000000000001101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000380
# pc register: out = 0000037c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111100
# instruction fetch stage: PC=00000000000000000000001110000000
# instruction fetch stage: PC_next=00000000000000000000001110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000384
# pc register: out = 00000380
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000000
# instruction fetch stage: PC=00000000000000000000001110000100
# instruction fetch stage: PC_next=00000000000000000000001110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000388
# pc register: out = 00000384
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000100
# instruction fetch stage: PC=00000000000000000000001110001000
# instruction fetch stage: PC_next=00000000000000000000001110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000038c
# pc register: out = 00000388
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001000
# instruction fetch stage: PC=00000000000000000000001110001100
# instruction fetch stage: PC_next=00000000000000000000001110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000390
# pc register: out = 0000038c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001100
# instruction fetch stage: PC=00000000000000000000001110010000
# instruction fetch stage: PC_next=00000000000000000000001110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000394
# pc register: out = 00000390
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110010000
# instruction fetch stage: PC=00000000000000000000001110010100
# instruction fetch stage: PC_next=00000000000000000000001110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000398
# pc register: out = 00000394
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
add wave -position 1  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/val2
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/u_ExecutionStage/u_Val2Generator/valRm
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Compiling module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 14:59:10 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:10 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 14:59:11 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 14:59:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 14:59:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 14:59:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 14:59:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 14:59:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:59:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 14:59:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:59:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 14:59:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:59:11 on Dec 04,2024, Elapsed time: 0:05:56
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 14:59:11 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967189
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c4
# pc register: out = 000000c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000228
# pc register: out = 00000224
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100100
# instruction fetch stage: PC=00000000000000000000001000101000
# instruction fetch stage: PC_next=00000000000000000000001000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000022c
# pc register: out = 00000228
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101000
# instruction fetch stage: PC=00000000000000000000001000101100
# instruction fetch stage: PC_next=00000000000000000000001000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000230
# pc register: out = 0000022c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101100
# instruction fetch stage: PC=00000000000000000000001000110000
# instruction fetch stage: PC_next=00000000000000000000001000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000234
# pc register: out = 00000230
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110000
# instruction fetch stage: PC=00000000000000000000001000110100
# instruction fetch stage: PC_next=00000000000000000000001000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000238
# pc register: out = 00000234
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110100
# instruction fetch stage: PC=00000000000000000000001000111000
# instruction fetch stage: PC_next=00000000000000000000001000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000023c
# pc register: out = 00000238
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111000
# instruction fetch stage: PC=00000000000000000000001000111100
# instruction fetch stage: PC_next=00000000000000000000001000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000240
# pc register: out = 0000023c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111100
# instruction fetch stage: PC=00000000000000000000001001000000
# instruction fetch stage: PC_next=00000000000000000000001001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000244
# pc register: out = 00000240
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000000
# instruction fetch stage: PC=00000000000000000000001001000100
# instruction fetch stage: PC_next=00000000000000000000001001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000248
# pc register: out = 00000244
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000100
# instruction fetch stage: PC=00000000000000000000001001001000
# instruction fetch stage: PC_next=00000000000000000000001001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000024c
# pc register: out = 00000248
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001000
# instruction fetch stage: PC=00000000000000000000001001001100
# instruction fetch stage: PC_next=00000000000000000000001001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000250
# pc register: out = 0000024c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001100
# instruction fetch stage: PC=00000000000000000000001001010000
# instruction fetch stage: PC_next=00000000000000000000001001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000254
# pc register: out = 00000250
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010000
# instruction fetch stage: PC=00000000000000000000001001010100
# instruction fetch stage: PC_next=00000000000000000000001001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000258
# pc register: out = 00000254
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010100
# instruction fetch stage: PC=00000000000000000000001001011000
# instruction fetch stage: PC_next=00000000000000000000001001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000025c
# pc register: out = 00000258
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011000
# instruction fetch stage: PC=00000000000000000000001001011100
# instruction fetch stage: PC_next=00000000000000000000001001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000260
# pc register: out = 0000025c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011100
# instruction fetch stage: PC=00000000000000000000001001100000
# instruction fetch stage: PC_next=00000000000000000000001001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000264
# pc register: out = 00000260
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100000
# instruction fetch stage: PC=00000000000000000000001001100100
# instruction fetch stage: PC_next=00000000000000000000001001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000268
# pc register: out = 00000264
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100100
# instruction fetch stage: PC=00000000000000000000001001101000
# instruction fetch stage: PC_next=00000000000000000000001001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000026c
# pc register: out = 00000268
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101000
# instruction fetch stage: PC=00000000000000000000001001101100
# instruction fetch stage: PC_next=00000000000000000000001001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000270
# pc register: out = 0000026c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101100
# instruction fetch stage: PC=00000000000000000000001001110000
# instruction fetch stage: PC_next=00000000000000000000001001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000274
# pc register: out = 00000270
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110000
# instruction fetch stage: PC=00000000000000000000001001110100
# instruction fetch stage: PC_next=00000000000000000000001001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000278
# pc register: out = 00000274
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110100
# instruction fetch stage: PC=00000000000000000000001001111000
# instruction fetch stage: PC_next=00000000000000000000001001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000027c
# pc register: out = 00000278
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111000
# instruction fetch stage: PC=00000000000000000000001001111100
# instruction fetch stage: PC_next=00000000000000000000001001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000280
# pc register: out = 0000027c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111100
# instruction fetch stage: PC=00000000000000000000001010000000
# instruction fetch stage: PC_next=00000000000000000000001010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000284
# pc register: out = 00000280
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000000
# instruction fetch stage: PC=00000000000000000000001010000100
# instruction fetch stage: PC_next=00000000000000000000001010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000288
# pc register: out = 00000284
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000100
# instruction fetch stage: PC=00000000000000000000001010001000
# instruction fetch stage: PC_next=00000000000000000000001010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000028c
# pc register: out = 00000288
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001000
# instruction fetch stage: PC=00000000000000000000001010001100
# instruction fetch stage: PC_next=00000000000000000000001010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000290
# pc register: out = 0000028c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001100
# instruction fetch stage: PC=00000000000000000000001010010000
# instruction fetch stage: PC_next=00000000000000000000001010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000294
# pc register: out = 00000290
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010000
# instruction fetch stage: PC=00000000000000000000001010010100
# instruction fetch stage: PC_next=00000000000000000000001010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000298
# pc register: out = 00000294
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010100
# instruction fetch stage: PC=00000000000000000000001010011000
# instruction fetch stage: PC_next=00000000000000000000001010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000029c
# pc register: out = 00000298
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011000
# instruction fetch stage: PC=00000000000000000000001010011100
# instruction fetch stage: PC_next=00000000000000000000001010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a0
# pc register: out = 0000029c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011100
# instruction fetch stage: PC=00000000000000000000001010100000
# instruction fetch stage: PC_next=00000000000000000000001010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a4
# pc register: out = 000002a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100000
# instruction fetch stage: PC=00000000000000000000001010100100
# instruction fetch stage: PC_next=00000000000000000000001010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a8
# pc register: out = 000002a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100100
# instruction fetch stage: PC=00000000000000000000001010101000
# instruction fetch stage: PC_next=00000000000000000000001010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ac
# pc register: out = 000002a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101000
# instruction fetch stage: PC=00000000000000000000001010101100
# instruction fetch stage: PC_next=00000000000000000000001010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b0
# pc register: out = 000002ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101100
# instruction fetch stage: PC=00000000000000000000001010110000
# instruction fetch stage: PC_next=00000000000000000000001010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b4
# pc register: out = 000002b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110000
# instruction fetch stage: PC=00000000000000000000001010110100
# instruction fetch stage: PC_next=00000000000000000000001010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b8
# pc register: out = 000002b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110100
# instruction fetch stage: PC=00000000000000000000001010111000
# instruction fetch stage: PC_next=00000000000000000000001010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002bc
# pc register: out = 000002b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111000
# instruction fetch stage: PC=00000000000000000000001010111100
# instruction fetch stage: PC_next=00000000000000000000001010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c0
# pc register: out = 000002bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111100
# instruction fetch stage: PC=00000000000000000000001011000000
# instruction fetch stage: PC_next=00000000000000000000001011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c4
# pc register: out = 000002c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000000
# instruction fetch stage: PC=00000000000000000000001011000100
# instruction fetch stage: PC_next=00000000000000000000001011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c8
# pc register: out = 000002c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000100
# instruction fetch stage: PC=00000000000000000000001011001000
# instruction fetch stage: PC_next=00000000000000000000001011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002cc
# pc register: out = 000002c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001000
# instruction fetch stage: PC=00000000000000000000001011001100
# instruction fetch stage: PC_next=00000000000000000000001011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d0
# pc register: out = 000002cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001100
# instruction fetch stage: PC=00000000000000000000001011010000
# instruction fetch stage: PC_next=00000000000000000000001011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d4
# pc register: out = 000002d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010000
# instruction fetch stage: PC=00000000000000000000001011010100
# instruction fetch stage: PC_next=00000000000000000000001011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d8
# pc register: out = 000002d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010100
# instruction fetch stage: PC=00000000000000000000001011011000
# instruction fetch stage: PC_next=00000000000000000000001011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002dc
# pc register: out = 000002d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011000
# instruction fetch stage: PC=00000000000000000000001011011100
# instruction fetch stage: PC_next=00000000000000000000001011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e0
# pc register: out = 000002dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011100
# instruction fetch stage: PC=00000000000000000000001011100000
# instruction fetch stage: PC_next=00000000000000000000001011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e4
# pc register: out = 000002e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100000
# instruction fetch stage: PC=00000000000000000000001011100100
# instruction fetch stage: PC_next=00000000000000000000001011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e8
# pc register: out = 000002e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100100
# instruction fetch stage: PC=00000000000000000000001011101000
# instruction fetch stage: PC_next=00000000000000000000001011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ec
# pc register: out = 000002e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101000
# instruction fetch stage: PC=00000000000000000000001011101100
# instruction fetch stage: PC_next=00000000000000000000001011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f0
# pc register: out = 000002ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101100
# instruction fetch stage: PC=00000000000000000000001011110000
# instruction fetch stage: PC_next=00000000000000000000001011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f4
# pc register: out = 000002f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110000
# instruction fetch stage: PC=00000000000000000000001011110100
# instruction fetch stage: PC_next=00000000000000000000001011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f8
# pc register: out = 000002f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110100
# instruction fetch stage: PC=00000000000000000000001011111000
# instruction fetch stage: PC_next=00000000000000000000001011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002fc
# pc register: out = 000002f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111000
# instruction fetch stage: PC=00000000000000000000001011111100
# instruction fetch stage: PC_next=00000000000000000000001011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000300
# pc register: out = 000002fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111100
# instruction fetch stage: PC=00000000000000000000001100000000
# instruction fetch stage: PC_next=00000000000000000000001100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000304
# pc register: out = 00000300
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000000
# instruction fetch stage: PC=00000000000000000000001100000100
# instruction fetch stage: PC_next=00000000000000000000001100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000308
# pc register: out = 00000304
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000100
# instruction fetch stage: PC=00000000000000000000001100001000
# instruction fetch stage: PC_next=00000000000000000000001100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000030c
# pc register: out = 00000308
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001000
# instruction fetch stage: PC=00000000000000000000001100001100
# instruction fetch stage: PC_next=00000000000000000000001100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000310
# pc register: out = 0000030c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001100
# instruction fetch stage: PC=00000000000000000000001100010000
# instruction fetch stage: PC_next=00000000000000000000001100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000314
# pc register: out = 00000310
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010000
# instruction fetch stage: PC=00000000000000000000001100010100
# instruction fetch stage: PC_next=00000000000000000000001100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000318
# pc register: out = 00000314
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010100
# instruction fetch stage: PC=00000000000000000000001100011000
# instruction fetch stage: PC_next=00000000000000000000001100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000031c
# pc register: out = 00000318
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011000
# instruction fetch stage: PC=00000000000000000000001100011100
# instruction fetch stage: PC_next=00000000000000000000001100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000320
# pc register: out = 0000031c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011100
# instruction fetch stage: PC=00000000000000000000001100100000
# instruction fetch stage: PC_next=00000000000000000000001100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000324
# pc register: out = 00000320
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100000
# instruction fetch stage: PC=00000000000000000000001100100100
# instruction fetch stage: PC_next=00000000000000000000001100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000328
# pc register: out = 00000324
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100100
# instruction fetch stage: PC=00000000000000000000001100101000
# instruction fetch stage: PC_next=00000000000000000000001100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000032c
# pc register: out = 00000328
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101000
# instruction fetch stage: PC=00000000000000000000001100101100
# instruction fetch stage: PC_next=00000000000000000000001100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000330
# pc register: out = 0000032c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101100
# instruction fetch stage: PC=00000000000000000000001100110000
# instruction fetch stage: PC_next=00000000000000000000001100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000334
# pc register: out = 00000330
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110000
# instruction fetch stage: PC=00000000000000000000001100110100
# instruction fetch stage: PC_next=00000000000000000000001100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000338
# pc register: out = 00000334
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110100
# instruction fetch stage: PC=00000000000000000000001100111000
# instruction fetch stage: PC_next=00000000000000000000001100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000033c
# pc register: out = 00000338
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111000
# instruction fetch stage: PC=00000000000000000000001100111100
# instruction fetch stage: PC_next=00000000000000000000001100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000340
# pc register: out = 0000033c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111100
# instruction fetch stage: PC=00000000000000000000001101000000
# instruction fetch stage: PC_next=00000000000000000000001101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000344
# pc register: out = 00000340
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000000
# instruction fetch stage: PC=00000000000000000000001101000100
# instruction fetch stage: PC_next=00000000000000000000001101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000348
# pc register: out = 00000344
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000100
# instruction fetch stage: PC=00000000000000000000001101001000
# instruction fetch stage: PC_next=00000000000000000000001101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000034c
# pc register: out = 00000348
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001000
# instruction fetch stage: PC=00000000000000000000001101001100
# instruction fetch stage: PC_next=00000000000000000000001101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000350
# pc register: out = 0000034c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001100
# instruction fetch stage: PC=00000000000000000000001101010000
# instruction fetch stage: PC_next=00000000000000000000001101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000354
# pc register: out = 00000350
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010000
# instruction fetch stage: PC=00000000000000000000001101010100
# instruction fetch stage: PC_next=00000000000000000000001101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000358
# pc register: out = 00000354
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010100
# instruction fetch stage: PC=00000000000000000000001101011000
# instruction fetch stage: PC_next=00000000000000000000001101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000035c
# pc register: out = 00000358
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011000
# instruction fetch stage: PC=00000000000000000000001101011100
# instruction fetch stage: PC_next=00000000000000000000001101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000360
# pc register: out = 0000035c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011100
# instruction fetch stage: PC=00000000000000000000001101100000
# instruction fetch stage: PC_next=00000000000000000000001101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000364
# pc register: out = 00000360
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100000
# instruction fetch stage: PC=00000000000000000000001101100100
# instruction fetch stage: PC_next=00000000000000000000001101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000368
# pc register: out = 00000364
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100100
# instruction fetch stage: PC=00000000000000000000001101101000
# instruction fetch stage: PC_next=00000000000000000000001101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000036c
# pc register: out = 00000368
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101000
# instruction fetch stage: PC=00000000000000000000001101101100
# instruction fetch stage: PC_next=00000000000000000000001101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000370
# pc register: out = 0000036c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101100
# instruction fetch stage: PC=00000000000000000000001101110000
# instruction fetch stage: PC_next=00000000000000000000001101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000374
# pc register: out = 00000370
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110000
# instruction fetch stage: PC=00000000000000000000001101110100
# instruction fetch stage: PC_next=00000000000000000000001101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000378
# pc register: out = 00000374
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110100
# instruction fetch stage: PC=00000000000000000000001101111000
# instruction fetch stage: PC_next=00000000000000000000001101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000037c
# pc register: out = 00000378
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111000
# instruction fetch stage: PC=00000000000000000000001101111100
# instruction fetch stage: PC_next=00000000000000000000001101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000380
# pc register: out = 0000037c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111100
# instruction fetch stage: PC=00000000000000000000001110000000
# instruction fetch stage: PC_next=00000000000000000000001110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000384
# pc register: out = 00000380
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000000
# instruction fetch stage: PC=00000000000000000000001110000100
# instruction fetch stage: PC_next=00000000000000000000001110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000388
# pc register: out = 00000384
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000100
# instruction fetch stage: PC=00000000000000000000001110001000
# instruction fetch stage: PC_next=00000000000000000000001110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000038c
# pc register: out = 00000388
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001000
# instruction fetch stage: PC=00000000000000000000001110001100
# instruction fetch stage: PC_next=00000000000000000000001110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000390
# pc register: out = 0000038c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001100
# instruction fetch stage: PC=00000000000000000000001110010000
# instruction fetch stage: PC_next=00000000000000000000001110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000394
# pc register: out = 00000390
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110010000
# instruction fetch stage: PC=00000000000000000000001110010100
# instruction fetch stage: PC_next=00000000000000000000001110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000398
# pc register: out = 00000394
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:20 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 15:04:20 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:20 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 15:04:20 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:20 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 15:04:20 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:20 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 15:04:20 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:20 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 15:04:20 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:20 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 15:04:20 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:20 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Compiling module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:21 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 15:04:21 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 15:04:22 on Dec 04,2024, Elapsed time: 0:05:11
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 15:04:22 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8716) Reusing existing debug database vsim.dbg.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967189
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c4
# pc register: out = 000000c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000228
# pc register: out = 00000224
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100100
# instruction fetch stage: PC=00000000000000000000001000101000
# instruction fetch stage: PC_next=00000000000000000000001000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000022c
# pc register: out = 00000228
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101000
# instruction fetch stage: PC=00000000000000000000001000101100
# instruction fetch stage: PC_next=00000000000000000000001000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000230
# pc register: out = 0000022c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101100
# instruction fetch stage: PC=00000000000000000000001000110000
# instruction fetch stage: PC_next=00000000000000000000001000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000234
# pc register: out = 00000230
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110000
# instruction fetch stage: PC=00000000000000000000001000110100
# instruction fetch stage: PC_next=00000000000000000000001000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000238
# pc register: out = 00000234
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110100
# instruction fetch stage: PC=00000000000000000000001000111000
# instruction fetch stage: PC_next=00000000000000000000001000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000023c
# pc register: out = 00000238
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111000
# instruction fetch stage: PC=00000000000000000000001000111100
# instruction fetch stage: PC_next=00000000000000000000001000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000240
# pc register: out = 0000023c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111100
# instruction fetch stage: PC=00000000000000000000001001000000
# instruction fetch stage: PC_next=00000000000000000000001001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000244
# pc register: out = 00000240
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000000
# instruction fetch stage: PC=00000000000000000000001001000100
# instruction fetch stage: PC_next=00000000000000000000001001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000248
# pc register: out = 00000244
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000100
# instruction fetch stage: PC=00000000000000000000001001001000
# instruction fetch stage: PC_next=00000000000000000000001001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000024c
# pc register: out = 00000248
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001000
# instruction fetch stage: PC=00000000000000000000001001001100
# instruction fetch stage: PC_next=00000000000000000000001001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000250
# pc register: out = 0000024c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001100
# instruction fetch stage: PC=00000000000000000000001001010000
# instruction fetch stage: PC_next=00000000000000000000001001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000254
# pc register: out = 00000250
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010000
# instruction fetch stage: PC=00000000000000000000001001010100
# instruction fetch stage: PC_next=00000000000000000000001001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000258
# pc register: out = 00000254
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010100
# instruction fetch stage: PC=00000000000000000000001001011000
# instruction fetch stage: PC_next=00000000000000000000001001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000025c
# pc register: out = 00000258
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011000
# instruction fetch stage: PC=00000000000000000000001001011100
# instruction fetch stage: PC_next=00000000000000000000001001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000260
# pc register: out = 0000025c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011100
# instruction fetch stage: PC=00000000000000000000001001100000
# instruction fetch stage: PC_next=00000000000000000000001001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000264
# pc register: out = 00000260
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100000
# instruction fetch stage: PC=00000000000000000000001001100100
# instruction fetch stage: PC_next=00000000000000000000001001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000268
# pc register: out = 00000264
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100100
# instruction fetch stage: PC=00000000000000000000001001101000
# instruction fetch stage: PC_next=00000000000000000000001001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000026c
# pc register: out = 00000268
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101000
# instruction fetch stage: PC=00000000000000000000001001101100
# instruction fetch stage: PC_next=00000000000000000000001001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000270
# pc register: out = 0000026c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101100
# instruction fetch stage: PC=00000000000000000000001001110000
# instruction fetch stage: PC_next=00000000000000000000001001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000274
# pc register: out = 00000270
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110000
# instruction fetch stage: PC=00000000000000000000001001110100
# instruction fetch stage: PC_next=00000000000000000000001001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000278
# pc register: out = 00000274
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110100
# instruction fetch stage: PC=00000000000000000000001001111000
# instruction fetch stage: PC_next=00000000000000000000001001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000027c
# pc register: out = 00000278
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111000
# instruction fetch stage: PC=00000000000000000000001001111100
# instruction fetch stage: PC_next=00000000000000000000001001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000280
# pc register: out = 0000027c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111100
# instruction fetch stage: PC=00000000000000000000001010000000
# instruction fetch stage: PC_next=00000000000000000000001010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000284
# pc register: out = 00000280
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000000
# instruction fetch stage: PC=00000000000000000000001010000100
# instruction fetch stage: PC_next=00000000000000000000001010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000288
# pc register: out = 00000284
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000100
# instruction fetch stage: PC=00000000000000000000001010001000
# instruction fetch stage: PC_next=00000000000000000000001010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000028c
# pc register: out = 00000288
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001000
# instruction fetch stage: PC=00000000000000000000001010001100
# instruction fetch stage: PC_next=00000000000000000000001010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000290
# pc register: out = 0000028c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001100
# instruction fetch stage: PC=00000000000000000000001010010000
# instruction fetch stage: PC_next=00000000000000000000001010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000294
# pc register: out = 00000290
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010000
# instruction fetch stage: PC=00000000000000000000001010010100
# instruction fetch stage: PC_next=00000000000000000000001010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000298
# pc register: out = 00000294
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010100
# instruction fetch stage: PC=00000000000000000000001010011000
# instruction fetch stage: PC_next=00000000000000000000001010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000029c
# pc register: out = 00000298
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011000
# instruction fetch stage: PC=00000000000000000000001010011100
# instruction fetch stage: PC_next=00000000000000000000001010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a0
# pc register: out = 0000029c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011100
# instruction fetch stage: PC=00000000000000000000001010100000
# instruction fetch stage: PC_next=00000000000000000000001010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a4
# pc register: out = 000002a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100000
# instruction fetch stage: PC=00000000000000000000001010100100
# instruction fetch stage: PC_next=00000000000000000000001010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a8
# pc register: out = 000002a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100100
# instruction fetch stage: PC=00000000000000000000001010101000
# instruction fetch stage: PC_next=00000000000000000000001010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ac
# pc register: out = 000002a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101000
# instruction fetch stage: PC=00000000000000000000001010101100
# instruction fetch stage: PC_next=00000000000000000000001010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b0
# pc register: out = 000002ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101100
# instruction fetch stage: PC=00000000000000000000001010110000
# instruction fetch stage: PC_next=00000000000000000000001010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b4
# pc register: out = 000002b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110000
# instruction fetch stage: PC=00000000000000000000001010110100
# instruction fetch stage: PC_next=00000000000000000000001010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b8
# pc register: out = 000002b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110100
# instruction fetch stage: PC=00000000000000000000001010111000
# instruction fetch stage: PC_next=00000000000000000000001010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002bc
# pc register: out = 000002b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111000
# instruction fetch stage: PC=00000000000000000000001010111100
# instruction fetch stage: PC_next=00000000000000000000001010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c0
# pc register: out = 000002bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111100
# instruction fetch stage: PC=00000000000000000000001011000000
# instruction fetch stage: PC_next=00000000000000000000001011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c4
# pc register: out = 000002c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000000
# instruction fetch stage: PC=00000000000000000000001011000100
# instruction fetch stage: PC_next=00000000000000000000001011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c8
# pc register: out = 000002c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000100
# instruction fetch stage: PC=00000000000000000000001011001000
# instruction fetch stage: PC_next=00000000000000000000001011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002cc
# pc register: out = 000002c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001000
# instruction fetch stage: PC=00000000000000000000001011001100
# instruction fetch stage: PC_next=00000000000000000000001011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d0
# pc register: out = 000002cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001100
# instruction fetch stage: PC=00000000000000000000001011010000
# instruction fetch stage: PC_next=00000000000000000000001011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d4
# pc register: out = 000002d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010000
# instruction fetch stage: PC=00000000000000000000001011010100
# instruction fetch stage: PC_next=00000000000000000000001011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d8
# pc register: out = 000002d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010100
# instruction fetch stage: PC=00000000000000000000001011011000
# instruction fetch stage: PC_next=00000000000000000000001011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002dc
# pc register: out = 000002d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011000
# instruction fetch stage: PC=00000000000000000000001011011100
# instruction fetch stage: PC_next=00000000000000000000001011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e0
# pc register: out = 000002dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011100
# instruction fetch stage: PC=00000000000000000000001011100000
# instruction fetch stage: PC_next=00000000000000000000001011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e4
# pc register: out = 000002e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100000
# instruction fetch stage: PC=00000000000000000000001011100100
# instruction fetch stage: PC_next=00000000000000000000001011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e8
# pc register: out = 000002e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100100
# instruction fetch stage: PC=00000000000000000000001011101000
# instruction fetch stage: PC_next=00000000000000000000001011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ec
# pc register: out = 000002e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101000
# instruction fetch stage: PC=00000000000000000000001011101100
# instruction fetch stage: PC_next=00000000000000000000001011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f0
# pc register: out = 000002ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101100
# instruction fetch stage: PC=00000000000000000000001011110000
# instruction fetch stage: PC_next=00000000000000000000001011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f4
# pc register: out = 000002f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110000
# instruction fetch stage: PC=00000000000000000000001011110100
# instruction fetch stage: PC_next=00000000000000000000001011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f8
# pc register: out = 000002f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110100
# instruction fetch stage: PC=00000000000000000000001011111000
# instruction fetch stage: PC_next=00000000000000000000001011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002fc
# pc register: out = 000002f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111000
# instruction fetch stage: PC=00000000000000000000001011111100
# instruction fetch stage: PC_next=00000000000000000000001011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000300
# pc register: out = 000002fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111100
# instruction fetch stage: PC=00000000000000000000001100000000
# instruction fetch stage: PC_next=00000000000000000000001100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000304
# pc register: out = 00000300
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000000
# instruction fetch stage: PC=00000000000000000000001100000100
# instruction fetch stage: PC_next=00000000000000000000001100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000308
# pc register: out = 00000304
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100000100
# instruction fetch stage: PC=00000000000000000000001100001000
# instruction fetch stage: PC_next=00000000000000000000001100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000030c
# pc register: out = 00000308
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001000
# instruction fetch stage: PC=00000000000000000000001100001100
# instruction fetch stage: PC_next=00000000000000000000001100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000310
# pc register: out = 0000030c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100001100
# instruction fetch stage: PC=00000000000000000000001100010000
# instruction fetch stage: PC_next=00000000000000000000001100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000314
# pc register: out = 00000310
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010000
# instruction fetch stage: PC=00000000000000000000001100010100
# instruction fetch stage: PC_next=00000000000000000000001100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000318
# pc register: out = 00000314
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100010100
# instruction fetch stage: PC=00000000000000000000001100011000
# instruction fetch stage: PC_next=00000000000000000000001100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000031c
# pc register: out = 00000318
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011000
# instruction fetch stage: PC=00000000000000000000001100011100
# instruction fetch stage: PC_next=00000000000000000000001100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000320
# pc register: out = 0000031c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100011100
# instruction fetch stage: PC=00000000000000000000001100100000
# instruction fetch stage: PC_next=00000000000000000000001100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000324
# pc register: out = 00000320
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100000
# instruction fetch stage: PC=00000000000000000000001100100100
# instruction fetch stage: PC_next=00000000000000000000001100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000328
# pc register: out = 00000324
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100100100
# instruction fetch stage: PC=00000000000000000000001100101000
# instruction fetch stage: PC_next=00000000000000000000001100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000032c
# pc register: out = 00000328
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101000
# instruction fetch stage: PC=00000000000000000000001100101100
# instruction fetch stage: PC_next=00000000000000000000001100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000330
# pc register: out = 0000032c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100101100
# instruction fetch stage: PC=00000000000000000000001100110000
# instruction fetch stage: PC_next=00000000000000000000001100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000334
# pc register: out = 00000330
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110000
# instruction fetch stage: PC=00000000000000000000001100110100
# instruction fetch stage: PC_next=00000000000000000000001100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000338
# pc register: out = 00000334
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100110100
# instruction fetch stage: PC=00000000000000000000001100111000
# instruction fetch stage: PC_next=00000000000000000000001100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000033c
# pc register: out = 00000338
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111000
# instruction fetch stage: PC=00000000000000000000001100111100
# instruction fetch stage: PC_next=00000000000000000000001100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000340
# pc register: out = 0000033c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001100111100
# instruction fetch stage: PC=00000000000000000000001101000000
# instruction fetch stage: PC_next=00000000000000000000001101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000344
# pc register: out = 00000340
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000000
# instruction fetch stage: PC=00000000000000000000001101000100
# instruction fetch stage: PC_next=00000000000000000000001101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000348
# pc register: out = 00000344
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101000100
# instruction fetch stage: PC=00000000000000000000001101001000
# instruction fetch stage: PC_next=00000000000000000000001101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000034c
# pc register: out = 00000348
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001000
# instruction fetch stage: PC=00000000000000000000001101001100
# instruction fetch stage: PC_next=00000000000000000000001101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000350
# pc register: out = 0000034c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101001100
# instruction fetch stage: PC=00000000000000000000001101010000
# instruction fetch stage: PC_next=00000000000000000000001101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000354
# pc register: out = 00000350
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010000
# instruction fetch stage: PC=00000000000000000000001101010100
# instruction fetch stage: PC_next=00000000000000000000001101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000358
# pc register: out = 00000354
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101010100
# instruction fetch stage: PC=00000000000000000000001101011000
# instruction fetch stage: PC_next=00000000000000000000001101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000035c
# pc register: out = 00000358
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011000
# instruction fetch stage: PC=00000000000000000000001101011100
# instruction fetch stage: PC_next=00000000000000000000001101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000360
# pc register: out = 0000035c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101011100
# instruction fetch stage: PC=00000000000000000000001101100000
# instruction fetch stage: PC_next=00000000000000000000001101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000364
# pc register: out = 00000360
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100000
# instruction fetch stage: PC=00000000000000000000001101100100
# instruction fetch stage: PC_next=00000000000000000000001101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000368
# pc register: out = 00000364
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101100100
# instruction fetch stage: PC=00000000000000000000001101101000
# instruction fetch stage: PC_next=00000000000000000000001101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000036c
# pc register: out = 00000368
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101000
# instruction fetch stage: PC=00000000000000000000001101101100
# instruction fetch stage: PC_next=00000000000000000000001101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000370
# pc register: out = 0000036c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101101100
# instruction fetch stage: PC=00000000000000000000001101110000
# instruction fetch stage: PC_next=00000000000000000000001101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000374
# pc register: out = 00000370
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110000
# instruction fetch stage: PC=00000000000000000000001101110100
# instruction fetch stage: PC_next=00000000000000000000001101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000378
# pc register: out = 00000374
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101110100
# instruction fetch stage: PC=00000000000000000000001101111000
# instruction fetch stage: PC_next=00000000000000000000001101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000037c
# pc register: out = 00000378
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111000
# instruction fetch stage: PC=00000000000000000000001101111100
# instruction fetch stage: PC_next=00000000000000000000001101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000380
# pc register: out = 0000037c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001101111100
# instruction fetch stage: PC=00000000000000000000001110000000
# instruction fetch stage: PC_next=00000000000000000000001110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000384
# pc register: out = 00000380
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000000
# instruction fetch stage: PC=00000000000000000000001110000100
# instruction fetch stage: PC_next=00000000000000000000001110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000388
# pc register: out = 00000384
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110000100
# instruction fetch stage: PC=00000000000000000000001110001000
# instruction fetch stage: PC_next=00000000000000000000001110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000038c
# pc register: out = 00000388
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001000
# instruction fetch stage: PC=00000000000000000000001110001100
# instruction fetch stage: PC_next=00000000000000000000001110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000390
# pc register: out = 0000038c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110001100
# instruction fetch stage: PC=00000000000000000000001110010000
# instruction fetch stage: PC_next=00000000000000000000001110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000394
# pc register: out = 00000390
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001110010000
# instruction fetch stage: PC=00000000000000000000001110010100
# instruction fetch stage: PC_next=00000000000000000000001110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000398
# pc register: out = 00000394
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:09:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 15:09:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:09:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 15:09:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:09:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 15:09:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:09:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Compiling module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 15:09:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:09:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 15:09:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:09:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 15:09:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:09:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 15:09:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:09:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 15:09:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:09:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 15:09:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:09:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 15:09:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:09:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Compiling module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 15:09:59 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:09:59 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:10:00 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 15:10:00 on Dec 04,2024, Elapsed time: 0:05:38
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 15:10:00 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100008b
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000001000000000000000010001011
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 0100008f
# pc register: out = 0100008b
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010001011
# instruction fetch stage: PC=00000001000000000000000010001111
# instruction fetch stage: PC_next=00000001000000000000000010001111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000093
# pc register: out = 0100008f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010001111
# instruction fetch stage: PC=00000001000000000000000010010011
# instruction fetch stage: PC_next=00000001000000000000000010010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010001111
# instruction fetch stage: PC=00000001000000000000000010010011
# instruction fetch stage: PC_next=00000001000000000000000010010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010001111
# instruction fetch stage: PC=00000001000000000000000010010011
# instruction fetch stage: PC_next=00000001000000000000000010010011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000097
# pc register: out = 01000093
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010010011
# instruction fetch stage: PC=00000001000000000000000010010111
# instruction fetch stage: PC_next=00000001000000000000000010010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010010011
# instruction fetch stage: PC=00000001000000000000000010010111
# instruction fetch stage: PC_next=00000001000000000000000010010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010010011
# instruction fetch stage: PC=00000001000000000000000010010111
# instruction fetch stage: PC_next=00000001000000000000000010010111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100009b
# pc register: out = 01000097
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010010111
# instruction fetch stage: PC=00000001000000000000000010011011
# instruction fetch stage: PC_next=00000001000000000000000010011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010010111
# instruction fetch stage: PC=00000001000000000000000010011011
# instruction fetch stage: PC_next=00000001000000000000000010011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010010111
# instruction fetch stage: PC=00000001000000000000000010011011
# instruction fetch stage: PC_next=00000001000000000000000010011011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100009f
# pc register: out = 0100009b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010011011
# instruction fetch stage: PC=00000001000000000000000010011111
# instruction fetch stage: PC_next=00000001000000000000000010011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010011011
# instruction fetch stage: PC=00000001000000000000000010011111
# instruction fetch stage: PC_next=00000001000000000000000010011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010011011
# instruction fetch stage: PC=00000001000000000000000010011111
# instruction fetch stage: PC_next=00000001000000000000000010011111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000a3
# pc register: out = 0100009f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010011111
# instruction fetch stage: PC=00000001000000000000000010100011
# instruction fetch stage: PC_next=00000001000000000000000010100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010011111
# instruction fetch stage: PC=00000001000000000000000010100011
# instruction fetch stage: PC_next=00000001000000000000000010100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010011111
# instruction fetch stage: PC=00000001000000000000000010100011
# instruction fetch stage: PC_next=00000001000000000000000010100011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000a7
# pc register: out = 010000a3
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010100011
# instruction fetch stage: PC=00000001000000000000000010100111
# instruction fetch stage: PC_next=00000001000000000000000010100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010100011
# instruction fetch stage: PC=00000001000000000000000010100111
# instruction fetch stage: PC_next=00000001000000000000000010100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010100011
# instruction fetch stage: PC=00000001000000000000000010100111
# instruction fetch stage: PC_next=00000001000000000000000010100111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000ab
# pc register: out = 010000a7
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010100111
# instruction fetch stage: PC=00000001000000000000000010101011
# instruction fetch stage: PC_next=00000001000000000000000010101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010100111
# instruction fetch stage: PC=00000001000000000000000010101011
# instruction fetch stage: PC_next=00000001000000000000000010101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010100111
# instruction fetch stage: PC=00000001000000000000000010101011
# instruction fetch stage: PC_next=00000001000000000000000010101011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000af
# pc register: out = 010000ab
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010101011
# instruction fetch stage: PC=00000001000000000000000010101111
# instruction fetch stage: PC_next=00000001000000000000000010101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010101011
# instruction fetch stage: PC=00000001000000000000000010101111
# instruction fetch stage: PC_next=00000001000000000000000010101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010101011
# instruction fetch stage: PC=00000001000000000000000010101111
# instruction fetch stage: PC_next=00000001000000000000000010101111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000b3
# pc register: out = 010000af
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010101111
# instruction fetch stage: PC=00000001000000000000000010110011
# instruction fetch stage: PC_next=00000001000000000000000010110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010101111
# instruction fetch stage: PC=00000001000000000000000010110011
# instruction fetch stage: PC_next=00000001000000000000000010110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010101111
# instruction fetch stage: PC=00000001000000000000000010110011
# instruction fetch stage: PC_next=00000001000000000000000010110011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000b7
# pc register: out = 010000b3
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010110011
# instruction fetch stage: PC=00000001000000000000000010110111
# instruction fetch stage: PC_next=00000001000000000000000010110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010110011
# instruction fetch stage: PC=00000001000000000000000010110111
# instruction fetch stage: PC_next=00000001000000000000000010110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010110011
# instruction fetch stage: PC=00000001000000000000000010110111
# instruction fetch stage: PC_next=00000001000000000000000010110111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000bb
# pc register: out = 010000b7
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010110111
# instruction fetch stage: PC=00000001000000000000000010111011
# instruction fetch stage: PC_next=00000001000000000000000010111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010110111
# instruction fetch stage: PC=00000001000000000000000010111011
# instruction fetch stage: PC_next=00000001000000000000000010111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010110111
# instruction fetch stage: PC=00000001000000000000000010111011
# instruction fetch stage: PC_next=00000001000000000000000010111011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000bf
# pc register: out = 010000bb
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010111011
# instruction fetch stage: PC=00000001000000000000000010111111
# instruction fetch stage: PC_next=00000001000000000000000010111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010111011
# instruction fetch stage: PC=00000001000000000000000010111111
# instruction fetch stage: PC_next=00000001000000000000000010111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010111011
# instruction fetch stage: PC=00000001000000000000000010111111
# instruction fetch stage: PC_next=00000001000000000000000010111111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000c3
# pc register: out = 010000bf
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010111111
# instruction fetch stage: PC=00000001000000000000000011000011
# instruction fetch stage: PC_next=00000001000000000000000011000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010111111
# instruction fetch stage: PC=00000001000000000000000011000011
# instruction fetch stage: PC_next=00000001000000000000000011000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000010111111
# instruction fetch stage: PC=00000001000000000000000011000011
# instruction fetch stage: PC_next=00000001000000000000000011000011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000c7
# pc register: out = 010000c3
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011000011
# instruction fetch stage: PC=00000001000000000000000011000111
# instruction fetch stage: PC_next=00000001000000000000000011000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011000011
# instruction fetch stage: PC=00000001000000000000000011000111
# instruction fetch stage: PC_next=00000001000000000000000011000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011000011
# instruction fetch stage: PC=00000001000000000000000011000111
# instruction fetch stage: PC_next=00000001000000000000000011000111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000cb
# pc register: out = 010000c7
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011000111
# instruction fetch stage: PC=00000001000000000000000011001011
# instruction fetch stage: PC_next=00000001000000000000000011001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011000111
# instruction fetch stage: PC=00000001000000000000000011001011
# instruction fetch stage: PC_next=00000001000000000000000011001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011000111
# instruction fetch stage: PC=00000001000000000000000011001011
# instruction fetch stage: PC_next=00000001000000000000000011001011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000cf
# pc register: out = 010000cb
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011001011
# instruction fetch stage: PC=00000001000000000000000011001111
# instruction fetch stage: PC_next=00000001000000000000000011001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011001011
# instruction fetch stage: PC=00000001000000000000000011001111
# instruction fetch stage: PC_next=00000001000000000000000011001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011001011
# instruction fetch stage: PC=00000001000000000000000011001111
# instruction fetch stage: PC_next=00000001000000000000000011001111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000d3
# pc register: out = 010000cf
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011001111
# instruction fetch stage: PC=00000001000000000000000011010011
# instruction fetch stage: PC_next=00000001000000000000000011010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011001111
# instruction fetch stage: PC=00000001000000000000000011010011
# instruction fetch stage: PC_next=00000001000000000000000011010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011001111
# instruction fetch stage: PC=00000001000000000000000011010011
# instruction fetch stage: PC_next=00000001000000000000000011010011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000d7
# pc register: out = 010000d3
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011010011
# instruction fetch stage: PC=00000001000000000000000011010111
# instruction fetch stage: PC_next=00000001000000000000000011010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011010011
# instruction fetch stage: PC=00000001000000000000000011010111
# instruction fetch stage: PC_next=00000001000000000000000011010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011010011
# instruction fetch stage: PC=00000001000000000000000011010111
# instruction fetch stage: PC_next=00000001000000000000000011010111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000db
# pc register: out = 010000d7
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011010111
# instruction fetch stage: PC=00000001000000000000000011011011
# instruction fetch stage: PC_next=00000001000000000000000011011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011010111
# instruction fetch stage: PC=00000001000000000000000011011011
# instruction fetch stage: PC_next=00000001000000000000000011011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011010111
# instruction fetch stage: PC=00000001000000000000000011011011
# instruction fetch stage: PC_next=00000001000000000000000011011011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000df
# pc register: out = 010000db
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011011011
# instruction fetch stage: PC=00000001000000000000000011011111
# instruction fetch stage: PC_next=00000001000000000000000011011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011011011
# instruction fetch stage: PC=00000001000000000000000011011111
# instruction fetch stage: PC_next=00000001000000000000000011011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011011011
# instruction fetch stage: PC=00000001000000000000000011011111
# instruction fetch stage: PC_next=00000001000000000000000011011111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000e3
# pc register: out = 010000df
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011011111
# instruction fetch stage: PC=00000001000000000000000011100011
# instruction fetch stage: PC_next=00000001000000000000000011100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011011111
# instruction fetch stage: PC=00000001000000000000000011100011
# instruction fetch stage: PC_next=00000001000000000000000011100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011011111
# instruction fetch stage: PC=00000001000000000000000011100011
# instruction fetch stage: PC_next=00000001000000000000000011100011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000e7
# pc register: out = 010000e3
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011100011
# instruction fetch stage: PC=00000001000000000000000011100111
# instruction fetch stage: PC_next=00000001000000000000000011100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011100011
# instruction fetch stage: PC=00000001000000000000000011100111
# instruction fetch stage: PC_next=00000001000000000000000011100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011100011
# instruction fetch stage: PC=00000001000000000000000011100111
# instruction fetch stage: PC_next=00000001000000000000000011100111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000eb
# pc register: out = 010000e7
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011100111
# instruction fetch stage: PC=00000001000000000000000011101011
# instruction fetch stage: PC_next=00000001000000000000000011101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011100111
# instruction fetch stage: PC=00000001000000000000000011101011
# instruction fetch stage: PC_next=00000001000000000000000011101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011100111
# instruction fetch stage: PC=00000001000000000000000011101011
# instruction fetch stage: PC_next=00000001000000000000000011101011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000ef
# pc register: out = 010000eb
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011101011
# instruction fetch stage: PC=00000001000000000000000011101111
# instruction fetch stage: PC_next=00000001000000000000000011101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011101011
# instruction fetch stage: PC=00000001000000000000000011101111
# instruction fetch stage: PC_next=00000001000000000000000011101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011101011
# instruction fetch stage: PC=00000001000000000000000011101111
# instruction fetch stage: PC_next=00000001000000000000000011101111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000f3
# pc register: out = 010000ef
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011101111
# instruction fetch stage: PC=00000001000000000000000011110011
# instruction fetch stage: PC_next=00000001000000000000000011110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011101111
# instruction fetch stage: PC=00000001000000000000000011110011
# instruction fetch stage: PC_next=00000001000000000000000011110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011101111
# instruction fetch stage: PC=00000001000000000000000011110011
# instruction fetch stage: PC_next=00000001000000000000000011110011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000f7
# pc register: out = 010000f3
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011110011
# instruction fetch stage: PC=00000001000000000000000011110111
# instruction fetch stage: PC_next=00000001000000000000000011110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011110011
# instruction fetch stage: PC=00000001000000000000000011110111
# instruction fetch stage: PC_next=00000001000000000000000011110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011110011
# instruction fetch stage: PC=00000001000000000000000011110111
# instruction fetch stage: PC_next=00000001000000000000000011110111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000fb
# pc register: out = 010000f7
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011110111
# instruction fetch stage: PC=00000001000000000000000011111011
# instruction fetch stage: PC_next=00000001000000000000000011111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011110111
# instruction fetch stage: PC=00000001000000000000000011111011
# instruction fetch stage: PC_next=00000001000000000000000011111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011110111
# instruction fetch stage: PC=00000001000000000000000011111011
# instruction fetch stage: PC_next=00000001000000000000000011111011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 010000ff
# pc register: out = 010000fb
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011111011
# instruction fetch stage: PC=00000001000000000000000011111111
# instruction fetch stage: PC_next=00000001000000000000000011111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011111011
# instruction fetch stage: PC=00000001000000000000000011111111
# instruction fetch stage: PC_next=00000001000000000000000011111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011111011
# instruction fetch stage: PC=00000001000000000000000011111111
# instruction fetch stage: PC_next=00000001000000000000000011111111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000103
# pc register: out = 010000ff
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011111111
# instruction fetch stage: PC=00000001000000000000000100000011
# instruction fetch stage: PC_next=00000001000000000000000100000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011111111
# instruction fetch stage: PC=00000001000000000000000100000011
# instruction fetch stage: PC_next=00000001000000000000000100000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000011111111
# instruction fetch stage: PC=00000001000000000000000100000011
# instruction fetch stage: PC_next=00000001000000000000000100000011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000107
# pc register: out = 01000103
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100000011
# instruction fetch stage: PC=00000001000000000000000100000111
# instruction fetch stage: PC_next=00000001000000000000000100000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100000011
# instruction fetch stage: PC=00000001000000000000000100000111
# instruction fetch stage: PC_next=00000001000000000000000100000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100000011
# instruction fetch stage: PC=00000001000000000000000100000111
# instruction fetch stage: PC_next=00000001000000000000000100000111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100010b
# pc register: out = 01000107
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100000111
# instruction fetch stage: PC=00000001000000000000000100001011
# instruction fetch stage: PC_next=00000001000000000000000100001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100000111
# instruction fetch stage: PC=00000001000000000000000100001011
# instruction fetch stage: PC_next=00000001000000000000000100001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100000111
# instruction fetch stage: PC=00000001000000000000000100001011
# instruction fetch stage: PC_next=00000001000000000000000100001011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100010f
# pc register: out = 0100010b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100001011
# instruction fetch stage: PC=00000001000000000000000100001111
# instruction fetch stage: PC_next=00000001000000000000000100001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100001011
# instruction fetch stage: PC=00000001000000000000000100001111
# instruction fetch stage: PC_next=00000001000000000000000100001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100001011
# instruction fetch stage: PC=00000001000000000000000100001111
# instruction fetch stage: PC_next=00000001000000000000000100001111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000113
# pc register: out = 0100010f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100001111
# instruction fetch stage: PC=00000001000000000000000100010011
# instruction fetch stage: PC_next=00000001000000000000000100010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100001111
# instruction fetch stage: PC=00000001000000000000000100010011
# instruction fetch stage: PC_next=00000001000000000000000100010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100001111
# instruction fetch stage: PC=00000001000000000000000100010011
# instruction fetch stage: PC_next=00000001000000000000000100010011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000117
# pc register: out = 01000113
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100010011
# instruction fetch stage: PC=00000001000000000000000100010111
# instruction fetch stage: PC_next=00000001000000000000000100010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100010011
# instruction fetch stage: PC=00000001000000000000000100010111
# instruction fetch stage: PC_next=00000001000000000000000100010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100010011
# instruction fetch stage: PC=00000001000000000000000100010111
# instruction fetch stage: PC_next=00000001000000000000000100010111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100011b
# pc register: out = 01000117
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100010111
# instruction fetch stage: PC=00000001000000000000000100011011
# instruction fetch stage: PC_next=00000001000000000000000100011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100010111
# instruction fetch stage: PC=00000001000000000000000100011011
# instruction fetch stage: PC_next=00000001000000000000000100011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100010111
# instruction fetch stage: PC=00000001000000000000000100011011
# instruction fetch stage: PC_next=00000001000000000000000100011011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100011f
# pc register: out = 0100011b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100011011
# instruction fetch stage: PC=00000001000000000000000100011111
# instruction fetch stage: PC_next=00000001000000000000000100011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100011011
# instruction fetch stage: PC=00000001000000000000000100011111
# instruction fetch stage: PC_next=00000001000000000000000100011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100011011
# instruction fetch stage: PC=00000001000000000000000100011111
# instruction fetch stage: PC_next=00000001000000000000000100011111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000123
# pc register: out = 0100011f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100011111
# instruction fetch stage: PC=00000001000000000000000100100011
# instruction fetch stage: PC_next=00000001000000000000000100100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100011111
# instruction fetch stage: PC=00000001000000000000000100100011
# instruction fetch stage: PC_next=00000001000000000000000100100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100011111
# instruction fetch stage: PC=00000001000000000000000100100011
# instruction fetch stage: PC_next=00000001000000000000000100100011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000127
# pc register: out = 01000123
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100100011
# instruction fetch stage: PC=00000001000000000000000100100111
# instruction fetch stage: PC_next=00000001000000000000000100100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100100011
# instruction fetch stage: PC=00000001000000000000000100100111
# instruction fetch stage: PC_next=00000001000000000000000100100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100100011
# instruction fetch stage: PC=00000001000000000000000100100111
# instruction fetch stage: PC_next=00000001000000000000000100100111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100012b
# pc register: out = 01000127
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100100111
# instruction fetch stage: PC=00000001000000000000000100101011
# instruction fetch stage: PC_next=00000001000000000000000100101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100100111
# instruction fetch stage: PC=00000001000000000000000100101011
# instruction fetch stage: PC_next=00000001000000000000000100101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100100111
# instruction fetch stage: PC=00000001000000000000000100101011
# instruction fetch stage: PC_next=00000001000000000000000100101011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100012f
# pc register: out = 0100012b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100101011
# instruction fetch stage: PC=00000001000000000000000100101111
# instruction fetch stage: PC_next=00000001000000000000000100101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100101011
# instruction fetch stage: PC=00000001000000000000000100101111
# instruction fetch stage: PC_next=00000001000000000000000100101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100101011
# instruction fetch stage: PC=00000001000000000000000100101111
# instruction fetch stage: PC_next=00000001000000000000000100101111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000133
# pc register: out = 0100012f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100101111
# instruction fetch stage: PC=00000001000000000000000100110011
# instruction fetch stage: PC_next=00000001000000000000000100110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100101111
# instruction fetch stage: PC=00000001000000000000000100110011
# instruction fetch stage: PC_next=00000001000000000000000100110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100101111
# instruction fetch stage: PC=00000001000000000000000100110011
# instruction fetch stage: PC_next=00000001000000000000000100110011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000137
# pc register: out = 01000133
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100110011
# instruction fetch stage: PC=00000001000000000000000100110111
# instruction fetch stage: PC_next=00000001000000000000000100110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100110011
# instruction fetch stage: PC=00000001000000000000000100110111
# instruction fetch stage: PC_next=00000001000000000000000100110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100110011
# instruction fetch stage: PC=00000001000000000000000100110111
# instruction fetch stage: PC_next=00000001000000000000000100110111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100013b
# pc register: out = 01000137
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100110111
# instruction fetch stage: PC=00000001000000000000000100111011
# instruction fetch stage: PC_next=00000001000000000000000100111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100110111
# instruction fetch stage: PC=00000001000000000000000100111011
# instruction fetch stage: PC_next=00000001000000000000000100111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100110111
# instruction fetch stage: PC=00000001000000000000000100111011
# instruction fetch stage: PC_next=00000001000000000000000100111011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100013f
# pc register: out = 0100013b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100111011
# instruction fetch stage: PC=00000001000000000000000100111111
# instruction fetch stage: PC_next=00000001000000000000000100111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100111011
# instruction fetch stage: PC=00000001000000000000000100111111
# instruction fetch stage: PC_next=00000001000000000000000100111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100111011
# instruction fetch stage: PC=00000001000000000000000100111111
# instruction fetch stage: PC_next=00000001000000000000000100111111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000143
# pc register: out = 0100013f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100111111
# instruction fetch stage: PC=00000001000000000000000101000011
# instruction fetch stage: PC_next=00000001000000000000000101000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100111111
# instruction fetch stage: PC=00000001000000000000000101000011
# instruction fetch stage: PC_next=00000001000000000000000101000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000100111111
# instruction fetch stage: PC=00000001000000000000000101000011
# instruction fetch stage: PC_next=00000001000000000000000101000011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000147
# pc register: out = 01000143
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101000011
# instruction fetch stage: PC=00000001000000000000000101000111
# instruction fetch stage: PC_next=00000001000000000000000101000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101000011
# instruction fetch stage: PC=00000001000000000000000101000111
# instruction fetch stage: PC_next=00000001000000000000000101000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101000011
# instruction fetch stage: PC=00000001000000000000000101000111
# instruction fetch stage: PC_next=00000001000000000000000101000111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100014b
# pc register: out = 01000147
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101000111
# instruction fetch stage: PC=00000001000000000000000101001011
# instruction fetch stage: PC_next=00000001000000000000000101001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101000111
# instruction fetch stage: PC=00000001000000000000000101001011
# instruction fetch stage: PC_next=00000001000000000000000101001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101000111
# instruction fetch stage: PC=00000001000000000000000101001011
# instruction fetch stage: PC_next=00000001000000000000000101001011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100014f
# pc register: out = 0100014b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101001011
# instruction fetch stage: PC=00000001000000000000000101001111
# instruction fetch stage: PC_next=00000001000000000000000101001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101001011
# instruction fetch stage: PC=00000001000000000000000101001111
# instruction fetch stage: PC_next=00000001000000000000000101001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101001011
# instruction fetch stage: PC=00000001000000000000000101001111
# instruction fetch stage: PC_next=00000001000000000000000101001111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000153
# pc register: out = 0100014f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101001111
# instruction fetch stage: PC=00000001000000000000000101010011
# instruction fetch stage: PC_next=00000001000000000000000101010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101001111
# instruction fetch stage: PC=00000001000000000000000101010011
# instruction fetch stage: PC_next=00000001000000000000000101010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101001111
# instruction fetch stage: PC=00000001000000000000000101010011
# instruction fetch stage: PC_next=00000001000000000000000101010011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000157
# pc register: out = 01000153
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101010011
# instruction fetch stage: PC=00000001000000000000000101010111
# instruction fetch stage: PC_next=00000001000000000000000101010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101010011
# instruction fetch stage: PC=00000001000000000000000101010111
# instruction fetch stage: PC_next=00000001000000000000000101010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101010011
# instruction fetch stage: PC=00000001000000000000000101010111
# instruction fetch stage: PC_next=00000001000000000000000101010111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100015b
# pc register: out = 01000157
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101010111
# instruction fetch stage: PC=00000001000000000000000101011011
# instruction fetch stage: PC_next=00000001000000000000000101011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101010111
# instruction fetch stage: PC=00000001000000000000000101011011
# instruction fetch stage: PC_next=00000001000000000000000101011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101010111
# instruction fetch stage: PC=00000001000000000000000101011011
# instruction fetch stage: PC_next=00000001000000000000000101011011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100015f
# pc register: out = 0100015b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101011011
# instruction fetch stage: PC=00000001000000000000000101011111
# instruction fetch stage: PC_next=00000001000000000000000101011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101011011
# instruction fetch stage: PC=00000001000000000000000101011111
# instruction fetch stage: PC_next=00000001000000000000000101011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101011011
# instruction fetch stage: PC=00000001000000000000000101011111
# instruction fetch stage: PC_next=00000001000000000000000101011111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000163
# pc register: out = 0100015f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101011111
# instruction fetch stage: PC=00000001000000000000000101100011
# instruction fetch stage: PC_next=00000001000000000000000101100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101011111
# instruction fetch stage: PC=00000001000000000000000101100011
# instruction fetch stage: PC_next=00000001000000000000000101100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101011111
# instruction fetch stage: PC=00000001000000000000000101100011
# instruction fetch stage: PC_next=00000001000000000000000101100011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000167
# pc register: out = 01000163
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101100011
# instruction fetch stage: PC=00000001000000000000000101100111
# instruction fetch stage: PC_next=00000001000000000000000101100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101100011
# instruction fetch stage: PC=00000001000000000000000101100111
# instruction fetch stage: PC_next=00000001000000000000000101100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101100011
# instruction fetch stage: PC=00000001000000000000000101100111
# instruction fetch stage: PC_next=00000001000000000000000101100111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100016b
# pc register: out = 01000167
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101100111
# instruction fetch stage: PC=00000001000000000000000101101011
# instruction fetch stage: PC_next=00000001000000000000000101101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101100111
# instruction fetch stage: PC=00000001000000000000000101101011
# instruction fetch stage: PC_next=00000001000000000000000101101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101100111
# instruction fetch stage: PC=00000001000000000000000101101011
# instruction fetch stage: PC_next=00000001000000000000000101101011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100016f
# pc register: out = 0100016b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101101011
# instruction fetch stage: PC=00000001000000000000000101101111
# instruction fetch stage: PC_next=00000001000000000000000101101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101101011
# instruction fetch stage: PC=00000001000000000000000101101111
# instruction fetch stage: PC_next=00000001000000000000000101101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101101011
# instruction fetch stage: PC=00000001000000000000000101101111
# instruction fetch stage: PC_next=00000001000000000000000101101111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000173
# pc register: out = 0100016f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101101111
# instruction fetch stage: PC=00000001000000000000000101110011
# instruction fetch stage: PC_next=00000001000000000000000101110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101101111
# instruction fetch stage: PC=00000001000000000000000101110011
# instruction fetch stage: PC_next=00000001000000000000000101110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101101111
# instruction fetch stage: PC=00000001000000000000000101110011
# instruction fetch stage: PC_next=00000001000000000000000101110011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000177
# pc register: out = 01000173
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101110011
# instruction fetch stage: PC=00000001000000000000000101110111
# instruction fetch stage: PC_next=00000001000000000000000101110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101110011
# instruction fetch stage: PC=00000001000000000000000101110111
# instruction fetch stage: PC_next=00000001000000000000000101110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101110011
# instruction fetch stage: PC=00000001000000000000000101110111
# instruction fetch stage: PC_next=00000001000000000000000101110111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100017b
# pc register: out = 01000177
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101110111
# instruction fetch stage: PC=00000001000000000000000101111011
# instruction fetch stage: PC_next=00000001000000000000000101111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101110111
# instruction fetch stage: PC=00000001000000000000000101111011
# instruction fetch stage: PC_next=00000001000000000000000101111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101110111
# instruction fetch stage: PC=00000001000000000000000101111011
# instruction fetch stage: PC_next=00000001000000000000000101111011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100017f
# pc register: out = 0100017b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101111011
# instruction fetch stage: PC=00000001000000000000000101111111
# instruction fetch stage: PC_next=00000001000000000000000101111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101111011
# instruction fetch stage: PC=00000001000000000000000101111111
# instruction fetch stage: PC_next=00000001000000000000000101111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101111011
# instruction fetch stage: PC=00000001000000000000000101111111
# instruction fetch stage: PC_next=00000001000000000000000101111111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000183
# pc register: out = 0100017f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101111111
# instruction fetch stage: PC=00000001000000000000000110000011
# instruction fetch stage: PC_next=00000001000000000000000110000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101111111
# instruction fetch stage: PC=00000001000000000000000110000011
# instruction fetch stage: PC_next=00000001000000000000000110000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000101111111
# instruction fetch stage: PC=00000001000000000000000110000011
# instruction fetch stage: PC_next=00000001000000000000000110000011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 01000187
# pc register: out = 01000183
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000110000011
# instruction fetch stage: PC=00000001000000000000000110000111
# instruction fetch stage: PC_next=00000001000000000000000110000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000110000011
# instruction fetch stage: PC=00000001000000000000000110000111
# instruction fetch stage: PC_next=00000001000000000000000110000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000110000011
# instruction fetch stage: PC=00000001000000000000000110000111
# instruction fetch stage: PC_next=00000001000000000000000110000111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100018b
# pc register: out = 01000187
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000110000111
# instruction fetch stage: PC=00000001000000000000000110001011
# instruction fetch stage: PC_next=00000001000000000000000110001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000110000111
# instruction fetch stage: PC=00000001000000000000000110001011
# instruction fetch stage: PC_next=00000001000000000000000110001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000110000111
# instruction fetch stage: PC=00000001000000000000000110001011
# instruction fetch stage: PC_next=00000001000000000000000110001011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0100018f
# pc register: out = 0100018b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000110001011
# instruction fetch stage: PC=00000001000000000000000110001111
# instruction fetch stage: PC_next=00000001000000000000000110001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000001000000000000000110001011
# instruction fetch stage: PC=00000001000000000000000110001111
# instruction fetch stage: PC_next=00000001000000000000000110001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/b_exe
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/pc_id
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/branchAddress_exe
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Compiling module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Compiling module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 15:25:25 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:25 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 15:25:26 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:26 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 15:25:26 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:26 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 15:25:26 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:25:26 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 15:25:26 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 15:25:26 on Dec 04,2024, Elapsed time: 0:15:26
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 15:25:26 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008b
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010001011
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 0000008f
# pc register: out = 0000008b
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001011
# instruction fetch stage: PC=00000000000000000000000010001111
# instruction fetch stage: PC_next=00000000000000000000000010001111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000093
# pc register: out = 0000008f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001111
# instruction fetch stage: PC=00000000000000000000000010010011
# instruction fetch stage: PC_next=00000000000000000000000010010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001111
# instruction fetch stage: PC=00000000000000000000000010010011
# instruction fetch stage: PC_next=00000000000000000000000010010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001111
# instruction fetch stage: PC=00000000000000000000000010010011
# instruction fetch stage: PC_next=00000000000000000000000010010011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000097
# pc register: out = 00000093
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010011
# instruction fetch stage: PC=00000000000000000000000010010111
# instruction fetch stage: PC_next=00000000000000000000000010010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010011
# instruction fetch stage: PC=00000000000000000000000010010111
# instruction fetch stage: PC_next=00000000000000000000000010010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010011
# instruction fetch stage: PC=00000000000000000000000010010111
# instruction fetch stage: PC_next=00000000000000000000000010010111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009b
# pc register: out = 00000097
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010111
# instruction fetch stage: PC=00000000000000000000000010011011
# instruction fetch stage: PC_next=00000000000000000000000010011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010111
# instruction fetch stage: PC=00000000000000000000000010011011
# instruction fetch stage: PC_next=00000000000000000000000010011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010111
# instruction fetch stage: PC=00000000000000000000000010011011
# instruction fetch stage: PC_next=00000000000000000000000010011011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009f
# pc register: out = 0000009b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011011
# instruction fetch stage: PC=00000000000000000000000010011111
# instruction fetch stage: PC_next=00000000000000000000000010011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011011
# instruction fetch stage: PC=00000000000000000000000010011111
# instruction fetch stage: PC_next=00000000000000000000000010011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011011
# instruction fetch stage: PC=00000000000000000000000010011111
# instruction fetch stage: PC_next=00000000000000000000000010011111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a3
# pc register: out = 0000009f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011111
# instruction fetch stage: PC=00000000000000000000000010100011
# instruction fetch stage: PC_next=00000000000000000000000010100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011111
# instruction fetch stage: PC=00000000000000000000000010100011
# instruction fetch stage: PC_next=00000000000000000000000010100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011111
# instruction fetch stage: PC=00000000000000000000000010100011
# instruction fetch stage: PC_next=00000000000000000000000010100011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a7
# pc register: out = 000000a3
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100011
# instruction fetch stage: PC=00000000000000000000000010100111
# instruction fetch stage: PC_next=00000000000000000000000010100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100011
# instruction fetch stage: PC=00000000000000000000000010100111
# instruction fetch stage: PC_next=00000000000000000000000010100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100011
# instruction fetch stage: PC=00000000000000000000000010100111
# instruction fetch stage: PC_next=00000000000000000000000010100111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ab
# pc register: out = 000000a7
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100111
# instruction fetch stage: PC=00000000000000000000000010101011
# instruction fetch stage: PC_next=00000000000000000000000010101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100111
# instruction fetch stage: PC=00000000000000000000000010101011
# instruction fetch stage: PC_next=00000000000000000000000010101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100111
# instruction fetch stage: PC=00000000000000000000000010101011
# instruction fetch stage: PC_next=00000000000000000000000010101011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000af
# pc register: out = 000000ab
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101011
# instruction fetch stage: PC=00000000000000000000000010101111
# instruction fetch stage: PC_next=00000000000000000000000010101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101011
# instruction fetch stage: PC=00000000000000000000000010101111
# instruction fetch stage: PC_next=00000000000000000000000010101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101011
# instruction fetch stage: PC=00000000000000000000000010101111
# instruction fetch stage: PC_next=00000000000000000000000010101111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b3
# pc register: out = 000000af
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101111
# instruction fetch stage: PC=00000000000000000000000010110011
# instruction fetch stage: PC_next=00000000000000000000000010110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101111
# instruction fetch stage: PC=00000000000000000000000010110011
# instruction fetch stage: PC_next=00000000000000000000000010110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101111
# instruction fetch stage: PC=00000000000000000000000010110011
# instruction fetch stage: PC_next=00000000000000000000000010110011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b7
# pc register: out = 000000b3
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110011
# instruction fetch stage: PC=00000000000000000000000010110111
# instruction fetch stage: PC_next=00000000000000000000000010110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110011
# instruction fetch stage: PC=00000000000000000000000010110111
# instruction fetch stage: PC_next=00000000000000000000000010110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110011
# instruction fetch stage: PC=00000000000000000000000010110111
# instruction fetch stage: PC_next=00000000000000000000000010110111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bb
# pc register: out = 000000b7
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110111
# instruction fetch stage: PC=00000000000000000000000010111011
# instruction fetch stage: PC_next=00000000000000000000000010111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110111
# instruction fetch stage: PC=00000000000000000000000010111011
# instruction fetch stage: PC_next=00000000000000000000000010111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110111
# instruction fetch stage: PC=00000000000000000000000010111011
# instruction fetch stage: PC_next=00000000000000000000000010111011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bf
# pc register: out = 000000bb
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111011
# instruction fetch stage: PC=00000000000000000000000010111111
# instruction fetch stage: PC_next=00000000000000000000000010111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111011
# instruction fetch stage: PC=00000000000000000000000010111111
# instruction fetch stage: PC_next=00000000000000000000000010111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111011
# instruction fetch stage: PC=00000000000000000000000010111111
# instruction fetch stage: PC_next=00000000000000000000000010111111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c3
# pc register: out = 000000bf
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111111
# instruction fetch stage: PC=00000000000000000000000011000011
# instruction fetch stage: PC_next=00000000000000000000000011000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111111
# instruction fetch stage: PC=00000000000000000000000011000011
# instruction fetch stage: PC_next=00000000000000000000000011000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111111
# instruction fetch stage: PC=00000000000000000000000011000011
# instruction fetch stage: PC_next=00000000000000000000000011000011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c7
# pc register: out = 000000c3
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000011
# instruction fetch stage: PC=00000000000000000000000011000111
# instruction fetch stage: PC_next=00000000000000000000000011000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000011
# instruction fetch stage: PC=00000000000000000000000011000111
# instruction fetch stage: PC_next=00000000000000000000000011000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000011
# instruction fetch stage: PC=00000000000000000000000011000111
# instruction fetch stage: PC_next=00000000000000000000000011000111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cb
# pc register: out = 000000c7
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000111
# instruction fetch stage: PC=00000000000000000000000011001011
# instruction fetch stage: PC_next=00000000000000000000000011001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000111
# instruction fetch stage: PC=00000000000000000000000011001011
# instruction fetch stage: PC_next=00000000000000000000000011001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000111
# instruction fetch stage: PC=00000000000000000000000011001011
# instruction fetch stage: PC_next=00000000000000000000000011001011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cf
# pc register: out = 000000cb
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001011
# instruction fetch stage: PC=00000000000000000000000011001111
# instruction fetch stage: PC_next=00000000000000000000000011001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001011
# instruction fetch stage: PC=00000000000000000000000011001111
# instruction fetch stage: PC_next=00000000000000000000000011001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001011
# instruction fetch stage: PC=00000000000000000000000011001111
# instruction fetch stage: PC_next=00000000000000000000000011001111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d3
# pc register: out = 000000cf
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001111
# instruction fetch stage: PC=00000000000000000000000011010011
# instruction fetch stage: PC_next=00000000000000000000000011010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001111
# instruction fetch stage: PC=00000000000000000000000011010011
# instruction fetch stage: PC_next=00000000000000000000000011010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001111
# instruction fetch stage: PC=00000000000000000000000011010011
# instruction fetch stage: PC_next=00000000000000000000000011010011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d7
# pc register: out = 000000d3
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010011
# instruction fetch stage: PC=00000000000000000000000011010111
# instruction fetch stage: PC_next=00000000000000000000000011010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010011
# instruction fetch stage: PC=00000000000000000000000011010111
# instruction fetch stage: PC_next=00000000000000000000000011010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010011
# instruction fetch stage: PC=00000000000000000000000011010111
# instruction fetch stage: PC_next=00000000000000000000000011010111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000db
# pc register: out = 000000d7
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010111
# instruction fetch stage: PC=00000000000000000000000011011011
# instruction fetch stage: PC_next=00000000000000000000000011011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010111
# instruction fetch stage: PC=00000000000000000000000011011011
# instruction fetch stage: PC_next=00000000000000000000000011011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010111
# instruction fetch stage: PC=00000000000000000000000011011011
# instruction fetch stage: PC_next=00000000000000000000000011011011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000df
# pc register: out = 000000db
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011011
# instruction fetch stage: PC=00000000000000000000000011011111
# instruction fetch stage: PC_next=00000000000000000000000011011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011011
# instruction fetch stage: PC=00000000000000000000000011011111
# instruction fetch stage: PC_next=00000000000000000000000011011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011011
# instruction fetch stage: PC=00000000000000000000000011011111
# instruction fetch stage: PC_next=00000000000000000000000011011111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e3
# pc register: out = 000000df
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011111
# instruction fetch stage: PC=00000000000000000000000011100011
# instruction fetch stage: PC_next=00000000000000000000000011100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011111
# instruction fetch stage: PC=00000000000000000000000011100011
# instruction fetch stage: PC_next=00000000000000000000000011100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011111
# instruction fetch stage: PC=00000000000000000000000011100011
# instruction fetch stage: PC_next=00000000000000000000000011100011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e7
# pc register: out = 000000e3
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100011
# instruction fetch stage: PC=00000000000000000000000011100111
# instruction fetch stage: PC_next=00000000000000000000000011100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100011
# instruction fetch stage: PC=00000000000000000000000011100111
# instruction fetch stage: PC_next=00000000000000000000000011100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100011
# instruction fetch stage: PC=00000000000000000000000011100111
# instruction fetch stage: PC_next=00000000000000000000000011100111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000eb
# pc register: out = 000000e7
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100111
# instruction fetch stage: PC=00000000000000000000000011101011
# instruction fetch stage: PC_next=00000000000000000000000011101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100111
# instruction fetch stage: PC=00000000000000000000000011101011
# instruction fetch stage: PC_next=00000000000000000000000011101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100111
# instruction fetch stage: PC=00000000000000000000000011101011
# instruction fetch stage: PC_next=00000000000000000000000011101011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ef
# pc register: out = 000000eb
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101011
# instruction fetch stage: PC=00000000000000000000000011101111
# instruction fetch stage: PC_next=00000000000000000000000011101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101011
# instruction fetch stage: PC=00000000000000000000000011101111
# instruction fetch stage: PC_next=00000000000000000000000011101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101011
# instruction fetch stage: PC=00000000000000000000000011101111
# instruction fetch stage: PC_next=00000000000000000000000011101111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f3
# pc register: out = 000000ef
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101111
# instruction fetch stage: PC=00000000000000000000000011110011
# instruction fetch stage: PC_next=00000000000000000000000011110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101111
# instruction fetch stage: PC=00000000000000000000000011110011
# instruction fetch stage: PC_next=00000000000000000000000011110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101111
# instruction fetch stage: PC=00000000000000000000000011110011
# instruction fetch stage: PC_next=00000000000000000000000011110011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f7
# pc register: out = 000000f3
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110011
# instruction fetch stage: PC=00000000000000000000000011110111
# instruction fetch stage: PC_next=00000000000000000000000011110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110011
# instruction fetch stage: PC=00000000000000000000000011110111
# instruction fetch stage: PC_next=00000000000000000000000011110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110011
# instruction fetch stage: PC=00000000000000000000000011110111
# instruction fetch stage: PC_next=00000000000000000000000011110111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fb
# pc register: out = 000000f7
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110111
# instruction fetch stage: PC=00000000000000000000000011111011
# instruction fetch stage: PC_next=00000000000000000000000011111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110111
# instruction fetch stage: PC=00000000000000000000000011111011
# instruction fetch stage: PC_next=00000000000000000000000011111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110111
# instruction fetch stage: PC=00000000000000000000000011111011
# instruction fetch stage: PC_next=00000000000000000000000011111011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ff
# pc register: out = 000000fb
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111011
# instruction fetch stage: PC=00000000000000000000000011111111
# instruction fetch stage: PC_next=00000000000000000000000011111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111011
# instruction fetch stage: PC=00000000000000000000000011111111
# instruction fetch stage: PC_next=00000000000000000000000011111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111011
# instruction fetch stage: PC=00000000000000000000000011111111
# instruction fetch stage: PC_next=00000000000000000000000011111111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000103
# pc register: out = 000000ff
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111111
# instruction fetch stage: PC=00000000000000000000000100000011
# instruction fetch stage: PC_next=00000000000000000000000100000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111111
# instruction fetch stage: PC=00000000000000000000000100000011
# instruction fetch stage: PC_next=00000000000000000000000100000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111111
# instruction fetch stage: PC=00000000000000000000000100000011
# instruction fetch stage: PC_next=00000000000000000000000100000011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000107
# pc register: out = 00000103
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000011
# instruction fetch stage: PC=00000000000000000000000100000111
# instruction fetch stage: PC_next=00000000000000000000000100000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000011
# instruction fetch stage: PC=00000000000000000000000100000111
# instruction fetch stage: PC_next=00000000000000000000000100000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000011
# instruction fetch stage: PC=00000000000000000000000100000111
# instruction fetch stage: PC_next=00000000000000000000000100000111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010b
# pc register: out = 00000107
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000111
# instruction fetch stage: PC=00000000000000000000000100001011
# instruction fetch stage: PC_next=00000000000000000000000100001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000111
# instruction fetch stage: PC=00000000000000000000000100001011
# instruction fetch stage: PC_next=00000000000000000000000100001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000111
# instruction fetch stage: PC=00000000000000000000000100001011
# instruction fetch stage: PC_next=00000000000000000000000100001011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010f
# pc register: out = 0000010b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001011
# instruction fetch stage: PC=00000000000000000000000100001111
# instruction fetch stage: PC_next=00000000000000000000000100001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001011
# instruction fetch stage: PC=00000000000000000000000100001111
# instruction fetch stage: PC_next=00000000000000000000000100001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001011
# instruction fetch stage: PC=00000000000000000000000100001111
# instruction fetch stage: PC_next=00000000000000000000000100001111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000113
# pc register: out = 0000010f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001111
# instruction fetch stage: PC=00000000000000000000000100010011
# instruction fetch stage: PC_next=00000000000000000000000100010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001111
# instruction fetch stage: PC=00000000000000000000000100010011
# instruction fetch stage: PC_next=00000000000000000000000100010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001111
# instruction fetch stage: PC=00000000000000000000000100010011
# instruction fetch stage: PC_next=00000000000000000000000100010011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000117
# pc register: out = 00000113
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010011
# instruction fetch stage: PC=00000000000000000000000100010111
# instruction fetch stage: PC_next=00000000000000000000000100010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010011
# instruction fetch stage: PC=00000000000000000000000100010111
# instruction fetch stage: PC_next=00000000000000000000000100010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010011
# instruction fetch stage: PC=00000000000000000000000100010111
# instruction fetch stage: PC_next=00000000000000000000000100010111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011b
# pc register: out = 00000117
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010111
# instruction fetch stage: PC=00000000000000000000000100011011
# instruction fetch stage: PC_next=00000000000000000000000100011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010111
# instruction fetch stage: PC=00000000000000000000000100011011
# instruction fetch stage: PC_next=00000000000000000000000100011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010111
# instruction fetch stage: PC=00000000000000000000000100011011
# instruction fetch stage: PC_next=00000000000000000000000100011011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011f
# pc register: out = 0000011b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011011
# instruction fetch stage: PC=00000000000000000000000100011111
# instruction fetch stage: PC_next=00000000000000000000000100011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011011
# instruction fetch stage: PC=00000000000000000000000100011111
# instruction fetch stage: PC_next=00000000000000000000000100011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011011
# instruction fetch stage: PC=00000000000000000000000100011111
# instruction fetch stage: PC_next=00000000000000000000000100011111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000123
# pc register: out = 0000011f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011111
# instruction fetch stage: PC=00000000000000000000000100100011
# instruction fetch stage: PC_next=00000000000000000000000100100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011111
# instruction fetch stage: PC=00000000000000000000000100100011
# instruction fetch stage: PC_next=00000000000000000000000100100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011111
# instruction fetch stage: PC=00000000000000000000000100100011
# instruction fetch stage: PC_next=00000000000000000000000100100011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000127
# pc register: out = 00000123
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100011
# instruction fetch stage: PC=00000000000000000000000100100111
# instruction fetch stage: PC_next=00000000000000000000000100100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100011
# instruction fetch stage: PC=00000000000000000000000100100111
# instruction fetch stage: PC_next=00000000000000000000000100100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100011
# instruction fetch stage: PC=00000000000000000000000100100111
# instruction fetch stage: PC_next=00000000000000000000000100100111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012b
# pc register: out = 00000127
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100111
# instruction fetch stage: PC=00000000000000000000000100101011
# instruction fetch stage: PC_next=00000000000000000000000100101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100111
# instruction fetch stage: PC=00000000000000000000000100101011
# instruction fetch stage: PC_next=00000000000000000000000100101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100111
# instruction fetch stage: PC=00000000000000000000000100101011
# instruction fetch stage: PC_next=00000000000000000000000100101011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012f
# pc register: out = 0000012b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101011
# instruction fetch stage: PC=00000000000000000000000100101111
# instruction fetch stage: PC_next=00000000000000000000000100101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101011
# instruction fetch stage: PC=00000000000000000000000100101111
# instruction fetch stage: PC_next=00000000000000000000000100101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101011
# instruction fetch stage: PC=00000000000000000000000100101111
# instruction fetch stage: PC_next=00000000000000000000000100101111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000133
# pc register: out = 0000012f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101111
# instruction fetch stage: PC=00000000000000000000000100110011
# instruction fetch stage: PC_next=00000000000000000000000100110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101111
# instruction fetch stage: PC=00000000000000000000000100110011
# instruction fetch stage: PC_next=00000000000000000000000100110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101111
# instruction fetch stage: PC=00000000000000000000000100110011
# instruction fetch stage: PC_next=00000000000000000000000100110011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000137
# pc register: out = 00000133
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110011
# instruction fetch stage: PC=00000000000000000000000100110111
# instruction fetch stage: PC_next=00000000000000000000000100110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110011
# instruction fetch stage: PC=00000000000000000000000100110111
# instruction fetch stage: PC_next=00000000000000000000000100110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110011
# instruction fetch stage: PC=00000000000000000000000100110111
# instruction fetch stage: PC_next=00000000000000000000000100110111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013b
# pc register: out = 00000137
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110111
# instruction fetch stage: PC=00000000000000000000000100111011
# instruction fetch stage: PC_next=00000000000000000000000100111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110111
# instruction fetch stage: PC=00000000000000000000000100111011
# instruction fetch stage: PC_next=00000000000000000000000100111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110111
# instruction fetch stage: PC=00000000000000000000000100111011
# instruction fetch stage: PC_next=00000000000000000000000100111011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013f
# pc register: out = 0000013b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111011
# instruction fetch stage: PC=00000000000000000000000100111111
# instruction fetch stage: PC_next=00000000000000000000000100111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111011
# instruction fetch stage: PC=00000000000000000000000100111111
# instruction fetch stage: PC_next=00000000000000000000000100111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111011
# instruction fetch stage: PC=00000000000000000000000100111111
# instruction fetch stage: PC_next=00000000000000000000000100111111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000143
# pc register: out = 0000013f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111111
# instruction fetch stage: PC=00000000000000000000000101000011
# instruction fetch stage: PC_next=00000000000000000000000101000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111111
# instruction fetch stage: PC=00000000000000000000000101000011
# instruction fetch stage: PC_next=00000000000000000000000101000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111111
# instruction fetch stage: PC=00000000000000000000000101000011
# instruction fetch stage: PC_next=00000000000000000000000101000011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000147
# pc register: out = 00000143
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000011
# instruction fetch stage: PC=00000000000000000000000101000111
# instruction fetch stage: PC_next=00000000000000000000000101000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000011
# instruction fetch stage: PC=00000000000000000000000101000111
# instruction fetch stage: PC_next=00000000000000000000000101000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000011
# instruction fetch stage: PC=00000000000000000000000101000111
# instruction fetch stage: PC_next=00000000000000000000000101000111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014b
# pc register: out = 00000147
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000111
# instruction fetch stage: PC=00000000000000000000000101001011
# instruction fetch stage: PC_next=00000000000000000000000101001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000111
# instruction fetch stage: PC=00000000000000000000000101001011
# instruction fetch stage: PC_next=00000000000000000000000101001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000111
# instruction fetch stage: PC=00000000000000000000000101001011
# instruction fetch stage: PC_next=00000000000000000000000101001011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014f
# pc register: out = 0000014b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001011
# instruction fetch stage: PC=00000000000000000000000101001111
# instruction fetch stage: PC_next=00000000000000000000000101001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001011
# instruction fetch stage: PC=00000000000000000000000101001111
# instruction fetch stage: PC_next=00000000000000000000000101001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001011
# instruction fetch stage: PC=00000000000000000000000101001111
# instruction fetch stage: PC_next=00000000000000000000000101001111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000153
# pc register: out = 0000014f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001111
# instruction fetch stage: PC=00000000000000000000000101010011
# instruction fetch stage: PC_next=00000000000000000000000101010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001111
# instruction fetch stage: PC=00000000000000000000000101010011
# instruction fetch stage: PC_next=00000000000000000000000101010011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001111
# instruction fetch stage: PC=00000000000000000000000101010011
# instruction fetch stage: PC_next=00000000000000000000000101010011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000157
# pc register: out = 00000153
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010011
# instruction fetch stage: PC=00000000000000000000000101010111
# instruction fetch stage: PC_next=00000000000000000000000101010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010011
# instruction fetch stage: PC=00000000000000000000000101010111
# instruction fetch stage: PC_next=00000000000000000000000101010111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010011
# instruction fetch stage: PC=00000000000000000000000101010111
# instruction fetch stage: PC_next=00000000000000000000000101010111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015b
# pc register: out = 00000157
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010111
# instruction fetch stage: PC=00000000000000000000000101011011
# instruction fetch stage: PC_next=00000000000000000000000101011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010111
# instruction fetch stage: PC=00000000000000000000000101011011
# instruction fetch stage: PC_next=00000000000000000000000101011011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010111
# instruction fetch stage: PC=00000000000000000000000101011011
# instruction fetch stage: PC_next=00000000000000000000000101011011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015f
# pc register: out = 0000015b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011011
# instruction fetch stage: PC=00000000000000000000000101011111
# instruction fetch stage: PC_next=00000000000000000000000101011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011011
# instruction fetch stage: PC=00000000000000000000000101011111
# instruction fetch stage: PC_next=00000000000000000000000101011111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011011
# instruction fetch stage: PC=00000000000000000000000101011111
# instruction fetch stage: PC_next=00000000000000000000000101011111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000163
# pc register: out = 0000015f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011111
# instruction fetch stage: PC=00000000000000000000000101100011
# instruction fetch stage: PC_next=00000000000000000000000101100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011111
# instruction fetch stage: PC=00000000000000000000000101100011
# instruction fetch stage: PC_next=00000000000000000000000101100011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011111
# instruction fetch stage: PC=00000000000000000000000101100011
# instruction fetch stage: PC_next=00000000000000000000000101100011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000167
# pc register: out = 00000163
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100011
# instruction fetch stage: PC=00000000000000000000000101100111
# instruction fetch stage: PC_next=00000000000000000000000101100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100011
# instruction fetch stage: PC=00000000000000000000000101100111
# instruction fetch stage: PC_next=00000000000000000000000101100111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100011
# instruction fetch stage: PC=00000000000000000000000101100111
# instruction fetch stage: PC_next=00000000000000000000000101100111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016b
# pc register: out = 00000167
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100111
# instruction fetch stage: PC=00000000000000000000000101101011
# instruction fetch stage: PC_next=00000000000000000000000101101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100111
# instruction fetch stage: PC=00000000000000000000000101101011
# instruction fetch stage: PC_next=00000000000000000000000101101011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100111
# instruction fetch stage: PC=00000000000000000000000101101011
# instruction fetch stage: PC_next=00000000000000000000000101101011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016f
# pc register: out = 0000016b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101011
# instruction fetch stage: PC=00000000000000000000000101101111
# instruction fetch stage: PC_next=00000000000000000000000101101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101011
# instruction fetch stage: PC=00000000000000000000000101101111
# instruction fetch stage: PC_next=00000000000000000000000101101111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101011
# instruction fetch stage: PC=00000000000000000000000101101111
# instruction fetch stage: PC_next=00000000000000000000000101101111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000173
# pc register: out = 0000016f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101111
# instruction fetch stage: PC=00000000000000000000000101110011
# instruction fetch stage: PC_next=00000000000000000000000101110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101111
# instruction fetch stage: PC=00000000000000000000000101110011
# instruction fetch stage: PC_next=00000000000000000000000101110011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101111
# instruction fetch stage: PC=00000000000000000000000101110011
# instruction fetch stage: PC_next=00000000000000000000000101110011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000177
# pc register: out = 00000173
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110011
# instruction fetch stage: PC=00000000000000000000000101110111
# instruction fetch stage: PC_next=00000000000000000000000101110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110011
# instruction fetch stage: PC=00000000000000000000000101110111
# instruction fetch stage: PC_next=00000000000000000000000101110111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110011
# instruction fetch stage: PC=00000000000000000000000101110111
# instruction fetch stage: PC_next=00000000000000000000000101110111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017b
# pc register: out = 00000177
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110111
# instruction fetch stage: PC=00000000000000000000000101111011
# instruction fetch stage: PC_next=00000000000000000000000101111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110111
# instruction fetch stage: PC=00000000000000000000000101111011
# instruction fetch stage: PC_next=00000000000000000000000101111011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110111
# instruction fetch stage: PC=00000000000000000000000101111011
# instruction fetch stage: PC_next=00000000000000000000000101111011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017f
# pc register: out = 0000017b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111011
# instruction fetch stage: PC=00000000000000000000000101111111
# instruction fetch stage: PC_next=00000000000000000000000101111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111011
# instruction fetch stage: PC=00000000000000000000000101111111
# instruction fetch stage: PC_next=00000000000000000000000101111111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111011
# instruction fetch stage: PC=00000000000000000000000101111111
# instruction fetch stage: PC_next=00000000000000000000000101111111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000183
# pc register: out = 0000017f
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111111
# instruction fetch stage: PC=00000000000000000000000110000011
# instruction fetch stage: PC_next=00000000000000000000000110000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111111
# instruction fetch stage: PC=00000000000000000000000110000011
# instruction fetch stage: PC_next=00000000000000000000000110000011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111111
# instruction fetch stage: PC=00000000000000000000000110000011
# instruction fetch stage: PC_next=00000000000000000000000110000011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000187
# pc register: out = 00000183
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000011
# instruction fetch stage: PC=00000000000000000000000110000111
# instruction fetch stage: PC_next=00000000000000000000000110000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000011
# instruction fetch stage: PC=00000000000000000000000110000111
# instruction fetch stage: PC_next=00000000000000000000000110000111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000011
# instruction fetch stage: PC=00000000000000000000000110000111
# instruction fetch stage: PC_next=00000000000000000000000110000111
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018b
# pc register: out = 00000187
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000111
# instruction fetch stage: PC=00000000000000000000000110001011
# instruction fetch stage: PC_next=00000000000000000000000110001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000111
# instruction fetch stage: PC=00000000000000000000000110001011
# instruction fetch stage: PC_next=00000000000000000000000110001011
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000111
# instruction fetch stage: PC=00000000000000000000000110001011
# instruction fetch stage: PC_next=00000000000000000000000110001011
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018f
# pc register: out = 0000018b
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001011
# instruction fetch stage: PC=00000000000000000000000110001111
# instruction fetch stage: PC_next=00000000000000000000000110001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001011
# instruction fetch stage: PC=00000000000000000000000110001111
# instruction fetch stage: PC_next=00000000000000000000000110001111
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/b_exe
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/b_exe
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/pc_id
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/branchAddress_exe
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Compiling module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Skipping module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 15:28:11 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:11 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 15:28:12 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:12 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 15:28:12 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:12 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 15:28:12 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:12 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 15:28:12 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:12 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 15:28:12 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:12 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 15:28:12 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:12 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 15:28:12 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:12 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 15:28:12 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 15:28:12 on Dec 04,2024, Elapsed time: 0:02:46
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 15:28:12 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1036, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c4
# pc register: out = 000000c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000100
# instruction fetch stage: PC=00000000000000000000000111001000
# instruction fetch stage: PC_next=00000000000000000000000111001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001cc
# pc register: out = 000001c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001000
# instruction fetch stage: PC=00000000000000000000000111001100
# instruction fetch stage: PC_next=00000000000000000000000111001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d0
# pc register: out = 000001cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111001100
# instruction fetch stage: PC=00000000000000000000000111010000
# instruction fetch stage: PC_next=00000000000000000000000111010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d4
# pc register: out = 000001d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010000
# instruction fetch stage: PC=00000000000000000000000111010100
# instruction fetch stage: PC_next=00000000000000000000000111010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001d8
# pc register: out = 000001d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111010100
# instruction fetch stage: PC=00000000000000000000000111011000
# instruction fetch stage: PC_next=00000000000000000000000111011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001dc
# pc register: out = 000001d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011000
# instruction fetch stage: PC=00000000000000000000000111011100
# instruction fetch stage: PC_next=00000000000000000000000111011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e0
# pc register: out = 000001dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111011100
# instruction fetch stage: PC=00000000000000000000000111100000
# instruction fetch stage: PC_next=00000000000000000000000111100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e4
# pc register: out = 000001e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100000
# instruction fetch stage: PC=00000000000000000000000111100100
# instruction fetch stage: PC_next=00000000000000000000000111100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001e8
# pc register: out = 000001e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111100100
# instruction fetch stage: PC=00000000000000000000000111101000
# instruction fetch stage: PC_next=00000000000000000000000111101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ec
# pc register: out = 000001e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101000
# instruction fetch stage: PC=00000000000000000000000111101100
# instruction fetch stage: PC_next=00000000000000000000000111101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f0
# pc register: out = 000001ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111101100
# instruction fetch stage: PC=00000000000000000000000111110000
# instruction fetch stage: PC_next=00000000000000000000000111110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f4
# pc register: out = 000001f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110000
# instruction fetch stage: PC=00000000000000000000000111110100
# instruction fetch stage: PC_next=00000000000000000000000111110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001f8
# pc register: out = 000001f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111110100
# instruction fetch stage: PC=00000000000000000000000111111000
# instruction fetch stage: PC_next=00000000000000000000000111111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001fc
# pc register: out = 000001f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111000
# instruction fetch stage: PC=00000000000000000000000111111100
# instruction fetch stage: PC_next=00000000000000000000000111111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000200
# pc register: out = 000001fc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111111100
# instruction fetch stage: PC=00000000000000000000001000000000
# instruction fetch stage: PC_next=00000000000000000000001000000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000204
# pc register: out = 00000200
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000000
# instruction fetch stage: PC=00000000000000000000001000000100
# instruction fetch stage: PC_next=00000000000000000000001000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000208
# pc register: out = 00000204
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000000100
# instruction fetch stage: PC=00000000000000000000001000001000
# instruction fetch stage: PC_next=00000000000000000000001000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000020c
# pc register: out = 00000208
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001000
# instruction fetch stage: PC=00000000000000000000001000001100
# instruction fetch stage: PC_next=00000000000000000000001000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000210
# pc register: out = 0000020c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000001100
# instruction fetch stage: PC=00000000000000000000001000010000
# instruction fetch stage: PC_next=00000000000000000000001000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000214
# pc register: out = 00000210
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010000
# instruction fetch stage: PC=00000000000000000000001000010100
# instruction fetch stage: PC_next=00000000000000000000001000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000218
# pc register: out = 00000214
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000010100
# instruction fetch stage: PC=00000000000000000000001000011000
# instruction fetch stage: PC_next=00000000000000000000001000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000021c
# pc register: out = 00000218
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011000
# instruction fetch stage: PC=00000000000000000000001000011100
# instruction fetch stage: PC_next=00000000000000000000001000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000220
# pc register: out = 0000021c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000011100
# instruction fetch stage: PC=00000000000000000000001000100000
# instruction fetch stage: PC_next=00000000000000000000001000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000224
# pc register: out = 00000220
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100000
# instruction fetch stage: PC=00000000000000000000001000100100
# instruction fetch stage: PC_next=00000000000000000000001000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000228
# pc register: out = 00000224
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000100100
# instruction fetch stage: PC=00000000000000000000001000101000
# instruction fetch stage: PC_next=00000000000000000000001000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000022c
# pc register: out = 00000228
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101000
# instruction fetch stage: PC=00000000000000000000001000101100
# instruction fetch stage: PC_next=00000000000000000000001000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000230
# pc register: out = 0000022c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000101100
# instruction fetch stage: PC=00000000000000000000001000110000
# instruction fetch stage: PC_next=00000000000000000000001000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000234
# pc register: out = 00000230
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110000
# instruction fetch stage: PC=00000000000000000000001000110100
# instruction fetch stage: PC_next=00000000000000000000001000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000238
# pc register: out = 00000234
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000110100
# instruction fetch stage: PC=00000000000000000000001000111000
# instruction fetch stage: PC_next=00000000000000000000001000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000023c
# pc register: out = 00000238
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111000
# instruction fetch stage: PC=00000000000000000000001000111100
# instruction fetch stage: PC_next=00000000000000000000001000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000240
# pc register: out = 0000023c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001000111100
# instruction fetch stage: PC=00000000000000000000001001000000
# instruction fetch stage: PC_next=00000000000000000000001001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000244
# pc register: out = 00000240
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000000
# instruction fetch stage: PC=00000000000000000000001001000100
# instruction fetch stage: PC_next=00000000000000000000001001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000248
# pc register: out = 00000244
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001000100
# instruction fetch stage: PC=00000000000000000000001001001000
# instruction fetch stage: PC_next=00000000000000000000001001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000024c
# pc register: out = 00000248
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001000
# instruction fetch stage: PC=00000000000000000000001001001100
# instruction fetch stage: PC_next=00000000000000000000001001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000250
# pc register: out = 0000024c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001001100
# instruction fetch stage: PC=00000000000000000000001001010000
# instruction fetch stage: PC_next=00000000000000000000001001010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000254
# pc register: out = 00000250
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010000
# instruction fetch stage: PC=00000000000000000000001001010100
# instruction fetch stage: PC_next=00000000000000000000001001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000258
# pc register: out = 00000254
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001010100
# instruction fetch stage: PC=00000000000000000000001001011000
# instruction fetch stage: PC_next=00000000000000000000001001011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000025c
# pc register: out = 00000258
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011000
# instruction fetch stage: PC=00000000000000000000001001011100
# instruction fetch stage: PC_next=00000000000000000000001001011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000260
# pc register: out = 0000025c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001011100
# instruction fetch stage: PC=00000000000000000000001001100000
# instruction fetch stage: PC_next=00000000000000000000001001100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000264
# pc register: out = 00000260
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100000
# instruction fetch stage: PC=00000000000000000000001001100100
# instruction fetch stage: PC_next=00000000000000000000001001100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000268
# pc register: out = 00000264
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001100100
# instruction fetch stage: PC=00000000000000000000001001101000
# instruction fetch stage: PC_next=00000000000000000000001001101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000026c
# pc register: out = 00000268
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101000
# instruction fetch stage: PC=00000000000000000000001001101100
# instruction fetch stage: PC_next=00000000000000000000001001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000270
# pc register: out = 0000026c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001101100
# instruction fetch stage: PC=00000000000000000000001001110000
# instruction fetch stage: PC_next=00000000000000000000001001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000274
# pc register: out = 00000270
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110000
# instruction fetch stage: PC=00000000000000000000001001110100
# instruction fetch stage: PC_next=00000000000000000000001001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000278
# pc register: out = 00000274
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001110100
# instruction fetch stage: PC=00000000000000000000001001111000
# instruction fetch stage: PC_next=00000000000000000000001001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000027c
# pc register: out = 00000278
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111000
# instruction fetch stage: PC=00000000000000000000001001111100
# instruction fetch stage: PC_next=00000000000000000000001001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000280
# pc register: out = 0000027c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001001111100
# instruction fetch stage: PC=00000000000000000000001010000000
# instruction fetch stage: PC_next=00000000000000000000001010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000284
# pc register: out = 00000280
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000000
# instruction fetch stage: PC=00000000000000000000001010000100
# instruction fetch stage: PC_next=00000000000000000000001010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000288
# pc register: out = 00000284
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010000100
# instruction fetch stage: PC=00000000000000000000001010001000
# instruction fetch stage: PC_next=00000000000000000000001010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000028c
# pc register: out = 00000288
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001000
# instruction fetch stage: PC=00000000000000000000001010001100
# instruction fetch stage: PC_next=00000000000000000000001010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000290
# pc register: out = 0000028c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010001100
# instruction fetch stage: PC=00000000000000000000001010010000
# instruction fetch stage: PC_next=00000000000000000000001010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000294
# pc register: out = 00000290
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010000
# instruction fetch stage: PC=00000000000000000000001010010100
# instruction fetch stage: PC_next=00000000000000000000001010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000298
# pc register: out = 00000294
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010010100
# instruction fetch stage: PC=00000000000000000000001010011000
# instruction fetch stage: PC_next=00000000000000000000001010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000029c
# pc register: out = 00000298
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011000
# instruction fetch stage: PC=00000000000000000000001010011100
# instruction fetch stage: PC_next=00000000000000000000001010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a0
# pc register: out = 0000029c
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010011100
# instruction fetch stage: PC=00000000000000000000001010100000
# instruction fetch stage: PC_next=00000000000000000000001010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a4
# pc register: out = 000002a0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100000
# instruction fetch stage: PC=00000000000000000000001010100100
# instruction fetch stage: PC_next=00000000000000000000001010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002a8
# pc register: out = 000002a4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010100100
# instruction fetch stage: PC=00000000000000000000001010101000
# instruction fetch stage: PC_next=00000000000000000000001010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ac
# pc register: out = 000002a8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101000
# instruction fetch stage: PC=00000000000000000000001010101100
# instruction fetch stage: PC_next=00000000000000000000001010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b0
# pc register: out = 000002ac
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010101100
# instruction fetch stage: PC=00000000000000000000001010110000
# instruction fetch stage: PC_next=00000000000000000000001010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b4
# pc register: out = 000002b0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110000
# instruction fetch stage: PC=00000000000000000000001010110100
# instruction fetch stage: PC_next=00000000000000000000001010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002b8
# pc register: out = 000002b4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010110100
# instruction fetch stage: PC=00000000000000000000001010111000
# instruction fetch stage: PC_next=00000000000000000000001010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002bc
# pc register: out = 000002b8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111000
# instruction fetch stage: PC=00000000000000000000001010111100
# instruction fetch stage: PC_next=00000000000000000000001010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c0
# pc register: out = 000002bc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001010111100
# instruction fetch stage: PC=00000000000000000000001011000000
# instruction fetch stage: PC_next=00000000000000000000001011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c4
# pc register: out = 000002c0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000000
# instruction fetch stage: PC=00000000000000000000001011000100
# instruction fetch stage: PC_next=00000000000000000000001011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002c8
# pc register: out = 000002c4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011000100
# instruction fetch stage: PC=00000000000000000000001011001000
# instruction fetch stage: PC_next=00000000000000000000001011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002cc
# pc register: out = 000002c8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001000
# instruction fetch stage: PC=00000000000000000000001011001100
# instruction fetch stage: PC_next=00000000000000000000001011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d0
# pc register: out = 000002cc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011001100
# instruction fetch stage: PC=00000000000000000000001011010000
# instruction fetch stage: PC_next=00000000000000000000001011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d4
# pc register: out = 000002d0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010000
# instruction fetch stage: PC=00000000000000000000001011010100
# instruction fetch stage: PC_next=00000000000000000000001011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002d8
# pc register: out = 000002d4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011010100
# instruction fetch stage: PC=00000000000000000000001011011000
# instruction fetch stage: PC_next=00000000000000000000001011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002dc
# pc register: out = 000002d8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011000
# instruction fetch stage: PC=00000000000000000000001011011100
# instruction fetch stage: PC_next=00000000000000000000001011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e0
# pc register: out = 000002dc
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011011100
# instruction fetch stage: PC=00000000000000000000001011100000
# instruction fetch stage: PC_next=00000000000000000000001011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e4
# pc register: out = 000002e0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100000
# instruction fetch stage: PC=00000000000000000000001011100100
# instruction fetch stage: PC_next=00000000000000000000001011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002e8
# pc register: out = 000002e4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011100100
# instruction fetch stage: PC=00000000000000000000001011101000
# instruction fetch stage: PC_next=00000000000000000000001011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002ec
# pc register: out = 000002e8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101000
# instruction fetch stage: PC=00000000000000000000001011101100
# instruction fetch stage: PC_next=00000000000000000000001011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f0
# pc register: out = 000002ec
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011101100
# instruction fetch stage: PC=00000000000000000000001011110000
# instruction fetch stage: PC_next=00000000000000000000001011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f4
# pc register: out = 000002f0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110000
# instruction fetch stage: PC=00000000000000000000001011110100
# instruction fetch stage: PC_next=00000000000000000000001011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002f8
# pc register: out = 000002f4
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011110100
# instruction fetch stage: PC=00000000000000000000001011111000
# instruction fetch stage: PC_next=00000000000000000000001011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000002fc
# pc register: out = 000002f8
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000001011111000
# instruction fetch stage: PC=00000000000000000000001011111100
# instruction fetch stage: PC_next=00000000000000000000001011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000300
# pc register: out = 000002fc
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/b_exe
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/branchAddress_exe
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/pc_id
add wave -position 0  sim:/ARMModuleTest/u_ARMModule/pc_id
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 15:36:51 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:51 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 15:36:52 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 15:36:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:52 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Skipping module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 15:36:52 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 15:36:52 on Dec 04,2024, Elapsed time: 0:08:40
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 15:36:52 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1036, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 5025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
do do_sim.tcl
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work work 
# Modifying /home/lotov2000/Documents/arm/arm.mpf
# ARMModuleTest
# src/test/integration.test.v
# inc
# src/hdl
# 10 us
# src/hdl/stages/execution.stage.v
# src/hdl/stages/instruction-fetch.stage.v
# src/hdl/stages/memory.stage.v
# src/hdl/stages/instruction-decode.stage.v
# src/hdl/stages/write-back.stage.v
# src/hdl/stage-registers/memory.stage-register.v
# src/hdl/stage-registers/instruction-decode.stage-register.v
# src/hdl/stage-registers/execution.stage-register.v
# src/hdl/stage-registers/instruction-fetch.stage-register.v
# src/hdl/arm.module.v
# src/hdl/components/val2Generator.component.v
# src/hdl/components/mux2.component.v
# src/hdl/components/condition-check.component.v
# src/hdl/components/instruction-memory.component.v
# src/hdl/components/hazardControlUnit.component.v
# src/hdl/components/pc-register.component.v
# src/hdl/components/alu.component.v
# src/hdl/components/registerWithFreezeAndFlush.component.v
# src/hdl/components/status-register.component.v
# src/hdl/components/register-file.component.v
# src/hdl/components/memory.component.v
# src/hdl/components/neg-register.component.v
# src/hdl/components/pc-adder.component.v
# src/hdl/components/register.component.v
# src/hdl/components/control-unit.component.v
# src/hdl/ARM.v
# src/hdl/ARMDirect.v
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:16 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/execution.stage.v 
# -- Skipping module ExecutionStage
# 
# Top level modules:
# 	ExecutionStage
# End time: 15:38:16 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:16 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-fetch.stage.v 
# -- Skipping module InstructionFetchStage
# 
# Top level modules:
# 	InstructionFetchStage
# End time: 15:38:16 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:16 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/memory.stage.v 
# -- Skipping module MemoryStage
# 
# Top level modules:
# 	MemoryStage
# End time: 15:38:16 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:16 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/instruction-decode.stage.v 
# -- Skipping module InstructionDecodeStage
# 
# Top level modules:
# 	InstructionDecodeStage
# End time: 15:38:16 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:16 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stages/write-back.stage.v 
# -- Skipping module WriteBackStage
# 
# Top level modules:
# 	WriteBackStage
# End time: 15:38:16 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:16 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/memory.stage-register.v 
# -- Skipping module MemoryStageReg
# 
# Top level modules:
# 	MemoryStageReg
# End time: 15:38:16 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:16 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-decode.stage-register.v 
# -- Skipping module InstructionDecodeStageReg
# 
# Top level modules:
# 	InstructionDecodeStageReg
# End time: 15:38:16 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:16 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/execution.stage-register.v 
# -- Skipping module ExecutionStageReg
# 
# Top level modules:
# 	ExecutionStageReg
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/stage-registers/instruction-fetch.stage-register.v 
# -- Skipping module InstructionFetchStageReg
# 
# Top level modules:
# 	InstructionFetchStageReg
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/arm.module.v 
# -- Skipping module ARMModule
# 
# Top level modules:
# 	ARMModule
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/val2Generator.component.v 
# -- Skipping module Val2Generator
# 
# Top level modules:
# 	Val2Generator
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/mux2.component.v 
# -- Skipping module Mux2
# 
# Top level modules:
# 	Mux2
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/condition-check.component.v 
# -- Skipping module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/instruction-memory.component.v 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/hazardControlUnit.component.v 
# -- Skipping module HazardControlUnit
# 
# Top level modules:
# 	HazardControlUnit
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-register.component.v 
# -- Skipping module PCRegister
# 
# Top level modules:
# 	PCRegister
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/alu.component.v 
# -- Skipping module ALU
# 
# Top level modules:
# 	ALU
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/registerWithFreezeAndFlush.component.v 
# -- Skipping module RegisterWithFreezeAndFlush
# 
# Top level modules:
# 	RegisterWithFreezeAndFlush
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/status-register.component.v 
# -- Skipping module StatusRegister
# 
# Top level modules:
# 	StatusRegister
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register-file.component.v 
# -- Skipping module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/memory.component.v 
# -- Skipping module Memory
# 
# Top level modules:
# 	Memory
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/neg-register.component.v 
# -- Skipping module NegRegister
# 
# Top level modules:
# 	NegRegister
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/pc-adder.component.v 
# -- Skipping module PCAdder
# 
# Top level modules:
# 	PCAdder
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/register.component.v 
# -- Skipping module Register
# 
# Top level modules:
# 	Register
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/components/control-unit.component.v 
# -- Skipping module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARM.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+define+SIM" src/hdl/ARMDirect.v 
# -- Compiling module ARM
# 
# Top level modules:
# 	ARM
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:38:17 on Dec 04,2024
# vlog -reportprogress 300 "+acc" -incr -source "+incdir+inc" "+define+SIM" src/test/integration.test.v 
# -- Compiling module ARMModuleTest
# 
# Top level modules:
# 	ARMModuleTest
# End time: 15:38:17 on Dec 04,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 15:38:20 on Dec 04,2024, Elapsed time: 0:01:28
# Errors: 0, Warnings: 1
# vsim -voptargs="+acc" -debugDB ARMModuleTest 
# Start time: 15:38:20 on Dec 04,2024
# Loading work.ARMModuleTest
# Loading work.ARMModule
# Loading work.InstructionFetchStage
# Loading work.Mux2
# Loading work.PCRegister
# Loading work.RegisterWithFreezeAndFlush
# Loading work.PCAdder
# Loading work.InstructionMemory
# Loading work.InstructionFetchStageReg
# Loading work.InstructionDecodeStage
# Loading work.RegisterFile
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.InstructionDecodeStageReg
# Loading work.ExecutionStage
# Loading work.Val2Generator
# Loading work.ALU
# Loading work.ExecutionStageReg
# Loading work.Register
# Loading work.MemoryStage
# Loading work.Memory
# Loading work.MemoryStageReg
# Loading work.WriteBackStage
# Loading work.StatusRegister
# Loading work.NegRegister
# Loading work.HazardControlUnit
# ** Note: (vsim-8900) Creating design debug database vsim.dbg.
# It appears vopt was not run with -debugdb option on this design.
# Advanced Causality and Schematic debug features will not be available.
# pc register: freeze = x
# pc register: in = 00000004
# pc register: out = 00000000
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000000
# instruction fetch stage: PC=00000000000000000000000000000100
# instruction fetch stage: PC_next=00000000000000000000000000000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000008
# pc register: out = 00000004
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000000100
# instruction fetch stage: PC=00000000000000000000000000001000
# instruction fetch stage: PC_next=00000000000000000000000000001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000000c
# pc register: out = 00000008
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001000
# instruction fetch stage: PC=00000000000000000000000000001100
# instruction fetch stage: PC_next=00000000000000000000000000001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000010
# pc register: out = 0000000c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000001100
# instruction fetch stage: PC=00000000000000000000000000010000
# instruction fetch stage: PC_next=00000000000000000000000000010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000014
# pc register: out = 00000010
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010000
# instruction fetch stage: PC=00000000000000000000000000010100
# instruction fetch stage: PC_next=00000000000000000000000000010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000018
# pc register: out = 00000014
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000010100
# instruction fetch stage: PC=00000000000000000000000000011000
# instruction fetch stage: PC_next=00000000000000000000000000011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000001c
# pc register: out = 00000018
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011000
# instruction fetch stage: PC=00000000000000000000000000011100
# instruction fetch stage: PC_next=00000000000000000000000000011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000020
# pc register: out = 0000001c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000011100
# instruction fetch stage: PC=00000000000000000000000000100000
# instruction fetch stage: PC_next=00000000000000000000000000100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000024
# pc register: out = 00000020
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100000
# instruction fetch stage: PC=00000000000000000000000000100100
# instruction fetch stage: PC_next=00000000000000000000000000100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000028
# pc register: out = 00000024
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000100100
# instruction fetch stage: PC=00000000000000000000000000101000
# instruction fetch stage: PC_next=00000000000000000000000000101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000002c
# pc register: out = 00000028
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101000
# instruction fetch stage: PC=00000000000000000000000000101100
# instruction fetch stage: PC_next=00000000000000000000000000101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000030
# pc register: out = 0000002c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000101100
# instruction fetch stage: PC=00000000000000000000000000110000
# instruction fetch stage: PC_next=00000000000000000000000000110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000034
# pc register: out = 00000030
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110000
# instruction fetch stage: PC=00000000000000000000000000110100
# instruction fetch stage: PC_next=00000000000000000000000000110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000038
# pc register: out = 00000034
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000110100
# instruction fetch stage: PC=00000000000000000000000000111000
# instruction fetch stage: PC_next=00000000000000000000000000111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000003c
# pc register: out = 00000038
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111000
# instruction fetch stage: PC=00000000000000000000000000111100
# instruction fetch stage: PC_next=00000000000000000000000000111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000040
# pc register: out = 0000003c
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000000111100
# instruction fetch stage: PC=00000000000000000000000001000000
# instruction fetch stage: PC_next=00000000000000000000000001000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000044
# pc register: out = 00000040
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000000
# instruction fetch stage: PC=00000000000000000000000001000100
# instruction fetch stage: PC_next=00000000000000000000000001000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000048
# pc register: out = 00000044
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001000100
# instruction fetch stage: PC=00000000000000000000000001001000
# instruction fetch stage: PC_next=00000000000000000000000001001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000004c
# pc register: out = 00000048
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001000
# instruction fetch stage: PC=00000000000000000000000001001100
# instruction fetch stage: PC_next=00000000000000000000000001001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000050
# pc register: out = 0000004c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001001100
# instruction fetch stage: PC=00000000000000000000000001010000
# instruction fetch stage: PC_next=00000000000000000000000001010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=      8192
# pc register: freeze = 0
# pc register: in = 00000054
# pc register: out = 00000050
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010000
# instruction fetch stage: PC=00000000000000000000000001010100
# instruction fetch stage: PC_next=00000000000000000000000001010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000058
# pc register: out = 00000054
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001010100
# instruction fetch stage: PC=00000000000000000000000001011000
# instruction fetch stage: PC_next=00000000000000000000000001011000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 0000005c
# pc register: out = 00000058
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011000
# instruction fetch stage: PC=00000000000000000000000001011100
# instruction fetch stage: PC_next=00000000000000000000000001011100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000060
# pc register: out = 0000005c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001011100
# instruction fetch stage: PC=00000000000000000000000001100000
# instruction fetch stage: PC_next=00000000000000000000000001100000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1037, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000064
# pc register: out = 00000060
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100000
# instruction fetch stage: PC=00000000000000000000000001100100
# instruction fetch stage: PC_next=00000000000000000000000001100100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 4, givenAddress=      1040, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000068
# pc register: out = 00000064
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001100100
# instruction fetch stage: PC=00000000000000000000000001101000
# instruction fetch stage: PC_next=00000000000000000000000001101000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 5, givenAddress=      1044, data_in=        10
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 00000068
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101000
# instruction fetch stage: PC=00000000000000000000000001101100
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 6, givenAddress=      1048, data_in=4294967173
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=3221225472
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 2, givenAddress=      1032, data_in=        41
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 3, givenAddress=      1036, data_in=      8192
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 0, givenAddress=      1024, data_in=2147483648
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory component: trueAddress= 1, givenAddress=      1028, data_in=3221225472
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000006c
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000001101100
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 0000006c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001101100
# instruction fetch stage: PC=00000000000000000000000001110000
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000070
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000001110000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 00000074
# pc register: out = 00000070
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110000
# instruction fetch stage: PC=00000000000000000000000001110100
# instruction fetch stage: PC_next=00000000000000000000000001110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000078
# pc register: out = 00000074
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001110100
# instruction fetch stage: PC=00000000000000000000000001111000
# instruction fetch stage: PC_next=00000000000000000000000001111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000007c
# pc register: out = 00000078
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111000
# instruction fetch stage: PC=00000000000000000000000001111100
# instruction fetch stage: PC_next=00000000000000000000000001111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000080
# pc register: out = 0000007c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000001111100
# instruction fetch stage: PC=00000000000000000000000010000000
# instruction fetch stage: PC_next=00000000000000000000000010000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000084
# pc register: out = 00000080
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000000
# instruction fetch stage: PC=00000000000000000000000010000100
# instruction fetch stage: PC_next=00000000000000000000000010000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000088
# pc register: out = 00000084
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010000100
# instruction fetch stage: PC=00000000000000000000000010001000
# instruction fetch stage: PC_next=00000000000000000000000010001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000008c
# pc register: out = 00000088
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001000
# instruction fetch stage: PC=00000000000000000000000010001100
# instruction fetch stage: PC_next=00000000000000000000000010001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000090
# pc register: out = 0000008c
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010001100
# instruction fetch stage: PC=00000000000000000000000010010000
# instruction fetch stage: PC_next=00000000000000000000000010010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000094
# pc register: out = 00000090
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010000
# instruction fetch stage: PC=00000000000000000000000010010100
# instruction fetch stage: PC_next=00000000000000000000000010010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000098
# pc register: out = 00000094
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010010100
# instruction fetch stage: PC=00000000000000000000000010011000
# instruction fetch stage: PC_next=00000000000000000000000010011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000009c
# pc register: out = 00000098
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011000
# instruction fetch stage: PC=00000000000000000000000010011100
# instruction fetch stage: PC_next=00000000000000000000000010011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a0
# pc register: out = 0000009c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010011100
# instruction fetch stage: PC=00000000000000000000000010100000
# instruction fetch stage: PC_next=00000000000000000000000010100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a4
# pc register: out = 000000a0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100000
# instruction fetch stage: PC=00000000000000000000000010100100
# instruction fetch stage: PC_next=00000000000000000000000010100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000a8
# pc register: out = 000000a4
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010100100
# instruction fetch stage: PC=00000000000000000000000010101000
# instruction fetch stage: PC_next=00000000000000000000000010101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ac
# pc register: out = 000000a8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101000
# instruction fetch stage: PC=00000000000000000000000010101100
# instruction fetch stage: PC_next=00000000000000000000000010101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b0
# pc register: out = 000000ac
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010101100
# instruction fetch stage: PC=00000000000000000000000010110000
# instruction fetch stage: PC_next=00000000000000000000000010110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b4
# pc register: out = 000000b0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110000
# instruction fetch stage: PC=00000000000000000000000010110100
# instruction fetch stage: PC_next=00000000000000000000000010110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000b4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010110100
# instruction fetch stage: PC=00000000000000000000000010111000
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# pc register: freeze = 0
# pc register: in = 000000bc
# pc register: out = 000000b8
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111000
# instruction fetch stage: PC=00000000000000000000000010111100
# instruction fetch stage: PC_next=00000000000000000000000010111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c0
# pc register: out = 000000bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000010111100
# instruction fetch stage: PC=00000000000000000000000011000000
# instruction fetch stage: PC_next=00000000000000000000000011000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000b8
# pc register: out = 000000c0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000010111000
# instruction fetch stage: Branch_Taken=1
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000000
# instruction fetch stage: PC=00000000000000000000000011000100
# instruction fetch stage: PC_next=00000000000000000000000011000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000c8
# pc register: out = 000000c4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011000100
# instruction fetch stage: PC=00000000000000000000000011001000
# instruction fetch stage: PC_next=00000000000000000000000011001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000cc
# pc register: out = 000000c8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001000
# instruction fetch stage: PC=00000000000000000000000011001100
# instruction fetch stage: PC_next=00000000000000000000000011001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d0
# pc register: out = 000000cc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011001100
# instruction fetch stage: PC=00000000000000000000000011010000
# instruction fetch stage: PC_next=00000000000000000000000011010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d4
# pc register: out = 000000d0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010000
# instruction fetch stage: PC=00000000000000000000000011010100
# instruction fetch stage: PC_next=00000000000000000000000011010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000d8
# pc register: out = 000000d4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011010100
# instruction fetch stage: PC=00000000000000000000000011011000
# instruction fetch stage: PC_next=00000000000000000000000011011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000dc
# pc register: out = 000000d8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011000
# instruction fetch stage: PC=00000000000000000000000011011100
# instruction fetch stage: PC_next=00000000000000000000000011011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e0
# pc register: out = 000000dc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011011100
# instruction fetch stage: PC=00000000000000000000000011100000
# instruction fetch stage: PC_next=00000000000000000000000011100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e4
# pc register: out = 000000e0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100000
# instruction fetch stage: PC=00000000000000000000000011100100
# instruction fetch stage: PC_next=00000000000000000000000011100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000e8
# pc register: out = 000000e4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011100100
# instruction fetch stage: PC=00000000000000000000000011101000
# instruction fetch stage: PC_next=00000000000000000000000011101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000ec
# pc register: out = 000000e8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101000
# instruction fetch stage: PC=00000000000000000000000011101100
# instruction fetch stage: PC_next=00000000000000000000000011101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f0
# pc register: out = 000000ec
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011101100
# instruction fetch stage: PC=00000000000000000000000011110000
# instruction fetch stage: PC_next=00000000000000000000000011110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f4
# pc register: out = 000000f0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110000
# instruction fetch stage: PC=00000000000000000000000011110100
# instruction fetch stage: PC_next=00000000000000000000000011110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000f8
# pc register: out = 000000f4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011110100
# instruction fetch stage: PC=00000000000000000000000011111000
# instruction fetch stage: PC_next=00000000000000000000000011111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000000fc
# pc register: out = 000000f8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111000
# instruction fetch stage: PC=00000000000000000000000011111100
# instruction fetch stage: PC_next=00000000000000000000000011111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000100
# pc register: out = 000000fc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000011111100
# instruction fetch stage: PC=00000000000000000000000100000000
# instruction fetch stage: PC_next=00000000000000000000000100000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000104
# pc register: out = 00000100
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000000
# instruction fetch stage: PC=00000000000000000000000100000100
# instruction fetch stage: PC_next=00000000000000000000000100000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000108
# pc register: out = 00000104
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100000100
# instruction fetch stage: PC=00000000000000000000000100001000
# instruction fetch stage: PC_next=00000000000000000000000100001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000010c
# pc register: out = 00000108
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001000
# instruction fetch stage: PC=00000000000000000000000100001100
# instruction fetch stage: PC_next=00000000000000000000000100001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000110
# pc register: out = 0000010c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100001100
# instruction fetch stage: PC=00000000000000000000000100010000
# instruction fetch stage: PC_next=00000000000000000000000100010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000114
# pc register: out = 00000110
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010000
# instruction fetch stage: PC=00000000000000000000000100010100
# instruction fetch stage: PC_next=00000000000000000000000100010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000118
# pc register: out = 00000114
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100010100
# instruction fetch stage: PC=00000000000000000000000100011000
# instruction fetch stage: PC_next=00000000000000000000000100011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000011c
# pc register: out = 00000118
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011000
# instruction fetch stage: PC=00000000000000000000000100011100
# instruction fetch stage: PC_next=00000000000000000000000100011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000120
# pc register: out = 0000011c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100011100
# instruction fetch stage: PC=00000000000000000000000100100000
# instruction fetch stage: PC_next=00000000000000000000000100100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000124
# pc register: out = 00000120
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100000
# instruction fetch stage: PC=00000000000000000000000100100100
# instruction fetch stage: PC_next=00000000000000000000000100100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000128
# pc register: out = 00000124
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100100100
# instruction fetch stage: PC=00000000000000000000000100101000
# instruction fetch stage: PC_next=00000000000000000000000100101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000012c
# pc register: out = 00000128
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101000
# instruction fetch stage: PC=00000000000000000000000100101100
# instruction fetch stage: PC_next=00000000000000000000000100101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000130
# pc register: out = 0000012c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100101100
# instruction fetch stage: PC=00000000000000000000000100110000
# instruction fetch stage: PC_next=00000000000000000000000100110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000134
# pc register: out = 00000130
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110000
# instruction fetch stage: PC=00000000000000000000000100110100
# instruction fetch stage: PC_next=00000000000000000000000100110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000138
# pc register: out = 00000134
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100110100
# instruction fetch stage: PC=00000000000000000000000100111000
# instruction fetch stage: PC_next=00000000000000000000000100111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000013c
# pc register: out = 00000138
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111000
# instruction fetch stage: PC=00000000000000000000000100111100
# instruction fetch stage: PC_next=00000000000000000000000100111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000140
# pc register: out = 0000013c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000100111100
# instruction fetch stage: PC=00000000000000000000000101000000
# instruction fetch stage: PC_next=00000000000000000000000101000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000144
# pc register: out = 00000140
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000000
# instruction fetch stage: PC=00000000000000000000000101000100
# instruction fetch stage: PC_next=00000000000000000000000101000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000148
# pc register: out = 00000144
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101000100
# instruction fetch stage: PC=00000000000000000000000101001000
# instruction fetch stage: PC_next=00000000000000000000000101001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000014c
# pc register: out = 00000148
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001000
# instruction fetch stage: PC=00000000000000000000000101001100
# instruction fetch stage: PC_next=00000000000000000000000101001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000150
# pc register: out = 0000014c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101001100
# instruction fetch stage: PC=00000000000000000000000101010000
# instruction fetch stage: PC_next=00000000000000000000000101010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000154
# pc register: out = 00000150
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010000
# instruction fetch stage: PC=00000000000000000000000101010100
# instruction fetch stage: PC_next=00000000000000000000000101010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000158
# pc register: out = 00000154
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101010100
# instruction fetch stage: PC=00000000000000000000000101011000
# instruction fetch stage: PC_next=00000000000000000000000101011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000015c
# pc register: out = 00000158
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011000
# instruction fetch stage: PC=00000000000000000000000101011100
# instruction fetch stage: PC_next=00000000000000000000000101011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000160
# pc register: out = 0000015c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101011100
# instruction fetch stage: PC=00000000000000000000000101100000
# instruction fetch stage: PC_next=00000000000000000000000101100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000164
# pc register: out = 00000160
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100000
# instruction fetch stage: PC=00000000000000000000000101100100
# instruction fetch stage: PC_next=00000000000000000000000101100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000168
# pc register: out = 00000164
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101100100
# instruction fetch stage: PC=00000000000000000000000101101000
# instruction fetch stage: PC_next=00000000000000000000000101101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000016c
# pc register: out = 00000168
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101000
# instruction fetch stage: PC=00000000000000000000000101101100
# instruction fetch stage: PC_next=00000000000000000000000101101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000170
# pc register: out = 0000016c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101101100
# instruction fetch stage: PC=00000000000000000000000101110000
# instruction fetch stage: PC_next=00000000000000000000000101110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000174
# pc register: out = 00000170
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110000
# instruction fetch stage: PC=00000000000000000000000101110100
# instruction fetch stage: PC_next=00000000000000000000000101110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000178
# pc register: out = 00000174
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101110100
# instruction fetch stage: PC=00000000000000000000000101111000
# instruction fetch stage: PC_next=00000000000000000000000101111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000017c
# pc register: out = 00000178
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111000
# instruction fetch stage: PC=00000000000000000000000101111100
# instruction fetch stage: PC_next=00000000000000000000000101111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000180
# pc register: out = 0000017c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000101111100
# instruction fetch stage: PC=00000000000000000000000110000000
# instruction fetch stage: PC_next=00000000000000000000000110000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000184
# pc register: out = 00000180
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000000
# instruction fetch stage: PC=00000000000000000000000110000100
# instruction fetch stage: PC_next=00000000000000000000000110000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000188
# pc register: out = 00000184
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110000100
# instruction fetch stage: PC=00000000000000000000000110001000
# instruction fetch stage: PC_next=00000000000000000000000110001000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000018c
# pc register: out = 00000188
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001000
# instruction fetch stage: PC=00000000000000000000000110001100
# instruction fetch stage: PC_next=00000000000000000000000110001100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000190
# pc register: out = 0000018c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110001100
# instruction fetch stage: PC=00000000000000000000000110010000
# instruction fetch stage: PC_next=00000000000000000000000110010000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000194
# pc register: out = 00000190
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010000
# instruction fetch stage: PC=00000000000000000000000110010100
# instruction fetch stage: PC_next=00000000000000000000000110010100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 00000198
# pc register: out = 00000194
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110010100
# instruction fetch stage: PC=00000000000000000000000110011000
# instruction fetch stage: PC_next=00000000000000000000000110011000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 0000019c
# pc register: out = 00000198
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011000
# instruction fetch stage: PC=00000000000000000000000110011100
# instruction fetch stage: PC_next=00000000000000000000000110011100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a0
# pc register: out = 0000019c
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110011100
# instruction fetch stage: PC=00000000000000000000000110100000
# instruction fetch stage: PC_next=00000000000000000000000110100000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a4
# pc register: out = 000001a0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100000
# instruction fetch stage: PC=00000000000000000000000110100100
# instruction fetch stage: PC_next=00000000000000000000000110100100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001a8
# pc register: out = 000001a4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110100100
# instruction fetch stage: PC=00000000000000000000000110101000
# instruction fetch stage: PC_next=00000000000000000000000110101000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001ac
# pc register: out = 000001a8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101000
# instruction fetch stage: PC=00000000000000000000000110101100
# instruction fetch stage: PC_next=00000000000000000000000110101100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b0
# pc register: out = 000001ac
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110101100
# instruction fetch stage: PC=00000000000000000000000110110000
# instruction fetch stage: PC_next=00000000000000000000000110110000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b4
# pc register: out = 000001b0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110000
# instruction fetch stage: PC=00000000000000000000000110110100
# instruction fetch stage: PC_next=00000000000000000000000110110100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001b8
# pc register: out = 000001b4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110110100
# instruction fetch stage: PC=00000000000000000000000110111000
# instruction fetch stage: PC_next=00000000000000000000000110111000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001bc
# pc register: out = 000001b8
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111000
# instruction fetch stage: PC=00000000000000000000000110111100
# instruction fetch stage: PC_next=00000000000000000000000110111100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c0
# pc register: out = 000001bc
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000110111100
# instruction fetch stage: PC=00000000000000000000000111000000
# instruction fetch stage: PC_next=00000000000000000000000111000000
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c4
# pc register: out = 000001c0
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 1
# memory stage register: writebackEnabled = 0
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# memory stage register: writebackEnabled_in = 0
# memory stage register: writebackEnabled = 1
# hazard control: writeBackEnabled_exe = 0
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 1
# instruction decode stage: control = 0
# instruction decode stage: control = 0
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# posedge clk
# instruction fetch stage: PC_current=00000000000000000000000111000000
# instruction fetch stage: PC=00000000000000000000000111000100
# instruction fetch stage: PC_next=00000000000000000000000111000100
# instruction fetch stage: Branch_Taken=0
# pc register: freeze = 0
# pc register: in = 000001c8
# pc register: out = 000001c4
# hazard control: writeBackEnabled_exe = 1
# hazard control: writeBackEnabled_mem = 0
# instruction stage register: writebackEnabled_in = 0
# instruction decode stage: control = 1
# instruction decode stage: control = 1
# instruction decode stage: controlUnit's writeBackEnabled = 1
# negedge clk
# ** Note: $stop    : src/test/integration.test.v(28)
#    Time: 10025 ps  Iteration: 0  Instance: /ARMModuleTest
# Break in Module ARMModuleTest at src/test/integration.test.v line 28
